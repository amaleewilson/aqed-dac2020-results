-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gradient_xy_calc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    frame3_a_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    frame3_a_V_empty_n : IN STD_LOGIC;
    frame3_a_V_read : OUT STD_LOGIC;
    gradient_x_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    gradient_x_V_full_n : IN STD_LOGIC;
    gradient_x_V_write : OUT STD_LOGIC;
    gradient_y_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    gradient_y_V_full_n : IN STD_LOGIC;
    gradient_y_V_write : OUT STD_LOGIC );
end;


architecture behav of gradient_xy_calc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv7_54 : STD_LOGIC_VECTOR (6 downto 0) := "1010100";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv65_155555556 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000101010101010101010101010101010110";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv65_0 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal buf_V_1_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal buf_V_1_1_ce0 : STD_LOGIC;
    signal buf_V_1_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_V_1_1_ce1 : STD_LOGIC;
    signal buf_V_1_1_we1 : STD_LOGIC;
    signal buf_V_1_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal buf_V_1_2_ce0 : STD_LOGIC;
    signal buf_V_1_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_V_1_2_ce1 : STD_LOGIC;
    signal buf_V_1_2_we1 : STD_LOGIC;
    signal buf_V_1_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal buf_V_1_3_ce0 : STD_LOGIC;
    signal buf_V_1_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_V_1_3_ce1 : STD_LOGIC;
    signal buf_V_1_3_we1 : STD_LOGIC;
    signal buf_V_1_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal buf_V_1_4_ce0 : STD_LOGIC;
    signal buf_V_1_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_V_1_4_ce1 : STD_LOGIC;
    signal buf_V_1_4_we1 : STD_LOGIC;
    signal frame3_a_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_flatten_reg_1218 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1265 : STD_LOGIC_VECTOR (0 downto 0);
    signal gradient_x_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal or_cond1_mid2_reg_1227 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_mid2_reg_1227_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_reg_1274 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_reg_1274_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_1278 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_1278_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gradient_y_V_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_277 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_reg_288 : STD_LOGIC_VECTOR (2 downto 0);
    signal c_reg_299 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_flatten_fu_334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op104_read_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_predicate_op200_write_state6 : BOOLEAN;
    signal ap_predicate_op210_write_state6 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_flatten_reg_1218_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_340_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal or_cond1_mid2_fu_394_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_mid2_reg_1227_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_mid2_reg_1227_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_mid2_fu_442_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_V_1_1_addr_reg_1236 : STD_LOGIC_VECTOR (3 downto 0);
    signal buf_V_1_2_addr_reg_1242 : STD_LOGIC_VECTOR (3 downto 0);
    signal buf_V_1_3_addr_reg_1248 : STD_LOGIC_VECTOR (3 downto 0);
    signal buf_V_1_4_addr_reg_1254 : STD_LOGIC_VECTOR (3 downto 0);
    signal buf_V_1_4_addr_reg_1254_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_8_fu_458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1260 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1260_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1265_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_fu_566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_reg_1274_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_reg_1274_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_1278_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_1278_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal c_1_fu_594_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal window_val_2_V_4_reg_1287 : STD_LOGIC_VECTOR (16 downto 0);
    signal window_val_3_V_4_reg_1292 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp3_fu_756_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_reg_1297 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_30_4_fu_957_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_30_4_reg_1302 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_33_4_fu_991_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_33_4_reg_1307 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_reg_1312 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_reg_1312_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_reg_1318 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_reg_1318_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal mul3_fu_1015_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal mul3_reg_1324 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_62_reg_1329 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_fu_1034_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal mul_reg_1334 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_65_reg_1339 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter2_state4 : STD_LOGIC;
    signal tmp_7_fu_450_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_1085_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_13_fu_1128_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal window_val_0_V_2_fu_132 : STD_LOGIC_VECTOR (16 downto 0);
    signal window_val_0_V_3_fu_136 : STD_LOGIC_VECTOR (16 downto 0);
    signal window_val_V_0_4_2_fu_701_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal window_val_1_V_2_fu_140 : STD_LOGIC_VECTOR (16 downto 0);
    signal window_val_1_V_3_fu_144 : STD_LOGIC_VECTOR (16 downto 0);
    signal window_val_V_1_4_2_fu_694_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal window_val_2_V_0_fu_148 : STD_LOGIC_VECTOR (16 downto 0);
    signal window_val_2_V_1_fu_152 : STD_LOGIC_VECTOR (16 downto 0);
    signal window_val_2_V_2_fu_156 : STD_LOGIC_VECTOR (16 downto 0);
    signal window_val_2_V_3_fu_160 : STD_LOGIC_VECTOR (16 downto 0);
    signal window_val_V_2_4_2_fu_833_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal window_val_3_V_2_fu_164 : STD_LOGIC_VECTOR (16 downto 0);
    signal window_val_3_V_3_fu_168 : STD_LOGIC_VECTOR (16 downto 0);
    signal window_val_V_3_4_2_fu_827_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal window_val_4_V_2_fu_172 : STD_LOGIC_VECTOR (16 downto 0);
    signal window_val_4_V_3_fu_176 : STD_LOGIC_VECTOR (16 downto 0);
    signal window_val_4_V_4_fu_839_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal smallbuf_V_4_1_fu_180 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_smallbuf_V_4_1_fu_625_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal smallbuf_4_V_cast_fu_645_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_320_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_s_fu_360_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_mid1_fu_366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_380_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_mid1_fu_388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_402_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_41_fu_418_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp2_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp3_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_mid2_fu_352_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_mid2_fu_372_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_572_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_mid2_fu_434_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal smallbuf_4_V_fu_637_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal window_val_1_V_4_fu_664_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal window_val_0_V_4_fu_654_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_24_fu_718_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_shl_fu_730_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl_cast_fu_738_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_3216_1_fu_742_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_11_fu_726_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_165_1_fu_748_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_141_4_fu_817_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_fu_861_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_shl1_fu_873_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl1_cast_fu_881_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_2918_1_fu_885_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_25_fu_899_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_26_fu_911_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_54_cast_fu_923_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_2918_4_fu_927_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_27_fu_933_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_3_fu_869_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_161_1_fu_891_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_161_4_fu_941_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_161_3_fu_907_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_fu_945_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_951_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_cast_fu_963_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_55_cast_fu_963_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_3216_4_fu_967_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_28_fu_973_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_165_4_fu_981_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_165_3_fu_919_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_fu_985_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul3_fu_1015_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_fu_1034_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal neg_mul4_fu_1050_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_61_fu_1055_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_29_fu_1065_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_1069_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_fu_1072_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal neg_ti9_fu_1079_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal neg_mul_fu_1093_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_64_fu_1098_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_32_fu_1108_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_1112_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_1115_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal neg_ti_fu_1122_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_302 : BOOLEAN;

    component gradient_xy_calc_cud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    buf_V_1_1_U : component gradient_xy_calc_cud
    generic map (
        DataWidth => 32,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_V_1_1_address0,
        ce0 => buf_V_1_1_ce0,
        q0 => buf_V_1_1_q0,
        address1 => buf_V_1_1_addr_reg_1236,
        ce1 => buf_V_1_1_ce1,
        we1 => buf_V_1_1_we1,
        d1 => buf_V_1_2_q0);

    buf_V_1_2_U : component gradient_xy_calc_cud
    generic map (
        DataWidth => 32,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_V_1_2_address0,
        ce0 => buf_V_1_2_ce0,
        q0 => buf_V_1_2_q0,
        address1 => buf_V_1_2_addr_reg_1242,
        ce1 => buf_V_1_2_ce1,
        we1 => buf_V_1_2_we1,
        d1 => buf_V_1_3_q0);

    buf_V_1_3_U : component gradient_xy_calc_cud
    generic map (
        DataWidth => 32,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_V_1_3_address0,
        ce0 => buf_V_1_3_ce0,
        q0 => buf_V_1_3_q0,
        address1 => buf_V_1_3_addr_reg_1248,
        ce1 => buf_V_1_3_ce1,
        we1 => buf_V_1_3_we1,
        d1 => buf_V_1_4_q0);

    buf_V_1_4_U : component gradient_xy_calc_cud
    generic map (
        DataWidth => 32,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_V_1_4_address0,
        ce0 => buf_V_1_4_ce0,
        q0 => buf_V_1_4_q0,
        address1 => buf_V_1_4_addr_reg_1254_pp0_iter1_reg,
        ce1 => buf_V_1_4_ce1,
        we1 => buf_V_1_4_we1,
        d1 => smallbuf_V_4_1_fu_180);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_fu_334_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter2_state4)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c_reg_299_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_334_p2 = ap_const_lv1_0))) then 
                c_reg_299 <= c_1_fu_594_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c_reg_299 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_277_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_334_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_277 <= indvar_flatten_next_fu_340_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_277 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    r_reg_288_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_334_p2 = ap_const_lv1_0))) then 
                r_reg_288 <= r_mid2_fu_442_p3;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                r_reg_288 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    smallbuf_V_4_1_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_302)) then
                if ((ap_predicate_op104_read_state3 = ap_const_boolean_1)) then 
                    smallbuf_V_4_1_fu_180 <= smallbuf_4_V_cast_fu_645_p1;
                elsif (((or_cond_reg_1265 = ap_const_lv1_0) and (exitcond_flatten_reg_1218 = ap_const_lv1_0))) then 
                    smallbuf_V_4_1_fu_180 <= p_smallbuf_V_4_1_fu_625_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_334_p2 = ap_const_lv1_0))) then
                buf_V_1_1_addr_reg_1236 <= tmp_7_fu_450_p1(4 - 1 downto 0);
                buf_V_1_2_addr_reg_1242 <= tmp_7_fu_450_p1(4 - 1 downto 0);
                buf_V_1_3_addr_reg_1248 <= tmp_7_fu_450_p1(4 - 1 downto 0);
                buf_V_1_4_addr_reg_1254 <= tmp_7_fu_450_p1(4 - 1 downto 0);
                or_cond1_mid2_reg_1227 <= or_cond1_mid2_fu_394_p3;
                or_cond_reg_1265 <= or_cond_fu_464_p2;
                tmp_8_reg_1260 <= tmp_8_fu_458_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buf_V_1_4_addr_reg_1254_pp0_iter1_reg <= buf_V_1_4_addr_reg_1254;
                exitcond_flatten_reg_1218 <= exitcond_flatten_fu_334_p2;
                exitcond_flatten_reg_1218_pp0_iter1_reg <= exitcond_flatten_reg_1218;
                or_cond1_mid2_reg_1227_pp0_iter1_reg <= or_cond1_mid2_reg_1227;
                or_cond4_reg_1278_pp0_iter1_reg <= or_cond4_reg_1278;
                or_cond_reg_1265_pp0_iter1_reg <= or_cond_reg_1265;
                tmp_58_reg_1274_pp0_iter1_reg <= tmp_58_reg_1274;
                tmp_8_reg_1260_pp0_iter1_reg <= tmp_8_reg_1260;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond1_mid2_reg_1227_pp0_iter2_reg = ap_const_lv1_1) and (tmp_58_reg_1274_pp0_iter2_reg = ap_const_lv1_0))) then
                    mul3_reg_1324(64 downto 11) <= mul3_fu_1015_p2(64 downto 11);
                    mul_reg_1334(64 downto 11) <= mul_fu_1034_p2(64 downto 11);
                tmp_62_reg_1329 <= mul3_fu_1015_p2(64 downto 36);
                tmp_65_reg_1339 <= mul_fu_1034_p2(64 downto 36);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                or_cond1_mid2_reg_1227_pp0_iter2_reg <= or_cond1_mid2_reg_1227_pp0_iter1_reg;
                or_cond1_mid2_reg_1227_pp0_iter3_reg <= or_cond1_mid2_reg_1227_pp0_iter2_reg;
                or_cond4_reg_1278_pp0_iter2_reg <= or_cond4_reg_1278_pp0_iter1_reg;
                or_cond4_reg_1278_pp0_iter3_reg <= or_cond4_reg_1278_pp0_iter2_reg;
                tmp_58_reg_1274_pp0_iter2_reg <= tmp_58_reg_1274_pp0_iter1_reg;
                tmp_58_reg_1274_pp0_iter3_reg <= tmp_58_reg_1274_pp0_iter2_reg;
                tmp_60_reg_1312_pp0_iter3_reg <= tmp_60_reg_1312;
                tmp_63_reg_1318_pp0_iter3_reg <= tmp_63_reg_1318;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((tmp_58_fu_566_p2 = ap_const_lv1_1) and (exitcond_flatten_fu_334_p2 = ap_const_lv1_0)) or ((or_cond1_mid2_fu_394_p3 = ap_const_lv1_0) and (exitcond_flatten_fu_334_p2 = ap_const_lv1_0))))) then
                or_cond4_reg_1278 <= or_cond4_fu_588_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond1_mid2_reg_1227_pp0_iter1_reg = ap_const_lv1_1) and (tmp_58_reg_1274_pp0_iter1_reg = ap_const_lv1_0) and (exitcond_flatten_reg_1218_pp0_iter1_reg = ap_const_lv1_0))) then
                    p_Val2_30_4_reg_1302(31 downto 11) <= p_Val2_30_4_fu_957_p2(31 downto 11);
                    p_Val2_33_4_reg_1307(31 downto 11) <= p_Val2_33_4_fu_991_p2(31 downto 11);
                tmp_60_reg_1312 <= p_Val2_30_4_fu_957_p2(31 downto 31);
                tmp_63_reg_1318 <= p_Val2_33_4_fu_991_p2(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond1_mid2_reg_1227 = ap_const_lv1_1) and (tmp_58_reg_1274 = ap_const_lv1_0) and (exitcond_flatten_reg_1218 = ap_const_lv1_0))) then
                    tmp3_reg_1297(31 downto 11) <= tmp3_fu_756_p2(31 downto 11);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond1_mid2_fu_394_p3 = ap_const_lv1_1) and (exitcond_flatten_fu_334_p2 = ap_const_lv1_0))) then
                tmp_58_reg_1274 <= tmp_58_fu_566_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                window_val_0_V_2_fu_132 <= window_val_0_V_3_fu_136;
                window_val_1_V_2_fu_140 <= window_val_1_V_3_fu_144;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1218 = ap_const_lv1_0))) then
                window_val_0_V_3_fu_136 <= window_val_V_0_4_2_fu_701_p3;
                window_val_1_V_3_fu_144 <= window_val_V_1_4_2_fu_694_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                window_val_2_V_0_fu_148 <= window_val_2_V_1_fu_152;
                window_val_2_V_1_fu_152 <= window_val_2_V_2_fu_156;
                window_val_2_V_2_fu_156 <= window_val_2_V_3_fu_160;
                window_val_3_V_2_fu_164 <= window_val_3_V_3_fu_168;
                window_val_4_V_2_fu_172 <= window_val_4_V_3_fu_176;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1218_pp0_iter1_reg = ap_const_lv1_0))) then
                window_val_2_V_3_fu_160 <= window_val_V_2_4_2_fu_833_p3;
                window_val_3_V_3_fu_168 <= window_val_V_3_4_2_fu_827_p3;
                window_val_4_V_3_fu_176 <= window_val_4_V_4_fu_839_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_1265 = ap_const_lv1_1) and (exitcond_flatten_reg_1218 = ap_const_lv1_0))) then
                window_val_2_V_4_reg_1287 <= buf_V_1_3_q0(27 downto 11);
                window_val_3_V_4_reg_1292 <= buf_V_1_4_q0(27 downto 11);
            end if;
        end if;
    end process;
    tmp3_reg_1297(10 downto 0) <= "00000000000";
    p_Val2_30_4_reg_1302(10 downto 0) <= "00000000000";
    p_Val2_33_4_reg_1307(10 downto 0) <= "00000000000";
    mul3_reg_1324(10 downto 0) <= "00000000000";
    mul_reg_1334(10 downto 0) <= "00000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state7 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(frame3_a_V_empty_n, gradient_x_V_full_n, gradient_y_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_predicate_op104_read_state3, ap_predicate_op200_write_state6, ap_predicate_op210_write_state6)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (((gradient_y_V_full_n = ap_const_logic_0) and (ap_predicate_op210_write_state6 = ap_const_boolean_1)) or ((gradient_y_V_full_n = ap_const_logic_0) and (ap_predicate_op200_write_state6 = ap_const_boolean_1)) or ((gradient_x_V_full_n = ap_const_logic_0) and (ap_predicate_op210_write_state6 = ap_const_boolean_1)) or ((gradient_x_V_full_n = ap_const_logic_0) and (ap_predicate_op200_write_state6 = ap_const_boolean_1)))) or ((frame3_a_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op104_read_state3 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(frame3_a_V_empty_n, gradient_x_V_full_n, gradient_y_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_predicate_op104_read_state3, ap_predicate_op200_write_state6, ap_predicate_op210_write_state6)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (((gradient_y_V_full_n = ap_const_logic_0) and (ap_predicate_op210_write_state6 = ap_const_boolean_1)) or ((gradient_y_V_full_n = ap_const_logic_0) and (ap_predicate_op200_write_state6 = ap_const_boolean_1)) or ((gradient_x_V_full_n = ap_const_logic_0) and (ap_predicate_op210_write_state6 = ap_const_boolean_1)) or ((gradient_x_V_full_n = ap_const_logic_0) and (ap_predicate_op200_write_state6 = ap_const_boolean_1)))) or ((frame3_a_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op104_read_state3 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(frame3_a_V_empty_n, gradient_x_V_full_n, gradient_y_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_predicate_op104_read_state3, ap_predicate_op200_write_state6, ap_predicate_op210_write_state6)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (((gradient_y_V_full_n = ap_const_logic_0) and (ap_predicate_op210_write_state6 = ap_const_boolean_1)) or ((gradient_y_V_full_n = ap_const_logic_0) and (ap_predicate_op200_write_state6 = ap_const_boolean_1)) or ((gradient_x_V_full_n = ap_const_logic_0) and (ap_predicate_op210_write_state6 = ap_const_boolean_1)) or ((gradient_x_V_full_n = ap_const_logic_0) and (ap_predicate_op200_write_state6 = ap_const_boolean_1)))) or ((frame3_a_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op104_read_state3 = ap_const_boolean_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(frame3_a_V_empty_n, ap_predicate_op104_read_state3)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((frame3_a_V_empty_n = ap_const_logic_0) and (ap_predicate_op104_read_state3 = ap_const_boolean_1));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter4_assign_proc : process(gradient_x_V_full_n, gradient_y_V_full_n, ap_predicate_op200_write_state6, ap_predicate_op210_write_state6)
    begin
                ap_block_state6_pp0_stage0_iter4 <= (((gradient_y_V_full_n = ap_const_logic_0) and (ap_predicate_op210_write_state6 = ap_const_boolean_1)) or ((gradient_y_V_full_n = ap_const_logic_0) and (ap_predicate_op200_write_state6 = ap_const_boolean_1)) or ((gradient_x_V_full_n = ap_const_logic_0) and (ap_predicate_op210_write_state6 = ap_const_boolean_1)) or ((gradient_x_V_full_n = ap_const_logic_0) and (ap_predicate_op200_write_state6 = ap_const_boolean_1)));
    end process;


    ap_condition_302_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_302 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_pp0_exit_iter2_state4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter2_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter2_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op104_read_state3_assign_proc : process(exitcond_flatten_reg_1218, or_cond_reg_1265)
    begin
                ap_predicate_op104_read_state3 <= ((or_cond_reg_1265 = ap_const_lv1_1) and (exitcond_flatten_reg_1218 = ap_const_lv1_0));
    end process;


    ap_predicate_op200_write_state6_assign_proc : process(or_cond1_mid2_reg_1227_pp0_iter3_reg, tmp_58_reg_1274_pp0_iter3_reg)
    begin
                ap_predicate_op200_write_state6 <= ((or_cond1_mid2_reg_1227_pp0_iter3_reg = ap_const_lv1_1) and (tmp_58_reg_1274_pp0_iter3_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op210_write_state6_assign_proc : process(or_cond1_mid2_reg_1227_pp0_iter3_reg, tmp_58_reg_1274_pp0_iter3_reg, or_cond4_reg_1278_pp0_iter3_reg)
    begin
                ap_predicate_op210_write_state6 <= (((or_cond4_reg_1278_pp0_iter3_reg = ap_const_lv1_1) and (tmp_58_reg_1274_pp0_iter3_reg = ap_const_lv1_1)) or ((or_cond4_reg_1278_pp0_iter3_reg = ap_const_lv1_1) and (or_cond1_mid2_reg_1227_pp0_iter3_reg = ap_const_lv1_0)));
    end process;

    ap_ready <= internal_ap_ready;
    buf_V_1_1_address0 <= tmp_7_fu_450_p1(4 - 1 downto 0);

    buf_V_1_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_1_1_ce0 <= ap_const_logic_1;
        else 
            buf_V_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_1_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1218, or_cond_reg_1265, ap_block_pp0_stage0_11001, tmp_8_reg_1260)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_1260 = ap_const_lv1_1) and (or_cond_reg_1265 = ap_const_lv1_0) and (exitcond_flatten_reg_1218 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_1265 = ap_const_lv1_1) and (exitcond_flatten_reg_1218 = ap_const_lv1_0)))) then 
            buf_V_1_1_ce1 <= ap_const_logic_1;
        else 
            buf_V_1_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_1_1_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1218, or_cond_reg_1265, ap_block_pp0_stage0_11001, tmp_8_reg_1260)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_1260 = ap_const_lv1_1) and (or_cond_reg_1265 = ap_const_lv1_0) and (exitcond_flatten_reg_1218 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_1265 = ap_const_lv1_1) and (exitcond_flatten_reg_1218 = ap_const_lv1_0)))) then 
            buf_V_1_1_we1 <= ap_const_logic_1;
        else 
            buf_V_1_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_1_2_address0 <= tmp_7_fu_450_p1(4 - 1 downto 0);

    buf_V_1_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_1_2_ce0 <= ap_const_logic_1;
        else 
            buf_V_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_1_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1218, or_cond_reg_1265, ap_block_pp0_stage0_11001, tmp_8_reg_1260)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_1260 = ap_const_lv1_1) and (or_cond_reg_1265 = ap_const_lv1_0) and (exitcond_flatten_reg_1218 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_1265 = ap_const_lv1_1) and (exitcond_flatten_reg_1218 = ap_const_lv1_0)))) then 
            buf_V_1_2_ce1 <= ap_const_logic_1;
        else 
            buf_V_1_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_1_2_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1218, or_cond_reg_1265, ap_block_pp0_stage0_11001, tmp_8_reg_1260)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_1260 = ap_const_lv1_1) and (or_cond_reg_1265 = ap_const_lv1_0) and (exitcond_flatten_reg_1218 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_1265 = ap_const_lv1_1) and (exitcond_flatten_reg_1218 = ap_const_lv1_0)))) then 
            buf_V_1_2_we1 <= ap_const_logic_1;
        else 
            buf_V_1_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_1_3_address0 <= tmp_7_fu_450_p1(4 - 1 downto 0);

    buf_V_1_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_1_3_ce0 <= ap_const_logic_1;
        else 
            buf_V_1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_1_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1218, or_cond_reg_1265, ap_block_pp0_stage0_11001, tmp_8_reg_1260)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_1260 = ap_const_lv1_1) and (or_cond_reg_1265 = ap_const_lv1_0) and (exitcond_flatten_reg_1218 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_1265 = ap_const_lv1_1) and (exitcond_flatten_reg_1218 = ap_const_lv1_0)))) then 
            buf_V_1_3_ce1 <= ap_const_logic_1;
        else 
            buf_V_1_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_1_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1218, or_cond_reg_1265, ap_block_pp0_stage0_11001, tmp_8_reg_1260)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_1260 = ap_const_lv1_1) and (or_cond_reg_1265 = ap_const_lv1_0) and (exitcond_flatten_reg_1218 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_1265 = ap_const_lv1_1) and (exitcond_flatten_reg_1218 = ap_const_lv1_0)))) then 
            buf_V_1_3_we1 <= ap_const_logic_1;
        else 
            buf_V_1_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_1_4_address0 <= tmp_7_fu_450_p1(4 - 1 downto 0);

    buf_V_1_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_1_4_ce0 <= ap_const_logic_1;
        else 
            buf_V_1_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_1_4_ce1_assign_proc : process(ap_block_pp0_stage0_11001, exitcond_flatten_reg_1218_pp0_iter1_reg, tmp_8_reg_1260_pp0_iter1_reg, or_cond_reg_1265_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_1265_pp0_iter1_reg = ap_const_lv1_1) and (exitcond_flatten_reg_1218_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_1260_pp0_iter1_reg = ap_const_lv1_1) and (or_cond_reg_1265_pp0_iter1_reg = ap_const_lv1_0) and (exitcond_flatten_reg_1218_pp0_iter1_reg = ap_const_lv1_0)))) then 
            buf_V_1_4_ce1 <= ap_const_logic_1;
        else 
            buf_V_1_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_1_4_we1_assign_proc : process(ap_block_pp0_stage0_11001, exitcond_flatten_reg_1218_pp0_iter1_reg, tmp_8_reg_1260_pp0_iter1_reg, or_cond_reg_1265_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_1265_pp0_iter1_reg = ap_const_lv1_1) and (exitcond_flatten_reg_1218_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_1260_pp0_iter1_reg = ap_const_lv1_1) and (or_cond_reg_1265_pp0_iter1_reg = ap_const_lv1_0) and (exitcond_flatten_reg_1218_pp0_iter1_reg = ap_const_lv1_0)))) then 
            buf_V_1_4_we1 <= ap_const_logic_1;
        else 
            buf_V_1_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    c_1_fu_594_p2 <= std_logic_vector(unsigned(c_mid2_fu_352_p3) + unsigned(ap_const_lv4_1));
    c_mid2_fu_352_p3 <= 
        ap_const_lv4_0 when (exitcond_fu_346_p2(0) = '1') else 
        c_reg_299;
    exitcond_flatten_fu_334_p2 <= "1" when (indvar_flatten_reg_277 = ap_const_lv7_54) else "0";
    exitcond_fu_346_p2 <= "1" when (c_reg_299 = ap_const_lv4_C) else "0";

    frame3_a_V_blk_n_assign_proc : process(frame3_a_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_1218, or_cond_reg_1265)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond_reg_1265 = ap_const_lv1_1) and (exitcond_flatten_reg_1218 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            frame3_a_V_blk_n <= frame3_a_V_empty_n;
        else 
            frame3_a_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    frame3_a_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op104_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op104_read_state3 = ap_const_boolean_1))) then 
            frame3_a_V_read <= ap_const_logic_1;
        else 
            frame3_a_V_read <= ap_const_logic_0;
        end if; 
    end process;


    gradient_x_V_blk_n_assign_proc : process(gradient_x_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, or_cond1_mid2_reg_1227_pp0_iter3_reg, tmp_58_reg_1274_pp0_iter3_reg, or_cond4_reg_1278_pp0_iter3_reg)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (((or_cond4_reg_1278_pp0_iter3_reg = ap_const_lv1_1) and (tmp_58_reg_1274_pp0_iter3_reg = ap_const_lv1_1)) or ((or_cond4_reg_1278_pp0_iter3_reg = ap_const_lv1_1) and (or_cond1_mid2_reg_1227_pp0_iter3_reg = ap_const_lv1_0)))) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (or_cond1_mid2_reg_1227_pp0_iter3_reg = ap_const_lv1_1) and (tmp_58_reg_1274_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            gradient_x_V_blk_n <= gradient_x_V_full_n;
        else 
            gradient_x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gradient_x_V_din_assign_proc : process(ap_enable_reg_pp0_iter4, ap_predicate_op200_write_state6, ap_predicate_op210_write_state6, tmp_12_fu_1085_p3, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
            if ((ap_predicate_op210_write_state6 = ap_const_boolean_1)) then 
                gradient_x_V_din <= ap_const_lv32_0;
            elsif ((ap_predicate_op200_write_state6 = ap_const_boolean_1)) then 
                gradient_x_V_din <= tmp_12_fu_1085_p3;
            else 
                gradient_x_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            gradient_x_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gradient_x_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, ap_predicate_op200_write_state6, ap_predicate_op210_write_state6, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op210_write_state6 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op200_write_state6 = ap_const_boolean_1)))) then 
            gradient_x_V_write <= ap_const_logic_1;
        else 
            gradient_x_V_write <= ap_const_logic_0;
        end if; 
    end process;


    gradient_y_V_blk_n_assign_proc : process(gradient_y_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, or_cond1_mid2_reg_1227_pp0_iter3_reg, tmp_58_reg_1274_pp0_iter3_reg, or_cond4_reg_1278_pp0_iter3_reg)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (((or_cond4_reg_1278_pp0_iter3_reg = ap_const_lv1_1) and (tmp_58_reg_1274_pp0_iter3_reg = ap_const_lv1_1)) or ((or_cond4_reg_1278_pp0_iter3_reg = ap_const_lv1_1) and (or_cond1_mid2_reg_1227_pp0_iter3_reg = ap_const_lv1_0)))) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (or_cond1_mid2_reg_1227_pp0_iter3_reg = ap_const_lv1_1) and (tmp_58_reg_1274_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            gradient_y_V_blk_n <= gradient_y_V_full_n;
        else 
            gradient_y_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gradient_y_V_din_assign_proc : process(ap_enable_reg_pp0_iter4, ap_predicate_op200_write_state6, ap_predicate_op210_write_state6, ap_block_pp0_stage0_01001, tmp_13_fu_1128_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
            if ((ap_predicate_op210_write_state6 = ap_const_boolean_1)) then 
                gradient_y_V_din <= ap_const_lv32_0;
            elsif ((ap_predicate_op200_write_state6 = ap_const_boolean_1)) then 
                gradient_y_V_din <= tmp_13_fu_1128_p3;
            else 
                gradient_y_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            gradient_y_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gradient_y_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, ap_predicate_op200_write_state6, ap_predicate_op210_write_state6, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op210_write_state6 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op200_write_state6 = ap_const_boolean_1)))) then 
            gradient_y_V_write <= ap_const_logic_1;
        else 
            gradient_y_V_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp2_fu_412_p2 <= "0" when (tmp_40_fu_402_p4 = ap_const_lv2_0) else "1";
    icmp3_fu_428_p2 <= "0" when (tmp_41_fu_418_p4 = ap_const_lv2_0) else "1";
    icmp_fu_582_p2 <= "0" when (tmp_59_fu_572_p4 = ap_const_lv3_0) else "1";
    indvar_flatten_next_fu_340_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_277) + unsigned(ap_const_lv7_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    mul3_fu_1015_p0 <= p_Val2_30_4_reg_1302;
    mul3_fu_1015_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul3_fu_1015_p0) * signed('0' &ap_const_lv65_155555556))), 65));
    mul_fu_1034_p0 <= p_Val2_33_4_reg_1307;
    mul_fu_1034_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_fu_1034_p0) * signed('0' &ap_const_lv65_155555556))), 65));
    neg_mul4_fu_1050_p2 <= std_logic_vector(unsigned(ap_const_lv65_0) - unsigned(mul3_reg_1324));
    neg_mul_fu_1093_p2 <= std_logic_vector(unsigned(ap_const_lv65_0) - unsigned(mul_reg_1334));
    neg_ti9_fu_1079_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_31_fu_1072_p3));
    neg_ti_fu_1122_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_34_fu_1115_p3));
    or_cond1_fu_328_p2 <= (tmp_s_fu_314_p2 and tmp_38_fu_320_p3);
    or_cond1_mid1_fu_388_p2 <= (tmp_mid1_fu_366_p2 and tmp_39_fu_380_p3);
    or_cond1_mid2_fu_394_p3 <= 
        or_cond1_mid1_fu_388_p2 when (exitcond_fu_346_p2(0) = '1') else 
        or_cond1_fu_328_p2;
    or_cond4_fu_588_p2 <= (tmp_5_mid2_fu_434_p3 and icmp_fu_582_p2);
    or_cond_fu_464_p2 <= (tmp_mid2_fu_372_p3 and tmp_8_fu_458_p2);
    p_Val2_2918_1_fu_885_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(p_shl1_cast_fu_881_p1));
    p_Val2_2918_4_fu_927_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(tmp_54_cast_fu_923_p1));
    p_Val2_30_4_fu_957_p2 <= std_logic_vector(unsigned(tmp1_fu_945_p2) + unsigned(tmp2_fu_951_p2));
    p_Val2_3216_1_fu_742_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(p_shl_cast_fu_738_p1));
    p_Val2_3216_4_fu_967_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(tmp_55_cast_fu_963_p1));
    p_Val2_33_4_fu_991_p2 <= std_logic_vector(unsigned(tmp3_reg_1297) + unsigned(tmp4_fu_985_p2));
        p_shl1_cast_fu_881_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl1_fu_873_p3),21));

    p_shl1_fu_873_p3 <= (window_val_2_V_1_fu_152 & ap_const_lv3_0);
        p_shl_cast_fu_738_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl_fu_730_p3),21));

    p_shl_fu_730_p3 <= (window_val_1_V_2_fu_140 & ap_const_lv3_0);
    p_smallbuf_V_4_1_fu_625_p3 <= 
        ap_const_lv32_0 when (tmp_8_reg_1260(0) = '1') else 
        smallbuf_V_4_1_fu_180;
    r_mid2_fu_442_p3 <= 
        r_s_fu_360_p2 when (exitcond_fu_346_p2(0) = '1') else 
        r_reg_288;
    r_s_fu_360_p2 <= std_logic_vector(unsigned(r_reg_288) + unsigned(ap_const_lv3_1));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    smallbuf_4_V_cast_fu_645_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(smallbuf_4_V_fu_637_p3),32));
    smallbuf_4_V_fu_637_p3 <= (frame3_a_V_dout & ap_const_lv11_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_945_p2 <= std_logic_vector(signed(tmp_3_fu_869_p1) + signed(tmp_161_1_fu_891_p3));
    tmp2_fu_951_p2 <= std_logic_vector(signed(tmp_161_4_fu_941_p1) + signed(tmp_161_3_fu_907_p1));
    tmp3_fu_756_p2 <= std_logic_vector(signed(tmp_11_fu_726_p1) + signed(tmp_165_1_fu_748_p3));
    tmp4_fu_985_p2 <= std_logic_vector(signed(tmp_165_4_fu_981_p1) + signed(tmp_165_3_fu_919_p1));
        tmp_11_fu_726_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_24_fu_718_p3),32));

    tmp_12_fu_1085_p3 <= 
        neg_ti9_fu_1079_p2 when (tmp_60_reg_1312_pp0_iter3_reg(0) = '1') else 
        tmp_30_fu_1069_p1;
    tmp_13_fu_1128_p3 <= 
        neg_ti_fu_1122_p2 when (tmp_63_reg_1318_pp0_iter3_reg(0) = '1') else 
        tmp_33_fu_1112_p1;
    tmp_141_4_fu_817_p4 <= smallbuf_V_4_1_fu_180(27 downto 11);
    tmp_161_1_fu_891_p3 <= (p_Val2_2918_1_fu_885_p2 & ap_const_lv11_0);
        tmp_161_3_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_25_fu_899_p3),32));

        tmp_161_4_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_27_fu_933_p3),32));

    tmp_165_1_fu_748_p3 <= (p_Val2_3216_1_fu_742_p2 & ap_const_lv11_0);
        tmp_165_3_fu_919_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_26_fu_911_p3),32));

        tmp_165_4_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_28_fu_973_p3),32));

    tmp_24_fu_718_p3 <= (window_val_0_V_2_fu_132 & ap_const_lv11_0);
    tmp_25_fu_899_p3 <= (window_val_2_V_3_fu_160 & ap_const_lv14_0);
    tmp_26_fu_911_p3 <= (window_val_3_V_2_fu_164 & ap_const_lv14_0);
    tmp_27_fu_933_p3 <= (p_Val2_2918_4_fu_927_p2 & ap_const_lv11_0);
    tmp_28_fu_973_p3 <= (p_Val2_3216_4_fu_967_p2 & ap_const_lv11_0);
        tmp_29_fu_1065_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_61_fu_1055_p4),32));

        tmp_30_fu_1069_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_62_reg_1329),32));

    tmp_31_fu_1072_p3 <= 
        tmp_29_fu_1065_p1 when (tmp_60_reg_1312_pp0_iter3_reg(0) = '1') else 
        tmp_30_fu_1069_p1;
        tmp_32_fu_1108_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_64_fu_1098_p4),32));

        tmp_33_fu_1112_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_65_reg_1339),32));

    tmp_34_fu_1115_p3 <= 
        tmp_32_fu_1108_p1 when (tmp_63_reg_1318_pp0_iter3_reg(0) = '1') else 
        tmp_33_fu_1112_p1;
    tmp_38_fu_320_p3 <= r_reg_288(2 downto 2);
    tmp_39_fu_380_p3 <= r_s_fu_360_p2(2 downto 2);
        tmp_3_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_861_p3),32));

    tmp_40_fu_402_p4 <= r_s_fu_360_p2(2 downto 1);
    tmp_41_fu_418_p4 <= r_reg_288(2 downto 1);
    tmp_42_fu_470_p2 <= "1" when (c_mid2_fu_352_p3 = ap_const_lv4_F) else "0";
    tmp_43_fu_476_p2 <= "1" when (c_mid2_fu_352_p3 = ap_const_lv4_E) else "0";
    tmp_44_fu_482_p2 <= (tmp_43_fu_476_p2 or tmp_42_fu_470_p2);
    tmp_45_fu_488_p2 <= "1" when (c_mid2_fu_352_p3 = ap_const_lv4_D) else "0";
    tmp_46_fu_494_p2 <= (tmp_45_fu_488_p2 or tmp_44_fu_482_p2);
    tmp_47_fu_500_p2 <= "1" when (c_mid2_fu_352_p3 = ap_const_lv4_B) else "0";
    tmp_48_fu_506_p2 <= (tmp_47_fu_500_p2 or tmp_46_fu_494_p2);
    tmp_49_fu_512_p2 <= "1" when (c_mid2_fu_352_p3 = ap_const_lv4_A) else "0";
    tmp_50_fu_518_p2 <= (tmp_49_fu_512_p2 or tmp_48_fu_506_p2);
    tmp_51_fu_524_p2 <= "1" when (c_mid2_fu_352_p3 = ap_const_lv4_3) else "0";
    tmp_52_fu_530_p2 <= (tmp_51_fu_524_p2 or tmp_50_fu_518_p2);
    tmp_53_fu_536_p2 <= "1" when (c_mid2_fu_352_p3 = ap_const_lv4_2) else "0";
        tmp_54_cast_fu_923_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(window_val_V_2_4_2_fu_833_p3),18));

    tmp_54_fu_542_p2 <= (tmp_53_fu_536_p2 or tmp_52_fu_530_p2);
    tmp_55_cast_fu_963_p0 <= window_val_4_V_2_fu_172;
        tmp_55_cast_fu_963_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_55_cast_fu_963_p0),18));

    tmp_55_fu_548_p2 <= "1" when (c_mid2_fu_352_p3 = ap_const_lv4_1) else "0";
    tmp_56_fu_554_p2 <= (tmp_55_fu_548_p2 or tmp_54_fu_542_p2);
    tmp_57_fu_560_p2 <= "1" when (c_mid2_fu_352_p3 = ap_const_lv4_0) else "0";
    tmp_58_fu_566_p2 <= (tmp_57_fu_560_p2 or tmp_56_fu_554_p2);
    tmp_59_fu_572_p4 <= c_mid2_fu_352_p3(3 downto 1);
    tmp_5_mid2_fu_434_p3 <= 
        icmp2_fu_412_p2 when (exitcond_fu_346_p2(0) = '1') else 
        icmp3_fu_428_p2;
    tmp_61_fu_1055_p4 <= neg_mul4_fu_1050_p2(64 downto 36);
    tmp_64_fu_1098_p4 <= neg_mul_fu_1093_p2(64 downto 36);
    tmp_7_fu_450_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_mid2_fu_352_p3),64));
    tmp_8_fu_458_p2 <= "1" when (unsigned(c_mid2_fu_352_p3) < unsigned(ap_const_lv4_A)) else "0";
    tmp_fu_861_p3 <= (window_val_2_V_0_fu_148 & ap_const_lv11_0);
    tmp_mid1_fu_366_p2 <= "1" when (unsigned(r_s_fu_360_p2) < unsigned(ap_const_lv3_5)) else "0";
    tmp_mid2_fu_372_p3 <= 
        tmp_mid1_fu_366_p2 when (exitcond_fu_346_p2(0) = '1') else 
        tmp_s_fu_314_p2;
    tmp_s_fu_314_p2 <= "1" when (unsigned(r_reg_288) < unsigned(ap_const_lv3_5)) else "0";
    window_val_0_V_4_fu_654_p4 <= buf_V_1_1_q0(27 downto 11);
    window_val_1_V_4_fu_664_p4 <= buf_V_1_2_q0(27 downto 11);
    window_val_4_V_4_fu_839_p3 <= 
        tmp_141_4_fu_817_p4 when (or_cond_reg_1265_pp0_iter1_reg(0) = '1') else 
        ap_const_lv17_0;
    window_val_V_0_4_2_fu_701_p3 <= 
        window_val_0_V_4_fu_654_p4 when (or_cond_reg_1265(0) = '1') else 
        ap_const_lv17_0;
    window_val_V_1_4_2_fu_694_p3 <= 
        window_val_1_V_4_fu_664_p4 when (or_cond_reg_1265(0) = '1') else 
        ap_const_lv17_0;
    window_val_V_2_4_2_fu_833_p3 <= 
        window_val_2_V_4_reg_1287 when (or_cond_reg_1265_pp0_iter1_reg(0) = '1') else 
        ap_const_lv17_0;
    window_val_V_3_4_2_fu_827_p3 <= 
        window_val_3_V_4_reg_1292 when (or_cond_reg_1265_pp0_iter1_reg(0) = '1') else 
        ap_const_lv17_0;
end behav;
