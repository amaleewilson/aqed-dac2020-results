// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="optical_flow,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7v2000tfhg1761-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=201,HLS_SYN_TPT=134,HLS_SYN_MEM=55,HLS_SYN_DSP=150,HLS_SYN_FF=29407,HLS_SYN_LUT=25237,HLS_VERSION=2018_2}" *)

module optical_flow (
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 64;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;
parameter    C_M_AXI_ID_WIDTH = 1;
parameter    C_M_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AWUSER_WIDTH = 1;
parameter    C_M_AXI_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WUSER_WIDTH = 1;
parameter    C_M_AXI_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM1_DATA_WIDTH = 64;
parameter    C_M_AXI_GMEM1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_USER_VALUE = 0;
parameter    C_M_AXI_GMEM1_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM1_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (64 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM1_WSTRB_WIDTH = (64 / 8);

input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_AWADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_AWID;
output  [7:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [C_M_AXI_GMEM1_AWUSER_WIDTH - 1:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_WDATA;
output  [C_M_AXI_GMEM1_WSTRB_WIDTH - 1:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_WID;
output  [C_M_AXI_GMEM1_WUSER_WIDTH - 1:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_ARADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_ARID;
output  [7:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [C_M_AXI_GMEM1_ARUSER_WIDTH - 1:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_RID;
input  [C_M_AXI_GMEM1_RUSER_WIDTH - 1:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_BID;
input  [C_M_AXI_GMEM1_BUSER_WIDTH - 1:0] m_axi_gmem1_BUSER;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire   [31:0] frames_V;
wire   [31:0] outputs;
wire    gmem0_AWREADY;
wire    gmem0_WREADY;
wire    gmem0_ARREADY;
wire    gmem0_RVALID;
wire   [63:0] gmem0_RDATA;
wire    gmem0_RLAST;
wire   [0:0] gmem0_RID;
wire   [0:0] gmem0_RUSER;
wire   [1:0] gmem0_RRESP;
wire    gmem0_BVALID;
wire   [1:0] gmem0_BRESP;
wire   [0:0] gmem0_BID;
wire   [0:0] gmem0_BUSER;
wire    gmem1_AWREADY;
wire    gmem1_WREADY;
wire    gmem1_ARREADY;
wire    gmem1_RVALID;
wire   [63:0] gmem1_RDATA;
wire    gmem1_RLAST;
wire   [0:0] gmem1_RID;
wire   [0:0] gmem1_RUSER;
wire   [1:0] gmem1_RRESP;
wire    gmem1_BVALID;
wire   [1:0] gmem1_BRESP;
wire   [0:0] gmem1_BID;
wire   [0:0] gmem1_BUSER;
wire    optical_flow_entry12_U0_ap_start;
wire    optical_flow_entry12_U0_ap_done;
wire    optical_flow_entry12_U0_ap_continue;
wire    optical_flow_entry12_U0_ap_idle;
wire    optical_flow_entry12_U0_ap_ready;
wire    optical_flow_entry12_U0_start_out;
wire    optical_flow_entry12_U0_start_write;
wire   [31:0] optical_flow_entry12_U0_frames_V_out_din;
wire    optical_flow_entry12_U0_frames_V_out_write;
wire   [31:0] optical_flow_entry12_U0_outputs_out_din;
wire    optical_flow_entry12_U0_outputs_out_write;
wire    Loop_FRAMES_CP_OUTER_U0_ap_start;
wire    Loop_FRAMES_CP_OUTER_U0_start_full_n;
wire    Loop_FRAMES_CP_OUTER_U0_ap_done;
wire    Loop_FRAMES_CP_OUTER_U0_ap_continue;
wire    Loop_FRAMES_CP_OUTER_U0_ap_idle;
wire    Loop_FRAMES_CP_OUTER_U0_ap_ready;
wire    Loop_FRAMES_CP_OUTER_U0_start_out;
wire    Loop_FRAMES_CP_OUTER_U0_start_write;
wire    Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWVALID;
wire   [31:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWADDR;
wire   [0:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWID;
wire   [31:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWLEN;
wire   [2:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWSIZE;
wire   [1:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWBURST;
wire   [1:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWLOCK;
wire   [3:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWCACHE;
wire   [2:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWPROT;
wire   [3:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWQOS;
wire   [3:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWREGION;
wire   [0:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWUSER;
wire    Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_WVALID;
wire   [63:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_WDATA;
wire   [7:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_WSTRB;
wire    Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_WLAST;
wire   [0:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_WID;
wire   [0:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_WUSER;
wire    Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARVALID;
wire   [31:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARADDR;
wire   [0:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARID;
wire   [31:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARLEN;
wire   [2:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARSIZE;
wire   [1:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARBURST;
wire   [1:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARLOCK;
wire   [3:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARCACHE;
wire   [2:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARPROT;
wire   [3:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARQOS;
wire   [3:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARREGION;
wire   [0:0] Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARUSER;
wire    Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_RREADY;
wire    Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_BREADY;
wire    Loop_FRAMES_CP_OUTER_U0_frames_V_offset_read;
wire   [7:0] Loop_FRAMES_CP_OUTER_U0_frame1_a_V_din;
wire    Loop_FRAMES_CP_OUTER_U0_frame1_a_V_write;
wire   [7:0] Loop_FRAMES_CP_OUTER_U0_frame2_a_V_din;
wire    Loop_FRAMES_CP_OUTER_U0_frame2_a_V_write;
wire   [7:0] Loop_FRAMES_CP_OUTER_U0_frame3_a_V_din;
wire    Loop_FRAMES_CP_OUTER_U0_frame3_a_V_write;
wire   [7:0] Loop_FRAMES_CP_OUTER_U0_frame3_b_V_din;
wire    Loop_FRAMES_CP_OUTER_U0_frame3_b_V_write;
wire   [7:0] Loop_FRAMES_CP_OUTER_U0_frame4_a_V_din;
wire    Loop_FRAMES_CP_OUTER_U0_frame4_a_V_write;
wire   [7:0] Loop_FRAMES_CP_OUTER_U0_frame5_a_V_din;
wire    Loop_FRAMES_CP_OUTER_U0_frame5_a_V_write;
wire    gradient_xy_calc_U0_ap_start;
wire    gradient_xy_calc_U0_ap_done;
wire    gradient_xy_calc_U0_ap_continue;
wire    gradient_xy_calc_U0_ap_idle;
wire    gradient_xy_calc_U0_ap_ready;
wire    gradient_xy_calc_U0_start_out;
wire    gradient_xy_calc_U0_start_write;
wire    gradient_xy_calc_U0_frame3_a_V_read;
wire   [31:0] gradient_xy_calc_U0_gradient_x_V_din;
wire    gradient_xy_calc_U0_gradient_x_V_write;
wire   [31:0] gradient_xy_calc_U0_gradient_y_V_din;
wire    gradient_xy_calc_U0_gradient_y_V_write;
wire    gradient_z_calc_U0_ap_start;
wire    gradient_z_calc_U0_ap_done;
wire    gradient_z_calc_U0_ap_continue;
wire    gradient_z_calc_U0_ap_idle;
wire    gradient_z_calc_U0_ap_ready;
wire    gradient_z_calc_U0_frame1_a_V_read;
wire    gradient_z_calc_U0_frame2_a_V_read;
wire    gradient_z_calc_U0_frame3_b_V_read;
wire    gradient_z_calc_U0_frame4_a_V_read;
wire    gradient_z_calc_U0_frame5_a_V_read;
wire   [31:0] gradient_z_calc_U0_gradient_z_V_din;
wire    gradient_z_calc_U0_gradient_z_V_write;
wire    gradient_weight_y_U0_ap_start;
wire    gradient_weight_y_U0_ap_done;
wire    gradient_weight_y_U0_ap_continue;
wire    gradient_weight_y_U0_ap_idle;
wire    gradient_weight_y_U0_ap_ready;
wire    gradient_weight_y_U0_start_out;
wire    gradient_weight_y_U0_start_write;
wire    gradient_weight_y_U0_gradient_x_V_read;
wire    gradient_weight_y_U0_gradient_y_V_read;
wire    gradient_weight_y_U0_gradient_z_V_read;
wire   [0:0] gradient_weight_y_U0_y_filtered_x_V_din;
wire    gradient_weight_y_U0_y_filtered_x_V_write;
wire   [0:0] gradient_weight_y_U0_y_filtered_y_V_din;
wire    gradient_weight_y_U0_y_filtered_y_V_write;
wire   [0:0] gradient_weight_y_U0_y_filtered_z_V_din;
wire    gradient_weight_y_U0_y_filtered_z_V_write;
wire    gradient_weight_x_U0_ap_start;
wire    gradient_weight_x_U0_ap_done;
wire    gradient_weight_x_U0_ap_continue;
wire    gradient_weight_x_U0_ap_idle;
wire    gradient_weight_x_U0_ap_ready;
wire    gradient_weight_x_U0_start_out;
wire    gradient_weight_x_U0_start_write;
wire    gradient_weight_x_U0_y_filtered_x_V_read;
wire    gradient_weight_x_U0_y_filtered_y_V_read;
wire    gradient_weight_x_U0_y_filtered_z_V_read;
wire   [31:0] gradient_weight_x_U0_filtered_gradient_x_s_din;
wire    gradient_weight_x_U0_filtered_gradient_x_s_write;
wire   [31:0] gradient_weight_x_U0_filtered_gradient_y_s_din;
wire    gradient_weight_x_U0_filtered_gradient_y_s_write;
wire   [31:0] gradient_weight_x_U0_filtered_gradient_z_s_din;
wire    gradient_weight_x_U0_filtered_gradient_z_s_write;
wire    outer_product_U0_ap_start;
wire    outer_product_U0_ap_done;
wire    outer_product_U0_ap_continue;
wire    outer_product_U0_ap_idle;
wire    outer_product_U0_ap_ready;
wire    outer_product_U0_start_out;
wire    outer_product_U0_start_write;
wire    outer_product_U0_filtered_gradient_x_s_read;
wire    outer_product_U0_filtered_gradient_y_s_read;
wire    outer_product_U0_filtered_gradient_z_s_read;
wire   [190:0] outer_product_U0_out_product_val_V_din;
wire    outer_product_U0_out_product_val_V_write;
wire    tensor_weight_y_U0_ap_start;
wire    tensor_weight_y_U0_ap_done;
wire    tensor_weight_y_U0_ap_continue;
wire    tensor_weight_y_U0_ap_idle;
wire    tensor_weight_y_U0_ap_ready;
wire    tensor_weight_y_U0_start_out;
wire    tensor_weight_y_U0_start_write;
wire    tensor_weight_y_U0_out_product_val_V_read;
wire   [191:0] tensor_weight_y_U0_tensor_y_val_V_din;
wire    tensor_weight_y_U0_tensor_y_val_V_write;
wire    tensor_weight_x_U0_ap_start;
wire    tensor_weight_x_U0_ap_done;
wire    tensor_weight_x_U0_ap_continue;
wire    tensor_weight_x_U0_ap_idle;
wire    tensor_weight_x_U0_ap_ready;
wire    tensor_weight_x_U0_tensor_y_val_V_read;
wire   [191:0] tensor_weight_x_U0_tensor_val_V_din;
wire    tensor_weight_x_U0_tensor_val_V_write;
wire    flow_calc_U0_ap_start;
wire    flow_calc_U0_ap_done;
wire    flow_calc_U0_ap_continue;
wire    flow_calc_U0_ap_idle;
wire    flow_calc_U0_ap_ready;
wire    flow_calc_U0_m_axi_outputs_AWVALID;
wire   [31:0] flow_calc_U0_m_axi_outputs_AWADDR;
wire   [0:0] flow_calc_U0_m_axi_outputs_AWID;
wire   [31:0] flow_calc_U0_m_axi_outputs_AWLEN;
wire   [2:0] flow_calc_U0_m_axi_outputs_AWSIZE;
wire   [1:0] flow_calc_U0_m_axi_outputs_AWBURST;
wire   [1:0] flow_calc_U0_m_axi_outputs_AWLOCK;
wire   [3:0] flow_calc_U0_m_axi_outputs_AWCACHE;
wire   [2:0] flow_calc_U0_m_axi_outputs_AWPROT;
wire   [3:0] flow_calc_U0_m_axi_outputs_AWQOS;
wire   [3:0] flow_calc_U0_m_axi_outputs_AWREGION;
wire   [0:0] flow_calc_U0_m_axi_outputs_AWUSER;
wire    flow_calc_U0_m_axi_outputs_WVALID;
wire   [63:0] flow_calc_U0_m_axi_outputs_WDATA;
wire   [7:0] flow_calc_U0_m_axi_outputs_WSTRB;
wire    flow_calc_U0_m_axi_outputs_WLAST;
wire   [0:0] flow_calc_U0_m_axi_outputs_WID;
wire   [0:0] flow_calc_U0_m_axi_outputs_WUSER;
wire    flow_calc_U0_m_axi_outputs_ARVALID;
wire   [31:0] flow_calc_U0_m_axi_outputs_ARADDR;
wire   [0:0] flow_calc_U0_m_axi_outputs_ARID;
wire   [31:0] flow_calc_U0_m_axi_outputs_ARLEN;
wire   [2:0] flow_calc_U0_m_axi_outputs_ARSIZE;
wire   [1:0] flow_calc_U0_m_axi_outputs_ARBURST;
wire   [1:0] flow_calc_U0_m_axi_outputs_ARLOCK;
wire   [3:0] flow_calc_U0_m_axi_outputs_ARCACHE;
wire   [2:0] flow_calc_U0_m_axi_outputs_ARPROT;
wire   [3:0] flow_calc_U0_m_axi_outputs_ARQOS;
wire   [3:0] flow_calc_U0_m_axi_outputs_ARREGION;
wire   [0:0] flow_calc_U0_m_axi_outputs_ARUSER;
wire    flow_calc_U0_m_axi_outputs_RREADY;
wire    flow_calc_U0_m_axi_outputs_BREADY;
wire    flow_calc_U0_outputs_offset_read;
wire    flow_calc_U0_tensor_val_V_read;
wire    ap_sync_continue;
wire    frames_V_c_full_n;
wire   [31:0] frames_V_c_dout;
wire    frames_V_c_empty_n;
wire    outputs_c_full_n;
wire   [31:0] outputs_c_dout;
wire    outputs_c_empty_n;
wire    frame1_a_V_full_n;
wire   [7:0] frame1_a_V_dout;
wire    frame1_a_V_empty_n;
wire    frame2_a_V_full_n;
wire   [7:0] frame2_a_V_dout;
wire    frame2_a_V_empty_n;
wire    frame3_a_V_full_n;
wire   [7:0] frame3_a_V_dout;
wire    frame3_a_V_empty_n;
wire    frame3_b_V_full_n;
wire   [7:0] frame3_b_V_dout;
wire    frame3_b_V_empty_n;
wire    frame4_a_V_full_n;
wire   [7:0] frame4_a_V_dout;
wire    frame4_a_V_empty_n;
wire    frame5_a_V_full_n;
wire   [7:0] frame5_a_V_dout;
wire    frame5_a_V_empty_n;
wire    gradient_x_V_full_n;
wire   [31:0] gradient_x_V_dout;
wire    gradient_x_V_empty_n;
wire    gradient_y_V_full_n;
wire   [31:0] gradient_y_V_dout;
wire    gradient_y_V_empty_n;
wire    gradient_z_V_full_n;
wire   [31:0] gradient_z_V_dout;
wire    gradient_z_V_empty_n;
wire    y_filtered_x_V_full_n;
wire   [0:0] y_filtered_x_V_dout;
wire    y_filtered_x_V_empty_n;
wire    y_filtered_y_V_full_n;
wire   [0:0] y_filtered_y_V_dout;
wire    y_filtered_y_V_empty_n;
wire    y_filtered_z_V_full_n;
wire   [0:0] y_filtered_z_V_dout;
wire    y_filtered_z_V_empty_n;
wire    filtered_gradient_x_s_full_n;
wire   [31:0] filtered_gradient_x_s_dout;
wire    filtered_gradient_x_s_empty_n;
wire    filtered_gradient_y_s_full_n;
wire   [31:0] filtered_gradient_y_s_dout;
wire    filtered_gradient_y_s_empty_n;
wire    filtered_gradient_z_s_full_n;
wire   [31:0] filtered_gradient_z_s_dout;
wire    filtered_gradient_z_s_empty_n;
wire    out_product_val_V_full_n;
wire   [190:0] out_product_val_V_dout;
wire    out_product_val_V_empty_n;
wire    tensor_y_val_V_full_n;
wire   [191:0] tensor_y_val_V_dout;
wire    tensor_y_val_V_empty_n;
wire    tensor_val_V_full_n;
wire   [191:0] tensor_val_V_dout;
wire    tensor_val_V_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_Loop_FRAMES_CP_OUTER_U0_ap_ready;
wire    ap_sync_Loop_FRAMES_CP_OUTER_U0_ap_ready;
reg   [1:0] Loop_FRAMES_CP_OUTER_U0_ap_ready_count;
reg    ap_sync_reg_optical_flow_entry12_U0_ap_ready;
wire    ap_sync_optical_flow_entry12_U0_ap_ready;
reg   [1:0] optical_flow_entry12_U0_ap_ready_count;
wire   [0:0] start_for_flow_calc_U0_din;
wire    start_for_flow_calc_U0_full_n;
wire   [0:0] start_for_flow_calc_U0_dout;
wire    start_for_flow_calc_U0_empty_n;
wire   [0:0] start_for_gradient_xy_calc_U0_din;
wire    start_for_gradient_xy_calc_U0_full_n;
wire   [0:0] start_for_gradient_xy_calc_U0_dout;
wire    start_for_gradient_xy_calc_U0_empty_n;
wire   [0:0] start_for_gradient_z_calc_U0_din;
wire    start_for_gradient_z_calc_U0_full_n;
wire   [0:0] start_for_gradient_z_calc_U0_dout;
wire    start_for_gradient_z_calc_U0_empty_n;
wire   [0:0] start_for_gradient_weight_y_U0_din;
wire    start_for_gradient_weight_y_U0_full_n;
wire   [0:0] start_for_gradient_weight_y_U0_dout;
wire    start_for_gradient_weight_y_U0_empty_n;
wire    gradient_z_calc_U0_start_full_n;
wire    gradient_z_calc_U0_start_write;
wire   [0:0] start_for_gradient_weight_x_U0_din;
wire    start_for_gradient_weight_x_U0_full_n;
wire   [0:0] start_for_gradient_weight_x_U0_dout;
wire    start_for_gradient_weight_x_U0_empty_n;
wire   [0:0] start_for_outer_product_U0_din;
wire    start_for_outer_product_U0_full_n;
wire   [0:0] start_for_outer_product_U0_dout;
wire    start_for_outer_product_U0_empty_n;
wire   [0:0] start_for_tensor_weight_y_U0_din;
wire    start_for_tensor_weight_y_U0_full_n;
wire   [0:0] start_for_tensor_weight_y_U0_dout;
wire    start_for_tensor_weight_y_U0_empty_n;
wire   [0:0] start_for_tensor_weight_x_U0_din;
wire    start_for_tensor_weight_x_U0_full_n;
wire   [0:0] start_for_tensor_weight_x_U0_dout;
wire    start_for_tensor_weight_x_U0_empty_n;
wire    tensor_weight_x_U0_start_full_n;
wire    tensor_weight_x_U0_start_write;
wire    flow_calc_U0_start_full_n;
wire    flow_calc_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_Loop_FRAMES_CP_OUTER_U0_ap_ready = 1'b0;
#0 Loop_FRAMES_CP_OUTER_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_optical_flow_entry12_U0_ap_ready = 1'b0;
#0 optical_flow_entry12_U0_ap_ready_count = 2'd0;
end

optical_flow_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
optical_flow_control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .frames_V(frames_V),
    .outputs(outputs)
);

optical_flow_gmem0_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 64 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ))
optical_flow_gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARVALID),
    .I_ARREADY(gmem0_ARREADY),
    .I_ARADDR(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARADDR),
    .I_ARID(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARID),
    .I_ARLEN(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARLEN),
    .I_ARSIZE(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARSIZE),
    .I_ARLOCK(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARLOCK),
    .I_ARCACHE(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARCACHE),
    .I_ARQOS(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARQOS),
    .I_ARPROT(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARPROT),
    .I_ARUSER(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARUSER),
    .I_ARBURST(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARBURST),
    .I_ARREGION(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARREGION),
    .I_RVALID(gmem0_RVALID),
    .I_RREADY(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_RREADY),
    .I_RDATA(gmem0_RDATA),
    .I_RID(gmem0_RID),
    .I_RUSER(gmem0_RUSER),
    .I_RRESP(gmem0_RRESP),
    .I_RLAST(gmem0_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem0_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem0_WREADY),
    .I_WDATA(64'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(8'd0),
    .I_BVALID(gmem0_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(gmem0_BRESP),
    .I_BID(gmem0_BID),
    .I_BUSER(gmem0_BUSER)
);

optical_flow_gmem1_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 64 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM1_CACHE_VALUE ))
optical_flow_gmem1_m_axi_U(
    .AWVALID(m_axi_gmem1_AWVALID),
    .AWREADY(m_axi_gmem1_AWREADY),
    .AWADDR(m_axi_gmem1_AWADDR),
    .AWID(m_axi_gmem1_AWID),
    .AWLEN(m_axi_gmem1_AWLEN),
    .AWSIZE(m_axi_gmem1_AWSIZE),
    .AWBURST(m_axi_gmem1_AWBURST),
    .AWLOCK(m_axi_gmem1_AWLOCK),
    .AWCACHE(m_axi_gmem1_AWCACHE),
    .AWPROT(m_axi_gmem1_AWPROT),
    .AWQOS(m_axi_gmem1_AWQOS),
    .AWREGION(m_axi_gmem1_AWREGION),
    .AWUSER(m_axi_gmem1_AWUSER),
    .WVALID(m_axi_gmem1_WVALID),
    .WREADY(m_axi_gmem1_WREADY),
    .WDATA(m_axi_gmem1_WDATA),
    .WSTRB(m_axi_gmem1_WSTRB),
    .WLAST(m_axi_gmem1_WLAST),
    .WID(m_axi_gmem1_WID),
    .WUSER(m_axi_gmem1_WUSER),
    .ARVALID(m_axi_gmem1_ARVALID),
    .ARREADY(m_axi_gmem1_ARREADY),
    .ARADDR(m_axi_gmem1_ARADDR),
    .ARID(m_axi_gmem1_ARID),
    .ARLEN(m_axi_gmem1_ARLEN),
    .ARSIZE(m_axi_gmem1_ARSIZE),
    .ARBURST(m_axi_gmem1_ARBURST),
    .ARLOCK(m_axi_gmem1_ARLOCK),
    .ARCACHE(m_axi_gmem1_ARCACHE),
    .ARPROT(m_axi_gmem1_ARPROT),
    .ARQOS(m_axi_gmem1_ARQOS),
    .ARREGION(m_axi_gmem1_ARREGION),
    .ARUSER(m_axi_gmem1_ARUSER),
    .RVALID(m_axi_gmem1_RVALID),
    .RREADY(m_axi_gmem1_RREADY),
    .RDATA(m_axi_gmem1_RDATA),
    .RLAST(m_axi_gmem1_RLAST),
    .RID(m_axi_gmem1_RID),
    .RUSER(m_axi_gmem1_RUSER),
    .RRESP(m_axi_gmem1_RRESP),
    .BVALID(m_axi_gmem1_BVALID),
    .BREADY(m_axi_gmem1_BREADY),
    .BRESP(m_axi_gmem1_BRESP),
    .BID(m_axi_gmem1_BID),
    .BUSER(m_axi_gmem1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem1_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem1_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem1_RDATA),
    .I_RID(gmem1_RID),
    .I_RUSER(gmem1_RUSER),
    .I_RRESP(gmem1_RRESP),
    .I_RLAST(gmem1_RLAST),
    .I_AWVALID(flow_calc_U0_m_axi_outputs_AWVALID),
    .I_AWREADY(gmem1_AWREADY),
    .I_AWADDR(flow_calc_U0_m_axi_outputs_AWADDR),
    .I_AWID(flow_calc_U0_m_axi_outputs_AWID),
    .I_AWLEN(flow_calc_U0_m_axi_outputs_AWLEN),
    .I_AWSIZE(flow_calc_U0_m_axi_outputs_AWSIZE),
    .I_AWLOCK(flow_calc_U0_m_axi_outputs_AWLOCK),
    .I_AWCACHE(flow_calc_U0_m_axi_outputs_AWCACHE),
    .I_AWQOS(flow_calc_U0_m_axi_outputs_AWQOS),
    .I_AWPROT(flow_calc_U0_m_axi_outputs_AWPROT),
    .I_AWUSER(flow_calc_U0_m_axi_outputs_AWUSER),
    .I_AWBURST(flow_calc_U0_m_axi_outputs_AWBURST),
    .I_AWREGION(flow_calc_U0_m_axi_outputs_AWREGION),
    .I_WVALID(flow_calc_U0_m_axi_outputs_WVALID),
    .I_WREADY(gmem1_WREADY),
    .I_WDATA(flow_calc_U0_m_axi_outputs_WDATA),
    .I_WID(flow_calc_U0_m_axi_outputs_WID),
    .I_WUSER(flow_calc_U0_m_axi_outputs_WUSER),
    .I_WLAST(flow_calc_U0_m_axi_outputs_WLAST),
    .I_WSTRB(flow_calc_U0_m_axi_outputs_WSTRB),
    .I_BVALID(gmem1_BVALID),
    .I_BREADY(flow_calc_U0_m_axi_outputs_BREADY),
    .I_BRESP(gmem1_BRESP),
    .I_BID(gmem1_BID),
    .I_BUSER(gmem1_BUSER)
);

optical_flow_entry12 optical_flow_entry12_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(optical_flow_entry12_U0_ap_start),
    .start_full_n(start_for_flow_calc_U0_full_n),
    .ap_done(optical_flow_entry12_U0_ap_done),
    .ap_continue(optical_flow_entry12_U0_ap_continue),
    .ap_idle(optical_flow_entry12_U0_ap_idle),
    .ap_ready(optical_flow_entry12_U0_ap_ready),
    .start_out(optical_flow_entry12_U0_start_out),
    .start_write(optical_flow_entry12_U0_start_write),
    .frames_V(frames_V),
    .outputs(outputs),
    .frames_V_out_din(optical_flow_entry12_U0_frames_V_out_din),
    .frames_V_out_full_n(frames_V_c_full_n),
    .frames_V_out_write(optical_flow_entry12_U0_frames_V_out_write),
    .outputs_out_din(optical_flow_entry12_U0_outputs_out_din),
    .outputs_out_full_n(outputs_c_full_n),
    .outputs_out_write(optical_flow_entry12_U0_outputs_out_write)
);

Loop_FRAMES_CP_OUTER Loop_FRAMES_CP_OUTER_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_FRAMES_CP_OUTER_U0_ap_start),
    .start_full_n(Loop_FRAMES_CP_OUTER_U0_start_full_n),
    .ap_done(Loop_FRAMES_CP_OUTER_U0_ap_done),
    .ap_continue(Loop_FRAMES_CP_OUTER_U0_ap_continue),
    .ap_idle(Loop_FRAMES_CP_OUTER_U0_ap_idle),
    .ap_ready(Loop_FRAMES_CP_OUTER_U0_ap_ready),
    .start_out(Loop_FRAMES_CP_OUTER_U0_start_out),
    .start_write(Loop_FRAMES_CP_OUTER_U0_start_write),
    .m_axi_frames_V_AWVALID(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWVALID),
    .m_axi_frames_V_AWREADY(1'b0),
    .m_axi_frames_V_AWADDR(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWADDR),
    .m_axi_frames_V_AWID(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWID),
    .m_axi_frames_V_AWLEN(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWLEN),
    .m_axi_frames_V_AWSIZE(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWSIZE),
    .m_axi_frames_V_AWBURST(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWBURST),
    .m_axi_frames_V_AWLOCK(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWLOCK),
    .m_axi_frames_V_AWCACHE(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWCACHE),
    .m_axi_frames_V_AWPROT(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWPROT),
    .m_axi_frames_V_AWQOS(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWQOS),
    .m_axi_frames_V_AWREGION(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWREGION),
    .m_axi_frames_V_AWUSER(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_AWUSER),
    .m_axi_frames_V_WVALID(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_WVALID),
    .m_axi_frames_V_WREADY(1'b0),
    .m_axi_frames_V_WDATA(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_WDATA),
    .m_axi_frames_V_WSTRB(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_WSTRB),
    .m_axi_frames_V_WLAST(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_WLAST),
    .m_axi_frames_V_WID(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_WID),
    .m_axi_frames_V_WUSER(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_WUSER),
    .m_axi_frames_V_ARVALID(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARVALID),
    .m_axi_frames_V_ARREADY(gmem0_ARREADY),
    .m_axi_frames_V_ARADDR(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARADDR),
    .m_axi_frames_V_ARID(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARID),
    .m_axi_frames_V_ARLEN(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARLEN),
    .m_axi_frames_V_ARSIZE(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARSIZE),
    .m_axi_frames_V_ARBURST(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARBURST),
    .m_axi_frames_V_ARLOCK(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARLOCK),
    .m_axi_frames_V_ARCACHE(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARCACHE),
    .m_axi_frames_V_ARPROT(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARPROT),
    .m_axi_frames_V_ARQOS(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARQOS),
    .m_axi_frames_V_ARREGION(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARREGION),
    .m_axi_frames_V_ARUSER(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_ARUSER),
    .m_axi_frames_V_RVALID(gmem0_RVALID),
    .m_axi_frames_V_RREADY(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_RREADY),
    .m_axi_frames_V_RDATA(gmem0_RDATA),
    .m_axi_frames_V_RLAST(gmem0_RLAST),
    .m_axi_frames_V_RID(gmem0_RID),
    .m_axi_frames_V_RUSER(gmem0_RUSER),
    .m_axi_frames_V_RRESP(gmem0_RRESP),
    .m_axi_frames_V_BVALID(1'b0),
    .m_axi_frames_V_BREADY(Loop_FRAMES_CP_OUTER_U0_m_axi_frames_V_BREADY),
    .m_axi_frames_V_BRESP(2'd0),
    .m_axi_frames_V_BID(1'd0),
    .m_axi_frames_V_BUSER(1'd0),
    .frames_V_offset_dout(frames_V_c_dout),
    .frames_V_offset_empty_n(frames_V_c_empty_n),
    .frames_V_offset_read(Loop_FRAMES_CP_OUTER_U0_frames_V_offset_read),
    .frame1_a_V_din(Loop_FRAMES_CP_OUTER_U0_frame1_a_V_din),
    .frame1_a_V_full_n(frame1_a_V_full_n),
    .frame1_a_V_write(Loop_FRAMES_CP_OUTER_U0_frame1_a_V_write),
    .frame2_a_V_din(Loop_FRAMES_CP_OUTER_U0_frame2_a_V_din),
    .frame2_a_V_full_n(frame2_a_V_full_n),
    .frame2_a_V_write(Loop_FRAMES_CP_OUTER_U0_frame2_a_V_write),
    .frame3_a_V_din(Loop_FRAMES_CP_OUTER_U0_frame3_a_V_din),
    .frame3_a_V_full_n(frame3_a_V_full_n),
    .frame3_a_V_write(Loop_FRAMES_CP_OUTER_U0_frame3_a_V_write),
    .frame3_b_V_din(Loop_FRAMES_CP_OUTER_U0_frame3_b_V_din),
    .frame3_b_V_full_n(frame3_b_V_full_n),
    .frame3_b_V_write(Loop_FRAMES_CP_OUTER_U0_frame3_b_V_write),
    .frame4_a_V_din(Loop_FRAMES_CP_OUTER_U0_frame4_a_V_din),
    .frame4_a_V_full_n(frame4_a_V_full_n),
    .frame4_a_V_write(Loop_FRAMES_CP_OUTER_U0_frame4_a_V_write),
    .frame5_a_V_din(Loop_FRAMES_CP_OUTER_U0_frame5_a_V_din),
    .frame5_a_V_full_n(frame5_a_V_full_n),
    .frame5_a_V_write(Loop_FRAMES_CP_OUTER_U0_frame5_a_V_write)
);

gradient_xy_calc gradient_xy_calc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(gradient_xy_calc_U0_ap_start),
    .start_full_n(start_for_gradient_weight_y_U0_full_n),
    .ap_done(gradient_xy_calc_U0_ap_done),
    .ap_continue(gradient_xy_calc_U0_ap_continue),
    .ap_idle(gradient_xy_calc_U0_ap_idle),
    .ap_ready(gradient_xy_calc_U0_ap_ready),
    .start_out(gradient_xy_calc_U0_start_out),
    .start_write(gradient_xy_calc_U0_start_write),
    .frame3_a_V_dout(frame3_a_V_dout),
    .frame3_a_V_empty_n(frame3_a_V_empty_n),
    .frame3_a_V_read(gradient_xy_calc_U0_frame3_a_V_read),
    .gradient_x_V_din(gradient_xy_calc_U0_gradient_x_V_din),
    .gradient_x_V_full_n(gradient_x_V_full_n),
    .gradient_x_V_write(gradient_xy_calc_U0_gradient_x_V_write),
    .gradient_y_V_din(gradient_xy_calc_U0_gradient_y_V_din),
    .gradient_y_V_full_n(gradient_y_V_full_n),
    .gradient_y_V_write(gradient_xy_calc_U0_gradient_y_V_write)
);

gradient_z_calc gradient_z_calc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(gradient_z_calc_U0_ap_start),
    .ap_done(gradient_z_calc_U0_ap_done),
    .ap_continue(gradient_z_calc_U0_ap_continue),
    .ap_idle(gradient_z_calc_U0_ap_idle),
    .ap_ready(gradient_z_calc_U0_ap_ready),
    .frame1_a_V_dout(frame1_a_V_dout),
    .frame1_a_V_empty_n(frame1_a_V_empty_n),
    .frame1_a_V_read(gradient_z_calc_U0_frame1_a_V_read),
    .frame2_a_V_dout(frame2_a_V_dout),
    .frame2_a_V_empty_n(frame2_a_V_empty_n),
    .frame2_a_V_read(gradient_z_calc_U0_frame2_a_V_read),
    .frame3_b_V_dout(frame3_b_V_dout),
    .frame3_b_V_empty_n(frame3_b_V_empty_n),
    .frame3_b_V_read(gradient_z_calc_U0_frame3_b_V_read),
    .frame4_a_V_dout(frame4_a_V_dout),
    .frame4_a_V_empty_n(frame4_a_V_empty_n),
    .frame4_a_V_read(gradient_z_calc_U0_frame4_a_V_read),
    .frame5_a_V_dout(frame5_a_V_dout),
    .frame5_a_V_empty_n(frame5_a_V_empty_n),
    .frame5_a_V_read(gradient_z_calc_U0_frame5_a_V_read),
    .gradient_z_V_din(gradient_z_calc_U0_gradient_z_V_din),
    .gradient_z_V_full_n(gradient_z_V_full_n),
    .gradient_z_V_write(gradient_z_calc_U0_gradient_z_V_write)
);

gradient_weight_y gradient_weight_y_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(gradient_weight_y_U0_ap_start),
    .start_full_n(start_for_gradient_weight_x_U0_full_n),
    .ap_done(gradient_weight_y_U0_ap_done),
    .ap_continue(gradient_weight_y_U0_ap_continue),
    .ap_idle(gradient_weight_y_U0_ap_idle),
    .ap_ready(gradient_weight_y_U0_ap_ready),
    .start_out(gradient_weight_y_U0_start_out),
    .start_write(gradient_weight_y_U0_start_write),
    .gradient_x_V_dout(gradient_x_V_dout),
    .gradient_x_V_empty_n(gradient_x_V_empty_n),
    .gradient_x_V_read(gradient_weight_y_U0_gradient_x_V_read),
    .gradient_y_V_dout(gradient_y_V_dout),
    .gradient_y_V_empty_n(gradient_y_V_empty_n),
    .gradient_y_V_read(gradient_weight_y_U0_gradient_y_V_read),
    .gradient_z_V_dout(gradient_z_V_dout),
    .gradient_z_V_empty_n(gradient_z_V_empty_n),
    .gradient_z_V_read(gradient_weight_y_U0_gradient_z_V_read),
    .y_filtered_x_V_din(gradient_weight_y_U0_y_filtered_x_V_din),
    .y_filtered_x_V_full_n(y_filtered_x_V_full_n),
    .y_filtered_x_V_write(gradient_weight_y_U0_y_filtered_x_V_write),
    .y_filtered_y_V_din(gradient_weight_y_U0_y_filtered_y_V_din),
    .y_filtered_y_V_full_n(y_filtered_y_V_full_n),
    .y_filtered_y_V_write(gradient_weight_y_U0_y_filtered_y_V_write),
    .y_filtered_z_V_din(gradient_weight_y_U0_y_filtered_z_V_din),
    .y_filtered_z_V_full_n(y_filtered_z_V_full_n),
    .y_filtered_z_V_write(gradient_weight_y_U0_y_filtered_z_V_write)
);

gradient_weight_x gradient_weight_x_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(gradient_weight_x_U0_ap_start),
    .start_full_n(start_for_outer_product_U0_full_n),
    .ap_done(gradient_weight_x_U0_ap_done),
    .ap_continue(gradient_weight_x_U0_ap_continue),
    .ap_idle(gradient_weight_x_U0_ap_idle),
    .ap_ready(gradient_weight_x_U0_ap_ready),
    .start_out(gradient_weight_x_U0_start_out),
    .start_write(gradient_weight_x_U0_start_write),
    .y_filtered_x_V_dout(y_filtered_x_V_dout),
    .y_filtered_x_V_empty_n(y_filtered_x_V_empty_n),
    .y_filtered_x_V_read(gradient_weight_x_U0_y_filtered_x_V_read),
    .y_filtered_y_V_dout(y_filtered_y_V_dout),
    .y_filtered_y_V_empty_n(y_filtered_y_V_empty_n),
    .y_filtered_y_V_read(gradient_weight_x_U0_y_filtered_y_V_read),
    .y_filtered_z_V_dout(y_filtered_z_V_dout),
    .y_filtered_z_V_empty_n(y_filtered_z_V_empty_n),
    .y_filtered_z_V_read(gradient_weight_x_U0_y_filtered_z_V_read),
    .filtered_gradient_x_s_din(gradient_weight_x_U0_filtered_gradient_x_s_din),
    .filtered_gradient_x_s_full_n(filtered_gradient_x_s_full_n),
    .filtered_gradient_x_s_write(gradient_weight_x_U0_filtered_gradient_x_s_write),
    .filtered_gradient_y_s_din(gradient_weight_x_U0_filtered_gradient_y_s_din),
    .filtered_gradient_y_s_full_n(filtered_gradient_y_s_full_n),
    .filtered_gradient_y_s_write(gradient_weight_x_U0_filtered_gradient_y_s_write),
    .filtered_gradient_z_s_din(gradient_weight_x_U0_filtered_gradient_z_s_din),
    .filtered_gradient_z_s_full_n(filtered_gradient_z_s_full_n),
    .filtered_gradient_z_s_write(gradient_weight_x_U0_filtered_gradient_z_s_write)
);

outer_product outer_product_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(outer_product_U0_ap_start),
    .start_full_n(start_for_tensor_weight_y_U0_full_n),
    .ap_done(outer_product_U0_ap_done),
    .ap_continue(outer_product_U0_ap_continue),
    .ap_idle(outer_product_U0_ap_idle),
    .ap_ready(outer_product_U0_ap_ready),
    .start_out(outer_product_U0_start_out),
    .start_write(outer_product_U0_start_write),
    .filtered_gradient_x_s_dout(filtered_gradient_x_s_dout),
    .filtered_gradient_x_s_empty_n(filtered_gradient_x_s_empty_n),
    .filtered_gradient_x_s_read(outer_product_U0_filtered_gradient_x_s_read),
    .filtered_gradient_y_s_dout(filtered_gradient_y_s_dout),
    .filtered_gradient_y_s_empty_n(filtered_gradient_y_s_empty_n),
    .filtered_gradient_y_s_read(outer_product_U0_filtered_gradient_y_s_read),
    .filtered_gradient_z_s_dout(filtered_gradient_z_s_dout),
    .filtered_gradient_z_s_empty_n(filtered_gradient_z_s_empty_n),
    .filtered_gradient_z_s_read(outer_product_U0_filtered_gradient_z_s_read),
    .out_product_val_V_din(outer_product_U0_out_product_val_V_din),
    .out_product_val_V_full_n(out_product_val_V_full_n),
    .out_product_val_V_write(outer_product_U0_out_product_val_V_write)
);

tensor_weight_y tensor_weight_y_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(tensor_weight_y_U0_ap_start),
    .start_full_n(start_for_tensor_weight_x_U0_full_n),
    .ap_done(tensor_weight_y_U0_ap_done),
    .ap_continue(tensor_weight_y_U0_ap_continue),
    .ap_idle(tensor_weight_y_U0_ap_idle),
    .ap_ready(tensor_weight_y_U0_ap_ready),
    .start_out(tensor_weight_y_U0_start_out),
    .start_write(tensor_weight_y_U0_start_write),
    .out_product_val_V_dout(out_product_val_V_dout),
    .out_product_val_V_empty_n(out_product_val_V_empty_n),
    .out_product_val_V_read(tensor_weight_y_U0_out_product_val_V_read),
    .tensor_y_val_V_din(tensor_weight_y_U0_tensor_y_val_V_din),
    .tensor_y_val_V_full_n(tensor_y_val_V_full_n),
    .tensor_y_val_V_write(tensor_weight_y_U0_tensor_y_val_V_write)
);

tensor_weight_x tensor_weight_x_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(tensor_weight_x_U0_ap_start),
    .ap_done(tensor_weight_x_U0_ap_done),
    .ap_continue(tensor_weight_x_U0_ap_continue),
    .ap_idle(tensor_weight_x_U0_ap_idle),
    .ap_ready(tensor_weight_x_U0_ap_ready),
    .tensor_y_val_V_dout(tensor_y_val_V_dout),
    .tensor_y_val_V_empty_n(tensor_y_val_V_empty_n),
    .tensor_y_val_V_read(tensor_weight_x_U0_tensor_y_val_V_read),
    .tensor_val_V_din(tensor_weight_x_U0_tensor_val_V_din),
    .tensor_val_V_full_n(tensor_val_V_full_n),
    .tensor_val_V_write(tensor_weight_x_U0_tensor_val_V_write)
);

flow_calc flow_calc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(flow_calc_U0_ap_start),
    .ap_done(flow_calc_U0_ap_done),
    .ap_continue(flow_calc_U0_ap_continue),
    .ap_idle(flow_calc_U0_ap_idle),
    .ap_ready(flow_calc_U0_ap_ready),
    .m_axi_outputs_AWVALID(flow_calc_U0_m_axi_outputs_AWVALID),
    .m_axi_outputs_AWREADY(gmem1_AWREADY),
    .m_axi_outputs_AWADDR(flow_calc_U0_m_axi_outputs_AWADDR),
    .m_axi_outputs_AWID(flow_calc_U0_m_axi_outputs_AWID),
    .m_axi_outputs_AWLEN(flow_calc_U0_m_axi_outputs_AWLEN),
    .m_axi_outputs_AWSIZE(flow_calc_U0_m_axi_outputs_AWSIZE),
    .m_axi_outputs_AWBURST(flow_calc_U0_m_axi_outputs_AWBURST),
    .m_axi_outputs_AWLOCK(flow_calc_U0_m_axi_outputs_AWLOCK),
    .m_axi_outputs_AWCACHE(flow_calc_U0_m_axi_outputs_AWCACHE),
    .m_axi_outputs_AWPROT(flow_calc_U0_m_axi_outputs_AWPROT),
    .m_axi_outputs_AWQOS(flow_calc_U0_m_axi_outputs_AWQOS),
    .m_axi_outputs_AWREGION(flow_calc_U0_m_axi_outputs_AWREGION),
    .m_axi_outputs_AWUSER(flow_calc_U0_m_axi_outputs_AWUSER),
    .m_axi_outputs_WVALID(flow_calc_U0_m_axi_outputs_WVALID),
    .m_axi_outputs_WREADY(gmem1_WREADY),
    .m_axi_outputs_WDATA(flow_calc_U0_m_axi_outputs_WDATA),
    .m_axi_outputs_WSTRB(flow_calc_U0_m_axi_outputs_WSTRB),
    .m_axi_outputs_WLAST(flow_calc_U0_m_axi_outputs_WLAST),
    .m_axi_outputs_WID(flow_calc_U0_m_axi_outputs_WID),
    .m_axi_outputs_WUSER(flow_calc_U0_m_axi_outputs_WUSER),
    .m_axi_outputs_ARVALID(flow_calc_U0_m_axi_outputs_ARVALID),
    .m_axi_outputs_ARREADY(1'b0),
    .m_axi_outputs_ARADDR(flow_calc_U0_m_axi_outputs_ARADDR),
    .m_axi_outputs_ARID(flow_calc_U0_m_axi_outputs_ARID),
    .m_axi_outputs_ARLEN(flow_calc_U0_m_axi_outputs_ARLEN),
    .m_axi_outputs_ARSIZE(flow_calc_U0_m_axi_outputs_ARSIZE),
    .m_axi_outputs_ARBURST(flow_calc_U0_m_axi_outputs_ARBURST),
    .m_axi_outputs_ARLOCK(flow_calc_U0_m_axi_outputs_ARLOCK),
    .m_axi_outputs_ARCACHE(flow_calc_U0_m_axi_outputs_ARCACHE),
    .m_axi_outputs_ARPROT(flow_calc_U0_m_axi_outputs_ARPROT),
    .m_axi_outputs_ARQOS(flow_calc_U0_m_axi_outputs_ARQOS),
    .m_axi_outputs_ARREGION(flow_calc_U0_m_axi_outputs_ARREGION),
    .m_axi_outputs_ARUSER(flow_calc_U0_m_axi_outputs_ARUSER),
    .m_axi_outputs_RVALID(1'b0),
    .m_axi_outputs_RREADY(flow_calc_U0_m_axi_outputs_RREADY),
    .m_axi_outputs_RDATA(64'd0),
    .m_axi_outputs_RLAST(1'b0),
    .m_axi_outputs_RID(1'd0),
    .m_axi_outputs_RUSER(1'd0),
    .m_axi_outputs_RRESP(2'd0),
    .m_axi_outputs_BVALID(gmem1_BVALID),
    .m_axi_outputs_BREADY(flow_calc_U0_m_axi_outputs_BREADY),
    .m_axi_outputs_BRESP(gmem1_BRESP),
    .m_axi_outputs_BID(gmem1_BID),
    .m_axi_outputs_BUSER(gmem1_BUSER),
    .outputs_offset_dout(outputs_c_dout),
    .outputs_offset_empty_n(outputs_c_empty_n),
    .outputs_offset_read(flow_calc_U0_outputs_offset_read),
    .tensor_val_V_dout(tensor_val_V_dout),
    .tensor_val_V_empty_n(tensor_val_V_empty_n),
    .tensor_val_V_read(flow_calc_U0_tensor_val_V_read)
);

fifo_w32_d2_A frames_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(optical_flow_entry12_U0_frames_V_out_din),
    .if_full_n(frames_V_c_full_n),
    .if_write(optical_flow_entry12_U0_frames_V_out_write),
    .if_dout(frames_V_c_dout),
    .if_empty_n(frames_V_c_empty_n),
    .if_read(Loop_FRAMES_CP_OUTER_U0_frames_V_offset_read)
);

fifo_w32_d2_A outputs_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(optical_flow_entry12_U0_outputs_out_din),
    .if_full_n(outputs_c_full_n),
    .if_write(optical_flow_entry12_U0_outputs_out_write),
    .if_dout(outputs_c_dout),
    .if_empty_n(outputs_c_empty_n),
    .if_read(flow_calc_U0_outputs_offset_read)
);

fifo_w8_d10_A frame1_a_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_FRAMES_CP_OUTER_U0_frame1_a_V_din),
    .if_full_n(frame1_a_V_full_n),
    .if_write(Loop_FRAMES_CP_OUTER_U0_frame1_a_V_write),
    .if_dout(frame1_a_V_dout),
    .if_empty_n(frame1_a_V_empty_n),
    .if_read(gradient_z_calc_U0_frame1_a_V_read)
);

fifo_w8_d10_A frame2_a_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_FRAMES_CP_OUTER_U0_frame2_a_V_din),
    .if_full_n(frame2_a_V_full_n),
    .if_write(Loop_FRAMES_CP_OUTER_U0_frame2_a_V_write),
    .if_dout(frame2_a_V_dout),
    .if_empty_n(frame2_a_V_empty_n),
    .if_read(gradient_z_calc_U0_frame2_a_V_read)
);

fifo_w8_d10_A frame3_a_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_FRAMES_CP_OUTER_U0_frame3_a_V_din),
    .if_full_n(frame3_a_V_full_n),
    .if_write(Loop_FRAMES_CP_OUTER_U0_frame3_a_V_write),
    .if_dout(frame3_a_V_dout),
    .if_empty_n(frame3_a_V_empty_n),
    .if_read(gradient_xy_calc_U0_frame3_a_V_read)
);

fifo_w8_d10_A frame3_b_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_FRAMES_CP_OUTER_U0_frame3_b_V_din),
    .if_full_n(frame3_b_V_full_n),
    .if_write(Loop_FRAMES_CP_OUTER_U0_frame3_b_V_write),
    .if_dout(frame3_b_V_dout),
    .if_empty_n(frame3_b_V_empty_n),
    .if_read(gradient_z_calc_U0_frame3_b_V_read)
);

fifo_w8_d10_A frame4_a_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_FRAMES_CP_OUTER_U0_frame4_a_V_din),
    .if_full_n(frame4_a_V_full_n),
    .if_write(Loop_FRAMES_CP_OUTER_U0_frame4_a_V_write),
    .if_dout(frame4_a_V_dout),
    .if_empty_n(frame4_a_V_empty_n),
    .if_read(gradient_z_calc_U0_frame4_a_V_read)
);

fifo_w8_d10_A frame5_a_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_FRAMES_CP_OUTER_U0_frame5_a_V_din),
    .if_full_n(frame5_a_V_full_n),
    .if_write(Loop_FRAMES_CP_OUTER_U0_frame5_a_V_write),
    .if_dout(frame5_a_V_dout),
    .if_empty_n(frame5_a_V_empty_n),
    .if_read(gradient_z_calc_U0_frame5_a_V_read)
);

fifo_w32_d10_A gradient_x_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gradient_xy_calc_U0_gradient_x_V_din),
    .if_full_n(gradient_x_V_full_n),
    .if_write(gradient_xy_calc_U0_gradient_x_V_write),
    .if_dout(gradient_x_V_dout),
    .if_empty_n(gradient_x_V_empty_n),
    .if_read(gradient_weight_y_U0_gradient_x_V_read)
);

fifo_w32_d10_A gradient_y_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gradient_xy_calc_U0_gradient_y_V_din),
    .if_full_n(gradient_y_V_full_n),
    .if_write(gradient_xy_calc_U0_gradient_y_V_write),
    .if_dout(gradient_y_V_dout),
    .if_empty_n(gradient_y_V_empty_n),
    .if_read(gradient_weight_y_U0_gradient_y_V_read)
);

fifo_w32_d10_A gradient_z_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gradient_z_calc_U0_gradient_z_V_din),
    .if_full_n(gradient_z_V_full_n),
    .if_write(gradient_z_calc_U0_gradient_z_V_write),
    .if_dout(gradient_z_V_dout),
    .if_empty_n(gradient_z_V_empty_n),
    .if_read(gradient_weight_y_U0_gradient_z_V_read)
);

fifo_w1_d10_A y_filtered_x_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gradient_weight_y_U0_y_filtered_x_V_din),
    .if_full_n(y_filtered_x_V_full_n),
    .if_write(gradient_weight_y_U0_y_filtered_x_V_write),
    .if_dout(y_filtered_x_V_dout),
    .if_empty_n(y_filtered_x_V_empty_n),
    .if_read(gradient_weight_x_U0_y_filtered_x_V_read)
);

fifo_w1_d10_A y_filtered_y_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gradient_weight_y_U0_y_filtered_y_V_din),
    .if_full_n(y_filtered_y_V_full_n),
    .if_write(gradient_weight_y_U0_y_filtered_y_V_write),
    .if_dout(y_filtered_y_V_dout),
    .if_empty_n(y_filtered_y_V_empty_n),
    .if_read(gradient_weight_x_U0_y_filtered_y_V_read)
);

fifo_w1_d10_A y_filtered_z_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gradient_weight_y_U0_y_filtered_z_V_din),
    .if_full_n(y_filtered_z_V_full_n),
    .if_write(gradient_weight_y_U0_y_filtered_z_V_write),
    .if_dout(y_filtered_z_V_dout),
    .if_empty_n(y_filtered_z_V_empty_n),
    .if_read(gradient_weight_x_U0_y_filtered_z_V_read)
);

fifo_w32_d10_A filtered_gradient_x_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gradient_weight_x_U0_filtered_gradient_x_s_din),
    .if_full_n(filtered_gradient_x_s_full_n),
    .if_write(gradient_weight_x_U0_filtered_gradient_x_s_write),
    .if_dout(filtered_gradient_x_s_dout),
    .if_empty_n(filtered_gradient_x_s_empty_n),
    .if_read(outer_product_U0_filtered_gradient_x_s_read)
);

fifo_w32_d10_A filtered_gradient_y_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gradient_weight_x_U0_filtered_gradient_y_s_din),
    .if_full_n(filtered_gradient_y_s_full_n),
    .if_write(gradient_weight_x_U0_filtered_gradient_y_s_write),
    .if_dout(filtered_gradient_y_s_dout),
    .if_empty_n(filtered_gradient_y_s_empty_n),
    .if_read(outer_product_U0_filtered_gradient_y_s_read)
);

fifo_w32_d10_A filtered_gradient_z_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gradient_weight_x_U0_filtered_gradient_z_s_din),
    .if_full_n(filtered_gradient_z_s_full_n),
    .if_write(gradient_weight_x_U0_filtered_gradient_z_s_write),
    .if_dout(filtered_gradient_z_s_dout),
    .if_empty_n(filtered_gradient_z_s_empty_n),
    .if_read(outer_product_U0_filtered_gradient_z_s_read)
);

fifo_w191_d10_A out_product_val_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(outer_product_U0_out_product_val_V_din),
    .if_full_n(out_product_val_V_full_n),
    .if_write(outer_product_U0_out_product_val_V_write),
    .if_dout(out_product_val_V_dout),
    .if_empty_n(out_product_val_V_empty_n),
    .if_read(tensor_weight_y_U0_out_product_val_V_read)
);

fifo_w192_d10_A tensor_y_val_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(tensor_weight_y_U0_tensor_y_val_V_din),
    .if_full_n(tensor_y_val_V_full_n),
    .if_write(tensor_weight_y_U0_tensor_y_val_V_write),
    .if_dout(tensor_y_val_V_dout),
    .if_empty_n(tensor_y_val_V_empty_n),
    .if_read(tensor_weight_x_U0_tensor_y_val_V_read)
);

fifo_w192_d10_A tensor_val_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(tensor_weight_x_U0_tensor_val_V_din),
    .if_full_n(tensor_val_V_full_n),
    .if_write(tensor_weight_x_U0_tensor_val_V_write),
    .if_dout(tensor_val_V_dout),
    .if_empty_n(tensor_val_V_empty_n),
    .if_read(flow_calc_U0_tensor_val_V_read)
);

start_for_flow_caCeG start_for_flow_caCeG_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_flow_calc_U0_din),
    .if_full_n(start_for_flow_calc_U0_full_n),
    .if_write(optical_flow_entry12_U0_start_write),
    .if_dout(start_for_flow_calc_U0_dout),
    .if_empty_n(start_for_flow_calc_U0_empty_n),
    .if_read(flow_calc_U0_ap_ready)
);

start_for_gradienDeQ start_for_gradienDeQ_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_gradient_xy_calc_U0_din),
    .if_full_n(start_for_gradient_xy_calc_U0_full_n),
    .if_write(Loop_FRAMES_CP_OUTER_U0_start_write),
    .if_dout(start_for_gradient_xy_calc_U0_dout),
    .if_empty_n(start_for_gradient_xy_calc_U0_empty_n),
    .if_read(gradient_xy_calc_U0_ap_ready)
);

start_for_gradienEe0 start_for_gradienEe0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_gradient_z_calc_U0_din),
    .if_full_n(start_for_gradient_z_calc_U0_full_n),
    .if_write(Loop_FRAMES_CP_OUTER_U0_start_write),
    .if_dout(start_for_gradient_z_calc_U0_dout),
    .if_empty_n(start_for_gradient_z_calc_U0_empty_n),
    .if_read(gradient_z_calc_U0_ap_ready)
);

start_for_gradienFfa start_for_gradienFfa_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_gradient_weight_y_U0_din),
    .if_full_n(start_for_gradient_weight_y_U0_full_n),
    .if_write(gradient_xy_calc_U0_start_write),
    .if_dout(start_for_gradient_weight_y_U0_dout),
    .if_empty_n(start_for_gradient_weight_y_U0_empty_n),
    .if_read(gradient_weight_y_U0_ap_ready)
);

start_for_gradienGfk start_for_gradienGfk_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_gradient_weight_x_U0_din),
    .if_full_n(start_for_gradient_weight_x_U0_full_n),
    .if_write(gradient_weight_y_U0_start_write),
    .if_dout(start_for_gradient_weight_x_U0_dout),
    .if_empty_n(start_for_gradient_weight_x_U0_empty_n),
    .if_read(gradient_weight_x_U0_ap_ready)
);

start_for_outer_pHfu start_for_outer_pHfu_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_outer_product_U0_din),
    .if_full_n(start_for_outer_product_U0_full_n),
    .if_write(gradient_weight_x_U0_start_write),
    .if_dout(start_for_outer_product_U0_dout),
    .if_empty_n(start_for_outer_product_U0_empty_n),
    .if_read(outer_product_U0_ap_ready)
);

start_for_tensor_IfE start_for_tensor_IfE_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_tensor_weight_y_U0_din),
    .if_full_n(start_for_tensor_weight_y_U0_full_n),
    .if_write(outer_product_U0_start_write),
    .if_dout(start_for_tensor_weight_y_U0_dout),
    .if_empty_n(start_for_tensor_weight_y_U0_empty_n),
    .if_read(tensor_weight_y_U0_ap_ready)
);

start_for_tensor_JfO start_for_tensor_JfO_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_tensor_weight_x_U0_din),
    .if_full_n(start_for_tensor_weight_x_U0_full_n),
    .if_write(tensor_weight_y_U0_start_write),
    .if_dout(start_for_tensor_weight_x_U0_dout),
    .if_empty_n(start_for_tensor_weight_x_U0_empty_n),
    .if_read(tensor_weight_x_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Loop_FRAMES_CP_OUTER_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Loop_FRAMES_CP_OUTER_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Loop_FRAMES_CP_OUTER_U0_ap_ready <= ap_sync_Loop_FRAMES_CP_OUTER_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_optical_flow_entry12_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_optical_flow_entry12_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_optical_flow_entry12_U0_ap_ready <= ap_sync_optical_flow_entry12_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (1'b0 == Loop_FRAMES_CP_OUTER_U0_ap_ready))) begin
        Loop_FRAMES_CP_OUTER_U0_ap_ready_count <= (Loop_FRAMES_CP_OUTER_U0_ap_ready_count - 2'd1);
    end else if (((1'b1 == Loop_FRAMES_CP_OUTER_U0_ap_ready) & (ap_sync_ready == 1'b0))) begin
        Loop_FRAMES_CP_OUTER_U0_ap_ready_count <= (Loop_FRAMES_CP_OUTER_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (optical_flow_entry12_U0_ap_ready == 1'b0))) begin
        optical_flow_entry12_U0_ap_ready_count <= (optical_flow_entry12_U0_ap_ready_count - 2'd1);
    end else if (((optical_flow_entry12_U0_ap_ready == 1'b1) & (ap_sync_ready == 1'b0))) begin
        optical_flow_entry12_U0_ap_ready_count <= (optical_flow_entry12_U0_ap_ready_count + 2'd1);
    end
end

assign Loop_FRAMES_CP_OUTER_U0_ap_continue = 1'b1;

assign Loop_FRAMES_CP_OUTER_U0_ap_start = ((ap_sync_reg_Loop_FRAMES_CP_OUTER_U0_ap_ready ^ 1'b1) & ap_start);

assign Loop_FRAMES_CP_OUTER_U0_start_full_n = (start_for_gradient_z_calc_U0_full_n & start_for_gradient_xy_calc_U0_full_n);

assign ap_done = flow_calc_U0_ap_done;

assign ap_idle = (tensor_weight_y_U0_ap_idle & tensor_weight_x_U0_ap_idle & outer_product_U0_ap_idle & optical_flow_entry12_U0_ap_idle & gradient_z_calc_U0_ap_idle & gradient_xy_calc_U0_ap_idle & gradient_weight_y_U0_ap_idle & gradient_weight_x_U0_ap_idle & flow_calc_U0_ap_idle & Loop_FRAMES_CP_OUTER_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_Loop_FRAMES_CP_OUTER_U0_ap_ready = (ap_sync_reg_Loop_FRAMES_CP_OUTER_U0_ap_ready | Loop_FRAMES_CP_OUTER_U0_ap_ready);

assign ap_sync_continue = 1'b1;

assign ap_sync_done = flow_calc_U0_ap_done;

assign ap_sync_optical_flow_entry12_U0_ap_ready = (optical_flow_entry12_U0_ap_ready | ap_sync_reg_optical_flow_entry12_U0_ap_ready);

assign ap_sync_ready = (ap_sync_optical_flow_entry12_U0_ap_ready & ap_sync_Loop_FRAMES_CP_OUTER_U0_ap_ready);

assign flow_calc_U0_ap_continue = 1'b1;

assign flow_calc_U0_ap_start = start_for_flow_calc_U0_empty_n;

assign flow_calc_U0_start_full_n = 1'b1;

assign flow_calc_U0_start_write = 1'b0;

assign gradient_weight_x_U0_ap_continue = 1'b1;

assign gradient_weight_x_U0_ap_start = start_for_gradient_weight_x_U0_empty_n;

assign gradient_weight_y_U0_ap_continue = 1'b1;

assign gradient_weight_y_U0_ap_start = start_for_gradient_weight_y_U0_empty_n;

assign gradient_xy_calc_U0_ap_continue = 1'b1;

assign gradient_xy_calc_U0_ap_start = start_for_gradient_xy_calc_U0_empty_n;

assign gradient_z_calc_U0_ap_continue = 1'b1;

assign gradient_z_calc_U0_ap_start = start_for_gradient_z_calc_U0_empty_n;

assign gradient_z_calc_U0_start_full_n = 1'b1;

assign gradient_z_calc_U0_start_write = 1'b0;

assign optical_flow_entry12_U0_ap_continue = 1'b1;

assign optical_flow_entry12_U0_ap_start = ((ap_sync_reg_optical_flow_entry12_U0_ap_ready ^ 1'b1) & ap_start);

assign outer_product_U0_ap_continue = 1'b1;

assign outer_product_U0_ap_start = start_for_outer_product_U0_empty_n;

assign start_for_flow_calc_U0_din = 1'b1;

assign start_for_gradient_weight_x_U0_din = 1'b1;

assign start_for_gradient_weight_y_U0_din = 1'b1;

assign start_for_gradient_xy_calc_U0_din = 1'b1;

assign start_for_gradient_z_calc_U0_din = 1'b1;

assign start_for_outer_product_U0_din = 1'b1;

assign start_for_tensor_weight_x_U0_din = 1'b1;

assign start_for_tensor_weight_y_U0_din = 1'b1;

assign tensor_weight_x_U0_ap_continue = 1'b1;

assign tensor_weight_x_U0_ap_start = start_for_tensor_weight_x_U0_empty_n;

assign tensor_weight_x_U0_start_full_n = 1'b1;

assign tensor_weight_x_U0_start_write = 1'b0;

assign tensor_weight_y_U0_ap_continue = 1'b1;

assign tensor_weight_y_U0_ap_start = start_for_tensor_weight_y_U0_empty_n;

endmodule //optical_flow
