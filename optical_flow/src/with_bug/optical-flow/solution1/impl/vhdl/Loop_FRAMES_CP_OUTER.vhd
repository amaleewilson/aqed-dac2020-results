-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Loop_FRAMES_CP_OUTER is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    m_axi_frames_V_AWVALID : OUT STD_LOGIC;
    m_axi_frames_V_AWREADY : IN STD_LOGIC;
    m_axi_frames_V_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_frames_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frames_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_frames_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_frames_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frames_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frames_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frames_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_frames_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frames_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frames_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frames_V_WVALID : OUT STD_LOGIC;
    m_axi_frames_V_WREADY : IN STD_LOGIC;
    m_axi_frames_V_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_frames_V_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_frames_V_WLAST : OUT STD_LOGIC;
    m_axi_frames_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frames_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frames_V_ARVALID : OUT STD_LOGIC;
    m_axi_frames_V_ARREADY : IN STD_LOGIC;
    m_axi_frames_V_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_frames_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frames_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_frames_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_frames_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frames_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frames_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frames_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_frames_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frames_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_frames_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frames_V_RVALID : IN STD_LOGIC;
    m_axi_frames_V_RREADY : OUT STD_LOGIC;
    m_axi_frames_V_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_frames_V_RLAST : IN STD_LOGIC;
    m_axi_frames_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frames_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frames_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frames_V_BVALID : IN STD_LOGIC;
    m_axi_frames_V_BREADY : OUT STD_LOGIC;
    m_axi_frames_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_frames_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_frames_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    frames_V_offset_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    frames_V_offset_empty_n : IN STD_LOGIC;
    frames_V_offset_read : OUT STD_LOGIC;
    frame1_a_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    frame1_a_V_full_n : IN STD_LOGIC;
    frame1_a_V_write : OUT STD_LOGIC;
    frame2_a_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    frame2_a_V_full_n : IN STD_LOGIC;
    frame2_a_V_write : OUT STD_LOGIC;
    frame3_a_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    frame3_a_V_full_n : IN STD_LOGIC;
    frame3_a_V_write : OUT STD_LOGIC;
    frame3_b_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    frame3_b_V_full_n : IN STD_LOGIC;
    frame3_b_V_write : OUT STD_LOGIC;
    frame4_a_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    frame4_a_V_full_n : IN STD_LOGIC;
    frame4_a_V_write : OUT STD_LOGIC;
    frame5_a_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    frame5_a_V_full_n : IN STD_LOGIC;
    frame5_a_V_write : OUT STD_LOGIC );
end;


architecture behav of Loop_FRAMES_CP_OUTER is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv6_32 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv6_A : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal frames_V_blk_n_AR : STD_LOGIC;
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_124_reg_438 : STD_LOGIC_VECTOR (0 downto 0);
    signal frames_V_blk_n_R : STD_LOGIC;
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal exitcond_flatten_i_reg_403 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_i_reg_403_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal frames_V_offset_blk_n : STD_LOGIC;
    signal frame1_a_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal exitcond_flatten_i_reg_403_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal frame2_a_V_blk_n : STD_LOGIC;
    signal frame3_a_V_blk_n : STD_LOGIC;
    signal frame3_b_V_blk_n : STD_LOGIC;
    signal frame4_a_V_blk_n : STD_LOGIC;
    signal frame5_a_V_blk_n : STD_LOGIC;
    signal indvar_flatten_i_reg_168 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_sig_ioackin_m_axi_frames_V_ARREADY : STD_LOGIC;
    signal ap_block_state12_io : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal r_i_i_reg_180 : STD_LOGIC_VECTOR (2 downto 0);
    signal c_i_i_reg_191 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_cast_i_fu_212_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_cast_i_reg_393 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_29_i_fu_236_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_29_i_reg_398 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_29_i_reg_398_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_29_i_reg_398_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_29_i_reg_398_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_29_i_reg_398_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_29_i_reg_398_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_29_i_reg_398_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_29_i_reg_398_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_29_i_reg_398_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond_flatten_i_fu_242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_i_reg_403_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_i_reg_403_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_i_reg_403_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_i_reg_403_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_i_reg_403_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_i_reg_403_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_i_reg_403_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_i_reg_403_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_i_reg_403_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_i_reg_403_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_i_reg_403_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_i_reg_403_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_i_reg_403_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_i_reg_403_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_i_reg_403_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_s_fu_248_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_next_s_reg_407 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_i14_i_fu_254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i14_i_reg_412 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i14_i_reg_412_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i14_i_reg_412_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i14_i_reg_412_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i14_i_reg_412_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i14_i_reg_412_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i14_i_reg_412_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i14_i_reg_412_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i14_i_reg_412_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r7_i_fu_260_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal r7_i_reg_417 : STD_LOGIC_VECTOR (2 downto 0);
    signal r7_i_reg_417_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal r7_i_reg_417_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal r7_i_reg_417_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal r7_i_reg_417_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal r7_i_reg_417_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal r7_i_reg_417_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal r7_i_reg_417_pp0_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal r7_i_reg_417_pp0_iter8_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal r_i_mid2_i_fu_266_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal c_fu_286_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sum3_i_fu_328_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal sum3_i_reg_433 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_124_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_125_fu_349_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_125_reg_448 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_i_i_reg_453 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_2_i_i_reg_458 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_3_i_i_reg_464 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_4_i_i_reg_469 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_phi_mux_indvar_flatten_i_phi_fu_172_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum3_cast_i_fu_339_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_m_axi_frames_V_ARREADY : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_fu_202_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_shl8_i_i_fu_224_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl_i_i_fu_216_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_i_fu_232_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_274_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_i_i_op_fu_280_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl8_i_mid1_i_fu_301_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_56_mid1_i_fu_308_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl_i_mid1_i_fu_294_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_57_mid1_i_fu_312_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_122_fu_318_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_58_mid2_cast_i_fu_324_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_274_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_274_ce : STD_LOGIC;
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component optical_flow_urembkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;



begin
    optical_flow_urembkb_U5 : component optical_flow_urembkb
    generic map (
        ID => 1,
        NUM_STAGE => 10,
        din0_WIDTH => 6,
        din1_WIDTH => 5,
        dout_WIDTH => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_phi_mux_indvar_flatten_i_phi_fu_172_p4,
        din1 => grp_fu_274_p1,
        ce => grp_fu_274_ce,
        dout => grp_fu_274_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((frames_V_offset_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                elsif ((not(((frames_V_offset_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_m_axi_frames_V_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_frames_V_ARREADY <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (tmp_124_reg_438 = ap_const_lv1_1))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_m_axi_frames_V_ARREADY <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (m_axi_frames_V_ARREADY = ap_const_logic_1))) then 
                        ap_reg_ioackin_m_axi_frames_V_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c_i_i_reg_191_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_i_fu_242_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                c_i_i_reg_191 <= c_fu_286_p3;
            elsif ((not(((frames_V_offset_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c_i_i_reg_191 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    indvar_flatten_i_reg_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_i_reg_403 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_i_reg_168 <= indvar_flatten_next_s_reg_407;
            elsif ((not(((frames_V_offset_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_i_reg_168 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    r_i_i_reg_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_i_fu_242_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                r_i_i_reg_180 <= r_i_mid2_i_fu_266_p3;
            elsif ((not(((frames_V_offset_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                r_i_i_reg_180 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten_i_reg_403 <= exitcond_flatten_i_fu_242_p2;
                exitcond_flatten_i_reg_403_pp0_iter1_reg <= exitcond_flatten_i_reg_403;
                exitcond_i14_i_reg_412_pp0_iter1_reg <= exitcond_i14_i_reg_412;
                r7_i_reg_417_pp0_iter1_reg <= r7_i_reg_417;
                    tmp_29_i_reg_398(5 downto 1) <= tmp_29_i_fu_236_p2(5 downto 1);
                    tmp_29_i_reg_398_pp0_iter1_reg(5 downto 1) <= tmp_29_i_reg_398(5 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond_flatten_i_reg_403_pp0_iter10_reg <= exitcond_flatten_i_reg_403_pp0_iter9_reg;
                exitcond_flatten_i_reg_403_pp0_iter11_reg <= exitcond_flatten_i_reg_403_pp0_iter10_reg;
                exitcond_flatten_i_reg_403_pp0_iter12_reg <= exitcond_flatten_i_reg_403_pp0_iter11_reg;
                exitcond_flatten_i_reg_403_pp0_iter13_reg <= exitcond_flatten_i_reg_403_pp0_iter12_reg;
                exitcond_flatten_i_reg_403_pp0_iter14_reg <= exitcond_flatten_i_reg_403_pp0_iter13_reg;
                exitcond_flatten_i_reg_403_pp0_iter15_reg <= exitcond_flatten_i_reg_403_pp0_iter14_reg;
                exitcond_flatten_i_reg_403_pp0_iter16_reg <= exitcond_flatten_i_reg_403_pp0_iter15_reg;
                exitcond_flatten_i_reg_403_pp0_iter17_reg <= exitcond_flatten_i_reg_403_pp0_iter16_reg;
                exitcond_flatten_i_reg_403_pp0_iter2_reg <= exitcond_flatten_i_reg_403_pp0_iter1_reg;
                exitcond_flatten_i_reg_403_pp0_iter3_reg <= exitcond_flatten_i_reg_403_pp0_iter2_reg;
                exitcond_flatten_i_reg_403_pp0_iter4_reg <= exitcond_flatten_i_reg_403_pp0_iter3_reg;
                exitcond_flatten_i_reg_403_pp0_iter5_reg <= exitcond_flatten_i_reg_403_pp0_iter4_reg;
                exitcond_flatten_i_reg_403_pp0_iter6_reg <= exitcond_flatten_i_reg_403_pp0_iter5_reg;
                exitcond_flatten_i_reg_403_pp0_iter7_reg <= exitcond_flatten_i_reg_403_pp0_iter6_reg;
                exitcond_flatten_i_reg_403_pp0_iter8_reg <= exitcond_flatten_i_reg_403_pp0_iter7_reg;
                exitcond_flatten_i_reg_403_pp0_iter9_reg <= exitcond_flatten_i_reg_403_pp0_iter8_reg;
                exitcond_i14_i_reg_412_pp0_iter2_reg <= exitcond_i14_i_reg_412_pp0_iter1_reg;
                exitcond_i14_i_reg_412_pp0_iter3_reg <= exitcond_i14_i_reg_412_pp0_iter2_reg;
                exitcond_i14_i_reg_412_pp0_iter4_reg <= exitcond_i14_i_reg_412_pp0_iter3_reg;
                exitcond_i14_i_reg_412_pp0_iter5_reg <= exitcond_i14_i_reg_412_pp0_iter4_reg;
                exitcond_i14_i_reg_412_pp0_iter6_reg <= exitcond_i14_i_reg_412_pp0_iter5_reg;
                exitcond_i14_i_reg_412_pp0_iter7_reg <= exitcond_i14_i_reg_412_pp0_iter6_reg;
                exitcond_i14_i_reg_412_pp0_iter8_reg <= exitcond_i14_i_reg_412_pp0_iter7_reg;
                r7_i_reg_417_pp0_iter2_reg <= r7_i_reg_417_pp0_iter1_reg;
                r7_i_reg_417_pp0_iter3_reg <= r7_i_reg_417_pp0_iter2_reg;
                r7_i_reg_417_pp0_iter4_reg <= r7_i_reg_417_pp0_iter3_reg;
                r7_i_reg_417_pp0_iter5_reg <= r7_i_reg_417_pp0_iter4_reg;
                r7_i_reg_417_pp0_iter6_reg <= r7_i_reg_417_pp0_iter5_reg;
                r7_i_reg_417_pp0_iter7_reg <= r7_i_reg_417_pp0_iter6_reg;
                r7_i_reg_417_pp0_iter8_reg <= r7_i_reg_417_pp0_iter7_reg;
                    tmp_29_i_reg_398_pp0_iter2_reg(5 downto 1) <= tmp_29_i_reg_398_pp0_iter1_reg(5 downto 1);
                    tmp_29_i_reg_398_pp0_iter3_reg(5 downto 1) <= tmp_29_i_reg_398_pp0_iter2_reg(5 downto 1);
                    tmp_29_i_reg_398_pp0_iter4_reg(5 downto 1) <= tmp_29_i_reg_398_pp0_iter3_reg(5 downto 1);
                    tmp_29_i_reg_398_pp0_iter5_reg(5 downto 1) <= tmp_29_i_reg_398_pp0_iter4_reg(5 downto 1);
                    tmp_29_i_reg_398_pp0_iter6_reg(5 downto 1) <= tmp_29_i_reg_398_pp0_iter5_reg(5 downto 1);
                    tmp_29_i_reg_398_pp0_iter7_reg(5 downto 1) <= tmp_29_i_reg_398_pp0_iter6_reg(5 downto 1);
                    tmp_29_i_reg_398_pp0_iter8_reg(5 downto 1) <= tmp_29_i_reg_398_pp0_iter7_reg(5 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_i_fu_242_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_i14_i_reg_412 <= exitcond_i14_i_fu_254_p2;
                r7_i_reg_417 <= r7_i_fu_260_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                indvar_flatten_next_s_reg_407 <= indvar_flatten_next_s_fu_248_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_i_reg_403_pp0_iter16_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Result_1_i_i_reg_453 <= m_axi_frames_V_RDATA(15 downto 8);
                p_Result_2_i_i_reg_458 <= m_axi_frames_V_RDATA(23 downto 16);
                p_Result_3_i_i_reg_464 <= m_axi_frames_V_RDATA(31 downto 24);
                p_Result_4_i_i_reg_469 <= m_axi_frames_V_RDATA(39 downto 32);
                tmp_125_reg_448 <= tmp_125_fu_349_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((frames_V_offset_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    sext_cast_i_reg_393(28 downto 0) <= sext_cast_i_fu_212_p1(28 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_i_reg_403_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum3_i_reg_433 <= sum3_i_fu_328_p2;
                tmp_124_reg_438 <= tmp_124_fu_333_p2;
            end if;
        end if;
    end process;
    sext_cast_i_reg_393(29) <= '0';
    tmp_29_i_reg_398(0) <= '0';
    tmp_29_i_reg_398_pp0_iter1_reg(0) <= '0';
    tmp_29_i_reg_398_pp0_iter2_reg(0) <= '0';
    tmp_29_i_reg_398_pp0_iter3_reg(0) <= '0';
    tmp_29_i_reg_398_pp0_iter4_reg(0) <= '0';
    tmp_29_i_reg_398_pp0_iter5_reg(0) <= '0';
    tmp_29_i_reg_398_pp0_iter6_reg(0) <= '0';
    tmp_29_i_reg_398_pp0_iter7_reg(0) <= '0';
    tmp_29_i_reg_398_pp0_iter8_reg(0) <= '0';

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, frames_V_offset_empty_n, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, exitcond_flatten_i_fu_242_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((frames_V_offset_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_i_fu_242_p2 = ap_const_lv1_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_i_fu_242_p2 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state21 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(m_axi_frames_V_RVALID, frame1_a_V_full_n, frame2_a_V_full_n, frame3_a_V_full_n, frame3_b_V_full_n, frame4_a_V_full_n, frame5_a_V_full_n, ap_enable_reg_pp0_iter17, exitcond_flatten_i_reg_403_pp0_iter16_reg, ap_enable_reg_pp0_iter18, exitcond_flatten_i_reg_403_pp0_iter17_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame5_a_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame4_a_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame3_b_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame3_a_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame2_a_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame1_a_V_full_n = ap_const_logic_0)))) or ((exitcond_flatten_i_reg_403_pp0_iter16_reg = ap_const_lv1_0) and (m_axi_frames_V_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(m_axi_frames_V_RVALID, frame1_a_V_full_n, frame2_a_V_full_n, frame3_a_V_full_n, frame3_b_V_full_n, frame4_a_V_full_n, frame5_a_V_full_n, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter17, exitcond_flatten_i_reg_403_pp0_iter16_reg, ap_enable_reg_pp0_iter18, exitcond_flatten_i_reg_403_pp0_iter17_reg, ap_block_state12_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame5_a_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame4_a_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame3_b_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame3_a_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame2_a_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame1_a_V_full_n = ap_const_logic_0)))) or ((exitcond_flatten_i_reg_403_pp0_iter16_reg = ap_const_lv1_0) and (m_axi_frames_V_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state12_io)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(m_axi_frames_V_RVALID, frame1_a_V_full_n, frame2_a_V_full_n, frame3_a_V_full_n, frame3_b_V_full_n, frame4_a_V_full_n, frame5_a_V_full_n, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter17, exitcond_flatten_i_reg_403_pp0_iter16_reg, ap_enable_reg_pp0_iter18, exitcond_flatten_i_reg_403_pp0_iter17_reg, ap_block_state12_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame5_a_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame4_a_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame3_b_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame3_a_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame2_a_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame1_a_V_full_n = ap_const_logic_0)))) or ((exitcond_flatten_i_reg_403_pp0_iter16_reg = ap_const_lv1_0) and (m_axi_frames_V_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state12_io)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, frames_V_offset_empty_n)
    begin
                ap_block_state1 <= ((frames_V_offset_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state12_io_assign_proc : process(tmp_124_reg_438, ap_sig_ioackin_m_axi_frames_V_ARREADY)
    begin
                ap_block_state12_io <= ((ap_sig_ioackin_m_axi_frames_V_ARREADY = ap_const_logic_0) and (tmp_124_reg_438 = ap_const_lv1_1));
    end process;

        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state19_pp0_stage0_iter17_assign_proc : process(m_axi_frames_V_RVALID, exitcond_flatten_i_reg_403_pp0_iter16_reg)
    begin
                ap_block_state19_pp0_stage0_iter17 <= ((exitcond_flatten_i_reg_403_pp0_iter16_reg = ap_const_lv1_0) and (m_axi_frames_V_RVALID = ap_const_logic_0));
    end process;


    ap_block_state20_pp0_stage0_iter18_assign_proc : process(frame1_a_V_full_n, frame2_a_V_full_n, frame3_a_V_full_n, frame3_b_V_full_n, frame4_a_V_full_n, frame5_a_V_full_n, exitcond_flatten_i_reg_403_pp0_iter17_reg)
    begin
                ap_block_state20_pp0_stage0_iter18 <= (((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame5_a_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame4_a_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame3_b_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame3_a_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame2_a_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (frame1_a_V_full_n = ap_const_logic_0)));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_i_fu_242_p2)
    begin
        if ((exitcond_flatten_i_fu_242_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_i_phi_fu_172_p4_assign_proc : process(ap_block_pp0_stage0, exitcond_flatten_i_reg_403, indvar_flatten_i_reg_168, ap_CS_fsm_pp0_stage0, indvar_flatten_next_s_reg_407, ap_enable_reg_pp0_iter1)
    begin
        if (((exitcond_flatten_i_reg_403 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_indvar_flatten_i_phi_fu_172_p4 <= indvar_flatten_next_s_reg_407;
        else 
            ap_phi_mux_indvar_flatten_i_phi_fu_172_p4 <= indvar_flatten_i_reg_168;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    ap_sig_ioackin_m_axi_frames_V_ARREADY_assign_proc : process(m_axi_frames_V_ARREADY, ap_reg_ioackin_m_axi_frames_V_ARREADY)
    begin
        if ((ap_reg_ioackin_m_axi_frames_V_ARREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_m_axi_frames_V_ARREADY <= m_axi_frames_V_ARREADY;
        else 
            ap_sig_ioackin_m_axi_frames_V_ARREADY <= ap_const_logic_1;
        end if; 
    end process;

    c_fu_286_p3 <= 
        ap_const_lv4_1 when (exitcond_i14_i_fu_254_p2(0) = '1') else 
        c_i_i_op_fu_280_p2;
    c_i_i_op_fu_280_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(c_i_i_reg_191));
    exitcond_flatten_i_fu_242_p2 <= "1" when (ap_phi_mux_indvar_flatten_i_phi_fu_172_p4 = ap_const_lv6_32) else "0";
    exitcond_i14_i_fu_254_p2 <= "1" when (c_i_i_reg_191 = ap_const_lv4_A) else "0";

    frame1_a_V_blk_n_assign_proc : process(frame1_a_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter18, exitcond_flatten_i_reg_403_pp0_iter17_reg)
    begin
        if (((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            frame1_a_V_blk_n <= frame1_a_V_full_n;
        else 
            frame1_a_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    frame1_a_V_din <= tmp_125_reg_448;

    frame1_a_V_write_assign_proc : process(ap_enable_reg_pp0_iter18, exitcond_flatten_i_reg_403_pp0_iter17_reg, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            frame1_a_V_write <= ap_const_logic_1;
        else 
            frame1_a_V_write <= ap_const_logic_0;
        end if; 
    end process;


    frame2_a_V_blk_n_assign_proc : process(frame2_a_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter18, exitcond_flatten_i_reg_403_pp0_iter17_reg)
    begin
        if (((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            frame2_a_V_blk_n <= frame2_a_V_full_n;
        else 
            frame2_a_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    frame2_a_V_din <= p_Result_1_i_i_reg_453;

    frame2_a_V_write_assign_proc : process(ap_enable_reg_pp0_iter18, exitcond_flatten_i_reg_403_pp0_iter17_reg, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            frame2_a_V_write <= ap_const_logic_1;
        else 
            frame2_a_V_write <= ap_const_logic_0;
        end if; 
    end process;


    frame3_a_V_blk_n_assign_proc : process(frame3_a_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter18, exitcond_flatten_i_reg_403_pp0_iter17_reg)
    begin
        if (((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            frame3_a_V_blk_n <= frame3_a_V_full_n;
        else 
            frame3_a_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    frame3_a_V_din <= p_Result_2_i_i_reg_458;

    frame3_a_V_write_assign_proc : process(ap_enable_reg_pp0_iter18, exitcond_flatten_i_reg_403_pp0_iter17_reg, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            frame3_a_V_write <= ap_const_logic_1;
        else 
            frame3_a_V_write <= ap_const_logic_0;
        end if; 
    end process;


    frame3_b_V_blk_n_assign_proc : process(frame3_b_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter18, exitcond_flatten_i_reg_403_pp0_iter17_reg)
    begin
        if (((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            frame3_b_V_blk_n <= frame3_b_V_full_n;
        else 
            frame3_b_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    frame3_b_V_din <= p_Result_2_i_i_reg_458;

    frame3_b_V_write_assign_proc : process(ap_enable_reg_pp0_iter18, exitcond_flatten_i_reg_403_pp0_iter17_reg, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            frame3_b_V_write <= ap_const_logic_1;
        else 
            frame3_b_V_write <= ap_const_logic_0;
        end if; 
    end process;


    frame4_a_V_blk_n_assign_proc : process(frame4_a_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter18, exitcond_flatten_i_reg_403_pp0_iter17_reg)
    begin
        if (((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            frame4_a_V_blk_n <= frame4_a_V_full_n;
        else 
            frame4_a_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    frame4_a_V_din <= p_Result_3_i_i_reg_464;

    frame4_a_V_write_assign_proc : process(ap_enable_reg_pp0_iter18, exitcond_flatten_i_reg_403_pp0_iter17_reg, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            frame4_a_V_write <= ap_const_logic_1;
        else 
            frame4_a_V_write <= ap_const_logic_0;
        end if; 
    end process;


    frame5_a_V_blk_n_assign_proc : process(frame5_a_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter18, exitcond_flatten_i_reg_403_pp0_iter17_reg)
    begin
        if (((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            frame5_a_V_blk_n <= frame5_a_V_full_n;
        else 
            frame5_a_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    frame5_a_V_din <= p_Result_4_i_i_reg_469;

    frame5_a_V_write_assign_proc : process(ap_enable_reg_pp0_iter18, exitcond_flatten_i_reg_403_pp0_iter17_reg, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_flatten_i_reg_403_pp0_iter17_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
            frame5_a_V_write <= ap_const_logic_1;
        else 
            frame5_a_V_write <= ap_const_logic_0;
        end if; 
    end process;


    frames_V_blk_n_AR_assign_proc : process(m_axi_frames_V_ARREADY, ap_enable_reg_pp0_iter10, ap_block_pp0_stage0, tmp_124_reg_438)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (tmp_124_reg_438 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            frames_V_blk_n_AR <= m_axi_frames_V_ARREADY;
        else 
            frames_V_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    frames_V_blk_n_R_assign_proc : process(m_axi_frames_V_RVALID, ap_block_pp0_stage0, ap_enable_reg_pp0_iter17, exitcond_flatten_i_reg_403_pp0_iter16_reg)
    begin
        if (((exitcond_flatten_i_reg_403_pp0_iter16_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            frames_V_blk_n_R <= m_axi_frames_V_RVALID;
        else 
            frames_V_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    frames_V_offset_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, frames_V_offset_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            frames_V_offset_blk_n <= frames_V_offset_empty_n;
        else 
            frames_V_offset_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    frames_V_offset_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, frames_V_offset_empty_n)
    begin
        if ((not(((frames_V_offset_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            frames_V_offset_read <= ap_const_logic_1;
        else 
            frames_V_offset_read <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_274_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_274_ce <= ap_const_logic_1;
        else 
            grp_fu_274_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_274_p1 <= ap_const_lv6_A(5 - 1 downto 0);
    indvar_flatten_next_s_fu_248_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_i_phi_fu_172_p4) + unsigned(ap_const_lv6_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_frames_V_ARADDR <= sum3_cast_i_fu_339_p1(32 - 1 downto 0);
    m_axi_frames_V_ARBURST <= ap_const_lv2_0;
    m_axi_frames_V_ARCACHE <= ap_const_lv4_0;
    m_axi_frames_V_ARID <= ap_const_lv1_0;
    m_axi_frames_V_ARLEN <= ap_const_lv32_A;
    m_axi_frames_V_ARLOCK <= ap_const_lv2_0;
    m_axi_frames_V_ARPROT <= ap_const_lv3_0;
    m_axi_frames_V_ARQOS <= ap_const_lv4_0;
    m_axi_frames_V_ARREGION <= ap_const_lv4_0;
    m_axi_frames_V_ARSIZE <= ap_const_lv3_0;
    m_axi_frames_V_ARUSER <= ap_const_lv1_0;

    m_axi_frames_V_ARVALID_assign_proc : process(ap_enable_reg_pp0_iter10, tmp_124_reg_438, ap_reg_ioackin_m_axi_frames_V_ARREADY, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_m_axi_frames_V_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (tmp_124_reg_438 = ap_const_lv1_1))) then 
            m_axi_frames_V_ARVALID <= ap_const_logic_1;
        else 
            m_axi_frames_V_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_frames_V_AWADDR <= ap_const_lv32_0;
    m_axi_frames_V_AWBURST <= ap_const_lv2_0;
    m_axi_frames_V_AWCACHE <= ap_const_lv4_0;
    m_axi_frames_V_AWID <= ap_const_lv1_0;
    m_axi_frames_V_AWLEN <= ap_const_lv32_0;
    m_axi_frames_V_AWLOCK <= ap_const_lv2_0;
    m_axi_frames_V_AWPROT <= ap_const_lv3_0;
    m_axi_frames_V_AWQOS <= ap_const_lv4_0;
    m_axi_frames_V_AWREGION <= ap_const_lv4_0;
    m_axi_frames_V_AWSIZE <= ap_const_lv3_0;
    m_axi_frames_V_AWUSER <= ap_const_lv1_0;
    m_axi_frames_V_AWVALID <= ap_const_logic_0;
    m_axi_frames_V_BREADY <= ap_const_logic_0;

    m_axi_frames_V_RREADY_assign_proc : process(ap_enable_reg_pp0_iter17, exitcond_flatten_i_reg_403_pp0_iter16_reg, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_flatten_i_reg_403_pp0_iter16_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1))) then 
            m_axi_frames_V_RREADY <= ap_const_logic_1;
        else 
            m_axi_frames_V_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_frames_V_WDATA <= ap_const_lv64_0;
    m_axi_frames_V_WID <= ap_const_lv1_0;
    m_axi_frames_V_WLAST <= ap_const_logic_0;
    m_axi_frames_V_WSTRB <= ap_const_lv8_0;
    m_axi_frames_V_WUSER <= ap_const_lv1_0;
    m_axi_frames_V_WVALID <= ap_const_logic_0;
    p_shl8_i_i_fu_224_p3 <= (r_i_i_reg_180 & ap_const_lv1_0);
    p_shl8_i_mid1_i_fu_301_p3 <= (r7_i_reg_417_pp0_iter8_reg & ap_const_lv1_0);
    p_shl_i_i_fu_216_p3 <= (r_i_i_reg_180 & ap_const_lv3_0);
    p_shl_i_mid1_i_fu_294_p3 <= (r7_i_reg_417_pp0_iter8_reg & ap_const_lv3_0);
    r7_i_fu_260_p2 <= std_logic_vector(unsigned(r_i_i_reg_180) + unsigned(ap_const_lv3_1));
    r_i_mid2_i_fu_266_p3 <= 
        r7_i_fu_260_p2 when (exitcond_i14_i_fu_254_p2(0) = '1') else 
        r_i_i_reg_180;

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    sext_cast_i_fu_212_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_202_p4),30));
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sum3_cast_i_fu_339_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum3_i_reg_433),64));
    sum3_i_fu_328_p2 <= std_logic_vector(unsigned(tmp_58_mid2_cast_i_fu_324_p1) + unsigned(sext_cast_i_reg_393));
    tmp_122_fu_318_p3 <= 
        tmp_57_mid1_i_fu_312_p2 when (exitcond_i14_i_reg_412_pp0_iter8_reg(0) = '1') else 
        tmp_29_i_reg_398_pp0_iter8_reg;
    tmp_124_fu_333_p2 <= "1" when (grp_fu_274_p2 = ap_const_lv6_0) else "0";
    tmp_125_fu_349_p1 <= m_axi_frames_V_RDATA(8 - 1 downto 0);
    tmp_29_i_fu_236_p2 <= std_logic_vector(unsigned(p_shl_i_i_fu_216_p3) + unsigned(tmp_i_fu_232_p1));
    tmp_56_mid1_i_fu_308_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl8_i_mid1_i_fu_301_p3),6));
    tmp_57_mid1_i_fu_312_p2 <= std_logic_vector(unsigned(tmp_56_mid1_i_fu_308_p1) + unsigned(p_shl_i_mid1_i_fu_294_p3));
    tmp_58_mid2_cast_i_fu_324_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_122_fu_318_p3),30));
    tmp_fu_202_p4 <= frames_V_offset_dout(31 downto 3);
    tmp_i_fu_232_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl8_i_i_fu_224_p3),6));
end behav;
