-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tensor_weight_x is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    tensor_y_val_V_dout : IN STD_LOGIC_VECTOR (191 downto 0);
    tensor_y_val_V_empty_n : IN STD_LOGIC;
    tensor_y_val_V_read : OUT STD_LOGIC;
    tensor_val_V_din : OUT STD_LOGIC_VECTOR (191 downto 0);
    tensor_val_V_full_n : IN STD_LOGIC;
    tensor_val_V_write : OUT STD_LOGIC );
end;


architecture behav of tensor_weight_x is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv6_37 : STD_LOGIC_VECTOR (5 downto 0) := "110111";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv9_20 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_const_lv9_3F : STD_LOGIC_VECTOR (8 downto 0) := "000111111";
    constant ap_const_lv9_40 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_const_lv9_5F : STD_LOGIC_VECTOR (8 downto 0) := "001011111";
    constant ap_const_lv9_60 : STD_LOGIC_VECTOR (8 downto 0) := "001100000";
    constant ap_const_lv9_7F : STD_LOGIC_VECTOR (8 downto 0) := "001111111";
    constant ap_const_lv9_80 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_const_lv9_9F : STD_LOGIC_VECTOR (8 downto 0) := "010011111";
    constant ap_const_lv9_A0 : STD_LOGIC_VECTOR (8 downto 0) := "010100000";
    constant ap_const_lv9_BF : STD_LOGIC_VECTOR (8 downto 0) := "010111111";
    constant ap_const_lv51_2982A : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000101001100000101010";
    constant ap_const_lv51_2CF76 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000101100111101110110";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tensor_y_val_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_flatten_reg_1182 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_i_reg_1191 : STD_LOGIC_VECTOR (0 downto 0);
    signal tensor_val_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal sel_tmp7_reg_1195 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_reg_1195_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_157 : STD_LOGIC_VECTOR (5 downto 0);
    signal c_i_reg_168 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_flatten_fu_245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op46_read_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_flatten_reg_1182_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_251_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_1_i_fu_271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_reg_1195_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_reg_1199 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_reg_1199_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_reg_1199_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal c_fu_355_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_val_0_V_2_fu_361_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_2_i_fu_767_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_3_2_i_reg_1244 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_16_reg_1249 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_2_1_i_fu_787_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_3_2_1_i_reg_1254 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_17_reg_1259 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_2_2_i_fu_807_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_3_2_2_i_reg_1264 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_18_reg_1269 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_2_3_i_fu_827_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_3_2_3_i_reg_1274 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_19_reg_1279 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_2_4_i_fu_847_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_3_2_4_i_reg_1284 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_20_reg_1289 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_2_5_i_fu_867_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_3_2_5_i_reg_1294 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_21_reg_1299 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter2_state4 : STD_LOGIC;
    signal ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_s_reg_179 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_s_reg_179 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_s_reg_179 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_1_reg_190 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_1_reg_190 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_1_reg_190 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_2_reg_201 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_2_reg_201 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_2_reg_201 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_3_reg_212 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_3_reg_212 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_3_reg_212 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_4_reg_223 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_4_reg_223 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_4_reg_223 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_tmp_val_5_V_3_reg_234 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_val_5_V_3_reg_234 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_tmp_val_5_V_3_reg_234 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_val_0_V_fu_96 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_val_1_V_1_fu_100 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_val_2_V_1_fu_104 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_val_3_V_1_fu_108 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_val_4_V_1_fu_112 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_val_5_V_fu_116 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_val_0_V_1_fu_120 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_val_1_V_2_fu_124 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_val_2_V_2_fu_128 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_val_3_V_2_fu_132 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_val_4_V_2_fu_136 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_val_5_V_1_fu_140 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond7_i2_fu_257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_i_mid2_fu_263_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sel_tmp6_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp8_fu_337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_fu_331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp6_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_fu_325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal OP1_V_0_cast_i_fu_499_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_0_i_fu_503_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP1_V_0_1_cast_i_fu_509_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_0_1_i_fu_513_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP1_V_0_2_cast_i_fu_519_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_0_2_i_fu_523_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP1_V_0_3_cast_i_fu_529_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_0_3_i_fu_533_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP1_V_0_4_cast_i_fu_539_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_0_4_i_fu_543_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP1_V_0_5_cast_i_fu_549_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_0_5_i_fu_553_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP1_V_1_cast_i_fu_559_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_1_i_fu_563_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_0_i_fu_503_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_fu_569_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_1_i_fu_563_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_50_1_i_fu_579_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal OP1_V_1_1_cast_i_fu_593_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_1_1_i_fu_597_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_0_1_i_fu_513_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_s_fu_603_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_1_1_i_fu_597_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_50_1_1_i_fu_613_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal OP1_V_1_2_cast_i_fu_627_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_1_2_i_fu_631_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_0_2_i_fu_523_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_12_fu_637_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_1_2_i_fu_631_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_50_1_2_i_fu_647_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal OP1_V_1_3_cast_i_fu_661_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_1_3_i_fu_665_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_0_3_i_fu_533_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_13_fu_671_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_1_3_i_fu_665_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_50_1_3_i_fu_681_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal OP1_V_1_4_cast_i_fu_695_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_1_4_i_fu_699_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_0_4_i_fu_543_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_14_fu_705_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_1_4_i_fu_699_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_50_1_4_i_fu_715_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal OP1_V_1_5_cast_i_fu_729_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_1_5_i_fu_733_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_0_5_i_fu_553_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_15_fu_739_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_1_5_i_fu_733_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_50_1_5_i_fu_749_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_3_2_i_fu_767_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_4_1_i_fu_587_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_3_2_1_i_fu_787_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_4_1_1_i_fu_621_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_3_2_2_i_fu_807_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_4_1_2_i_fu_655_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_3_2_3_i_fu_827_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_4_1_3_i_fu_689_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_3_2_4_i_fu_847_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_4_1_4_i_fu_723_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_3_2_5_i_fu_867_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_4_1_5_i_fu_757_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_50_2_i_fu_913_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_4_2_i_fu_920_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_50_2_1_i_fu_935_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_4_2_1_i_fu_942_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_50_2_2_i_fu_957_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_4_2_2_i_fu_964_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_50_2_3_i_fu_979_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_4_2_3_i_fu_986_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_50_2_4_i_fu_1001_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_4_2_4_i_fu_1008_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_50_2_5_i_fu_1023_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_4_2_5_i_fu_1030_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal acc_val_5_V_fu_1035_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_4_V_fu_1013_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_3_V_fu_991_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_2_V_fu_969_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_1_V_fu_947_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_0_V_fu_925_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_5_i_fu_1045_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_4_i_fu_1052_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_3_i_fu_1059_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_2_i_fu_1066_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_1_i_fu_1073_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_0_i_fu_1080_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_105 : BOOLEAN;
    signal ap_condition_191 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond_flatten_fu_245_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_condition_pp0_exit_iter2_state4) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter2_state4) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_1_reg_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_105)) then
                if (((exitcond_flatten_fu_245_p2 = ap_const_lv1_0) and (tmp_1_i_fu_271_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_1_reg_190 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_1_reg_190 <= ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_1_reg_190;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_2_reg_201_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_105)) then
                if (((exitcond_flatten_fu_245_p2 = ap_const_lv1_0) and (tmp_1_i_fu_271_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_2_reg_201 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_2_reg_201 <= ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_2_reg_201;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_3_reg_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_105)) then
                if (((exitcond_flatten_fu_245_p2 = ap_const_lv1_0) and (tmp_1_i_fu_271_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_3_reg_212 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_3_reg_212 <= ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_3_reg_212;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_4_reg_223_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_105)) then
                if (((exitcond_flatten_fu_245_p2 = ap_const_lv1_0) and (tmp_1_i_fu_271_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_4_reg_223 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_4_reg_223 <= ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_4_reg_223;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_s_reg_179_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_105)) then
                if (((exitcond_flatten_fu_245_p2 = ap_const_lv1_0) and (tmp_1_i_fu_271_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_s_reg_179 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_s_reg_179 <= ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_s_reg_179;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_tmp_val_5_V_3_reg_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_105)) then
                if (((exitcond_flatten_fu_245_p2 = ap_const_lv1_0) and (tmp_1_i_fu_271_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_tmp_val_5_V_3_reg_234 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_tmp_val_5_V_3_reg_234 <= ap_phi_reg_pp0_iter0_tmp_val_5_V_3_reg_234;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_1_reg_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_191)) then
                if (((tmp_1_i_reg_1191 = ap_const_lv1_1) and (exitcond_flatten_reg_1182 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_1_reg_190 <= tensor_y_val_V_dout(127 downto 96);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_1_reg_190 <= ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_1_reg_190;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_2_reg_201_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_191)) then
                if (((tmp_1_i_reg_1191 = ap_const_lv1_1) and (exitcond_flatten_reg_1182 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_2_reg_201 <= tensor_y_val_V_dout(95 downto 64);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_2_reg_201 <= ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_2_reg_201;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_3_reg_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_191)) then
                if (((tmp_1_i_reg_1191 = ap_const_lv1_1) and (exitcond_flatten_reg_1182 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_3_reg_212 <= tensor_y_val_V_dout(63 downto 32);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_3_reg_212 <= ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_3_reg_212;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_4_reg_223_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_191)) then
                if (((tmp_1_i_reg_1191 = ap_const_lv1_1) and (exitcond_flatten_reg_1182 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_4_reg_223 <= tmp_val_0_V_2_fu_361_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_4_reg_223 <= ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_4_reg_223;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_s_reg_179_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_191)) then
                if (((tmp_1_i_reg_1191 = ap_const_lv1_1) and (exitcond_flatten_reg_1182 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_s_reg_179 <= tensor_y_val_V_dout(159 downto 128);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_s_reg_179 <= ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_s_reg_179;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_tmp_val_5_V_3_reg_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_191)) then
                if (((tmp_1_i_reg_1191 = ap_const_lv1_1) and (exitcond_flatten_reg_1182 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_tmp_val_5_V_3_reg_234 <= tensor_y_val_V_dout(191 downto 160);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_tmp_val_5_V_3_reg_234 <= ap_phi_reg_pp0_iter1_tmp_val_5_V_3_reg_234;
                end if;
            end if; 
        end if;
    end process;

    c_i_reg_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_245_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                c_i_reg_168 <= c_fu_355_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c_i_reg_168 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_157_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_245_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                indvar_flatten_reg_157 <= indvar_flatten_next_fu_251_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_157 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten_reg_1182 <= exitcond_flatten_fu_245_p2;
                exitcond_flatten_reg_1182_pp0_iter1_reg <= exitcond_flatten_reg_1182;
                sel_tmp4_reg_1199_pp0_iter1_reg <= sel_tmp4_reg_1199;
                sel_tmp7_reg_1195_pp0_iter1_reg <= sel_tmp7_reg_1195;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1182_pp0_iter1_reg = ap_const_lv1_0) and (sel_tmp4_reg_1199_pp0_iter1_reg = ap_const_lv1_0))) then
                    p_Val2_3_2_1_i_reg_1254(50 downto 1) <= p_Val2_3_2_1_i_fu_787_p2(50 downto 1);
                    p_Val2_3_2_2_i_reg_1264(50 downto 1) <= p_Val2_3_2_2_i_fu_807_p2(50 downto 1);
                    p_Val2_3_2_3_i_reg_1274(50 downto 1) <= p_Val2_3_2_3_i_fu_827_p2(50 downto 1);
                    p_Val2_3_2_4_i_reg_1284(50 downto 1) <= p_Val2_3_2_4_i_fu_847_p2(50 downto 1);
                    p_Val2_3_2_5_i_reg_1294(50 downto 1) <= p_Val2_3_2_5_i_fu_867_p2(50 downto 1);
                    p_Val2_3_2_i_reg_1244(50 downto 1) <= p_Val2_3_2_i_fu_767_p2(50 downto 1);
                tmp_16_reg_1249 <= p_Val2_4_1_i_fu_587_p2(50 downto 19);
                tmp_17_reg_1259 <= p_Val2_4_1_1_i_fu_621_p2(50 downto 19);
                tmp_18_reg_1269 <= p_Val2_4_1_2_i_fu_655_p2(50 downto 19);
                tmp_19_reg_1279 <= p_Val2_4_1_3_i_fu_689_p2(50 downto 19);
                tmp_20_reg_1289 <= p_Val2_4_1_4_i_fu_723_p2(50 downto 19);
                tmp_21_reg_1299 <= p_Val2_4_1_5_i_fu_757_p2(50 downto 19);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_245_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                sel_tmp4_reg_1199 <= sel_tmp4_fu_349_p2;
                sel_tmp7_reg_1195 <= sel_tmp7_fu_313_p2;
                tmp_1_i_reg_1191 <= tmp_1_i_fu_271_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                sel_tmp4_reg_1199_pp0_iter2_reg <= sel_tmp4_reg_1199_pp0_iter1_reg;
                sel_tmp7_reg_1195_pp0_iter2_reg <= sel_tmp7_reg_1195_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1182_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                tmp_val_0_V_1_fu_120 <= ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_4_reg_223;
                tmp_val_1_V_2_fu_124 <= ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_3_reg_212;
                tmp_val_2_V_2_fu_128 <= ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_2_reg_201;
                tmp_val_3_V_2_fu_132 <= ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_1_reg_190;
                tmp_val_4_V_2_fu_136 <= ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_s_reg_179;
                tmp_val_5_V_1_fu_140 <= ap_phi_reg_pp0_iter2_tmp_val_5_V_3_reg_234;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                tmp_val_0_V_fu_96 <= tmp_val_0_V_1_fu_120;
                tmp_val_1_V_1_fu_100 <= tmp_val_1_V_2_fu_124;
                tmp_val_2_V_1_fu_104 <= tmp_val_2_V_2_fu_128;
                tmp_val_3_V_1_fu_108 <= tmp_val_3_V_2_fu_132;
                tmp_val_4_V_1_fu_112 <= tmp_val_4_V_2_fu_136;
                tmp_val_5_V_fu_116 <= tmp_val_5_V_1_fu_140;
            end if;
        end if;
    end process;
    p_Val2_3_2_i_reg_1244(0) <= '0';
    p_Val2_3_2_1_i_reg_1254(0) <= '0';
    p_Val2_3_2_2_i_reg_1264(0) <= '0';
    p_Val2_3_2_3_i_reg_1274(0) <= '0';
    p_Val2_3_2_4_i_reg_1284(0) <= '0';
    p_Val2_3_2_5_i_reg_1294(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    OP1_V_0_1_cast_i_fu_509_p0 <= tmp_val_1_V_1_fu_100;
    OP1_V_0_2_cast_i_fu_519_p0 <= tmp_val_2_V_1_fu_104;
    OP1_V_0_3_cast_i_fu_529_p0 <= tmp_val_3_V_1_fu_108;
    OP1_V_0_4_cast_i_fu_539_p0 <= tmp_val_4_V_1_fu_112;
    OP1_V_0_5_cast_i_fu_549_p0 <= tmp_val_5_V_fu_116;
    OP1_V_0_cast_i_fu_499_p0 <= tmp_val_0_V_fu_96;
    OP1_V_1_1_cast_i_fu_593_p0 <= tmp_val_1_V_2_fu_124;
    OP1_V_1_2_cast_i_fu_627_p0 <= tmp_val_2_V_2_fu_128;
    OP1_V_1_3_cast_i_fu_661_p0 <= tmp_val_3_V_2_fu_132;
    OP1_V_1_4_cast_i_fu_695_p0 <= tmp_val_4_V_2_fu_136;
    OP1_V_1_5_cast_i_fu_729_p0 <= tmp_val_5_V_1_fu_140;
    OP1_V_1_cast_i_fu_559_p0 <= tmp_val_0_V_1_fu_120;
    acc_val_0_V_fu_925_p4 <= p_Val2_4_2_i_fu_920_p2(50 downto 19);
    acc_val_1_V_fu_947_p4 <= p_Val2_4_2_1_i_fu_942_p2(50 downto 19);
    acc_val_2_V_fu_969_p4 <= p_Val2_4_2_2_i_fu_964_p2(50 downto 19);
    acc_val_3_V_fu_991_p4 <= p_Val2_4_2_3_i_fu_986_p2(50 downto 19);
    acc_val_4_V_fu_1013_p4 <= p_Val2_4_2_4_i_fu_1008_p2(50 downto 19);
    acc_val_5_V_fu_1035_p4 <= p_Val2_4_2_5_i_fu_1030_p2(50 downto 19);
    acc_val_V_0_i_fu_1080_p3 <= 
        ap_const_lv32_0 when (sel_tmp4_reg_1199_pp0_iter2_reg(0) = '1') else 
        acc_val_0_V_fu_925_p4;
    acc_val_V_1_i_fu_1073_p3 <= 
        ap_const_lv32_0 when (sel_tmp4_reg_1199_pp0_iter2_reg(0) = '1') else 
        acc_val_1_V_fu_947_p4;
    acc_val_V_2_i_fu_1066_p3 <= 
        ap_const_lv32_0 when (sel_tmp4_reg_1199_pp0_iter2_reg(0) = '1') else 
        acc_val_2_V_fu_969_p4;
    acc_val_V_3_i_fu_1059_p3 <= 
        ap_const_lv32_0 when (sel_tmp4_reg_1199_pp0_iter2_reg(0) = '1') else 
        acc_val_3_V_fu_991_p4;
    acc_val_V_4_i_fu_1052_p3 <= 
        ap_const_lv32_0 when (sel_tmp4_reg_1199_pp0_iter2_reg(0) = '1') else 
        acc_val_4_V_fu_1013_p4;
    acc_val_V_5_i_fu_1045_p3 <= 
        ap_const_lv32_0 when (sel_tmp4_reg_1199_pp0_iter2_reg(0) = '1') else 
        acc_val_5_V_fu_1035_p4;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state6 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(tensor_y_val_V_empty_n, tensor_val_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, sel_tmp7_reg_1195_pp0_iter2_reg, ap_predicate_op46_read_state3)
    begin
                ap_block_pp0_stage0_01001 <= (((sel_tmp7_reg_1195_pp0_iter2_reg = ap_const_lv1_0) and (tensor_val_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((tensor_y_val_V_empty_n = ap_const_logic_0) and (ap_predicate_op46_read_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(tensor_y_val_V_empty_n, tensor_val_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, sel_tmp7_reg_1195_pp0_iter2_reg, ap_predicate_op46_read_state3)
    begin
                ap_block_pp0_stage0_11001 <= (((sel_tmp7_reg_1195_pp0_iter2_reg = ap_const_lv1_0) and (tensor_val_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((tensor_y_val_V_empty_n = ap_const_logic_0) and (ap_predicate_op46_read_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(tensor_y_val_V_empty_n, tensor_val_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, sel_tmp7_reg_1195_pp0_iter2_reg, ap_predicate_op46_read_state3)
    begin
                ap_block_pp0_stage0_subdone <= (((sel_tmp7_reg_1195_pp0_iter2_reg = ap_const_lv1_0) and (tensor_val_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((tensor_y_val_V_empty_n = ap_const_logic_0) and (ap_predicate_op46_read_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(tensor_y_val_V_empty_n, ap_predicate_op46_read_state3)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((tensor_y_val_V_empty_n = ap_const_logic_0) and (ap_predicate_op46_read_state3 = ap_const_boolean_1));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter3_assign_proc : process(tensor_val_V_full_n, sel_tmp7_reg_1195_pp0_iter2_reg)
    begin
                ap_block_state5_pp0_stage0_iter3 <= ((sel_tmp7_reg_1195_pp0_iter2_reg = ap_const_lv1_0) and (tensor_val_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_105_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_105 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_191_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_191 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_pp0_exit_iter2_state4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_condition_pp0_exit_iter2_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter2_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_1_reg_190 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_2_reg_201 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_3_reg_212 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_4_reg_223 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_s_reg_179 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_tmp_val_5_V_3_reg_234 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op46_read_state3_assign_proc : process(exitcond_flatten_reg_1182, tmp_1_i_reg_1191)
    begin
                ap_predicate_op46_read_state3 <= ((tmp_1_i_reg_1191 = ap_const_lv1_1) and (exitcond_flatten_reg_1182 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    c_fu_355_p2 <= std_logic_vector(unsigned(c_i_mid2_fu_263_p3) + unsigned(ap_const_lv4_1));
    c_i_mid2_fu_263_p3 <= 
        ap_const_lv4_0 when (exitcond7_i2_fu_257_p2(0) = '1') else 
        c_i_reg_168;
    exitcond7_i2_fu_257_p2 <= "1" when (c_i_reg_168 = ap_const_lv4_B) else "0";
    exitcond_flatten_fu_245_p2 <= "1" when (indvar_flatten_reg_157 = ap_const_lv6_37) else "0";
    indvar_flatten_next_fu_251_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_157) + unsigned(ap_const_lv6_1));
    p_Val2_3_0_1_i_fu_513_p0 <= OP1_V_0_1_cast_i_fu_509_p0;
    p_Val2_3_0_1_i_fu_513_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_3_0_1_i_fu_513_p0) * signed('0' &ap_const_lv51_2982A))), 51));
    p_Val2_3_0_2_i_fu_523_p0 <= OP1_V_0_2_cast_i_fu_519_p0;
    p_Val2_3_0_2_i_fu_523_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_3_0_2_i_fu_523_p0) * signed('0' &ap_const_lv51_2982A))), 51));
    p_Val2_3_0_3_i_fu_533_p0 <= OP1_V_0_3_cast_i_fu_529_p0;
    p_Val2_3_0_3_i_fu_533_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_3_0_3_i_fu_533_p0) * signed('0' &ap_const_lv51_2982A))), 51));
    p_Val2_3_0_4_i_fu_543_p0 <= OP1_V_0_4_cast_i_fu_539_p0;
    p_Val2_3_0_4_i_fu_543_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_3_0_4_i_fu_543_p0) * signed('0' &ap_const_lv51_2982A))), 51));
    p_Val2_3_0_5_i_fu_553_p0 <= OP1_V_0_5_cast_i_fu_549_p0;
    p_Val2_3_0_5_i_fu_553_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_3_0_5_i_fu_553_p0) * signed('0' &ap_const_lv51_2982A))), 51));
    p_Val2_3_0_i_fu_503_p0 <= OP1_V_0_cast_i_fu_499_p0;
    p_Val2_3_0_i_fu_503_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_3_0_i_fu_503_p0) * signed('0' &ap_const_lv51_2982A))), 51));
    p_Val2_3_1_1_i_fu_597_p0 <= OP1_V_1_1_cast_i_fu_593_p0;
    p_Val2_3_1_1_i_fu_597_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_3_1_1_i_fu_597_p0) * signed('0' &ap_const_lv51_2CF76))), 51));
    p_Val2_3_1_2_i_fu_631_p0 <= OP1_V_1_2_cast_i_fu_627_p0;
    p_Val2_3_1_2_i_fu_631_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_3_1_2_i_fu_631_p0) * signed('0' &ap_const_lv51_2CF76))), 51));
    p_Val2_3_1_3_i_fu_665_p0 <= OP1_V_1_3_cast_i_fu_661_p0;
    p_Val2_3_1_3_i_fu_665_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_3_1_3_i_fu_665_p0) * signed('0' &ap_const_lv51_2CF76))), 51));
    p_Val2_3_1_4_i_fu_699_p0 <= OP1_V_1_4_cast_i_fu_695_p0;
    p_Val2_3_1_4_i_fu_699_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_3_1_4_i_fu_699_p0) * signed('0' &ap_const_lv51_2CF76))), 51));
    p_Val2_3_1_5_i_fu_733_p0 <= OP1_V_1_5_cast_i_fu_729_p0;
    p_Val2_3_1_5_i_fu_733_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_3_1_5_i_fu_733_p0) * signed('0' &ap_const_lv51_2CF76))), 51));
    p_Val2_3_1_i_fu_563_p0 <= OP1_V_1_cast_i_fu_559_p0;
    p_Val2_3_1_i_fu_563_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_3_1_i_fu_563_p0) * signed('0' &ap_const_lv51_2CF76))), 51));
    p_Val2_3_2_1_i_fu_787_p0 <= ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_3_reg_212;
    p_Val2_3_2_1_i_fu_787_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_3_2_1_i_fu_787_p0) * signed('0' &ap_const_lv51_2982A))), 51));
    p_Val2_3_2_2_i_fu_807_p0 <= ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_2_reg_201;
    p_Val2_3_2_2_i_fu_807_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_3_2_2_i_fu_807_p0) * signed('0' &ap_const_lv51_2982A))), 51));
    p_Val2_3_2_3_i_fu_827_p0 <= ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_1_reg_190;
    p_Val2_3_2_3_i_fu_827_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_3_2_3_i_fu_827_p0) * signed('0' &ap_const_lv51_2982A))), 51));
    p_Val2_3_2_4_i_fu_847_p0 <= ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_s_reg_179;
    p_Val2_3_2_4_i_fu_847_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_3_2_4_i_fu_847_p0) * signed('0' &ap_const_lv51_2982A))), 51));
    p_Val2_3_2_5_i_fu_867_p0 <= ap_phi_reg_pp0_iter2_tmp_val_5_V_3_reg_234;
    p_Val2_3_2_5_i_fu_867_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_3_2_5_i_fu_867_p0) * signed('0' &ap_const_lv51_2982A))), 51));
    p_Val2_3_2_i_fu_767_p0 <= ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_4_reg_223;
    p_Val2_3_2_i_fu_767_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_3_2_i_fu_767_p0) * signed('0' &ap_const_lv51_2982A))), 51));
    p_Val2_4_1_1_i_fu_621_p2 <= std_logic_vector(unsigned(p_Val2_3_1_1_i_fu_597_p2) + unsigned(tmp_50_1_1_i_fu_613_p3));
    p_Val2_4_1_2_i_fu_655_p2 <= std_logic_vector(unsigned(p_Val2_3_1_2_i_fu_631_p2) + unsigned(tmp_50_1_2_i_fu_647_p3));
    p_Val2_4_1_3_i_fu_689_p2 <= std_logic_vector(unsigned(p_Val2_3_1_3_i_fu_665_p2) + unsigned(tmp_50_1_3_i_fu_681_p3));
    p_Val2_4_1_4_i_fu_723_p2 <= std_logic_vector(unsigned(p_Val2_3_1_4_i_fu_699_p2) + unsigned(tmp_50_1_4_i_fu_715_p3));
    p_Val2_4_1_5_i_fu_757_p2 <= std_logic_vector(unsigned(p_Val2_3_1_5_i_fu_733_p2) + unsigned(tmp_50_1_5_i_fu_749_p3));
    p_Val2_4_1_i_fu_587_p2 <= std_logic_vector(unsigned(p_Val2_3_1_i_fu_563_p2) + unsigned(tmp_50_1_i_fu_579_p3));
    p_Val2_4_2_1_i_fu_942_p2 <= std_logic_vector(unsigned(p_Val2_3_2_1_i_reg_1254) + unsigned(tmp_50_2_1_i_fu_935_p3));
    p_Val2_4_2_2_i_fu_964_p2 <= std_logic_vector(unsigned(p_Val2_3_2_2_i_reg_1264) + unsigned(tmp_50_2_2_i_fu_957_p3));
    p_Val2_4_2_3_i_fu_986_p2 <= std_logic_vector(unsigned(p_Val2_3_2_3_i_reg_1274) + unsigned(tmp_50_2_3_i_fu_979_p3));
    p_Val2_4_2_4_i_fu_1008_p2 <= std_logic_vector(unsigned(p_Val2_3_2_4_i_reg_1284) + unsigned(tmp_50_2_4_i_fu_1001_p3));
    p_Val2_4_2_5_i_fu_1030_p2 <= std_logic_vector(unsigned(p_Val2_3_2_5_i_reg_1294) + unsigned(tmp_50_2_5_i_fu_1023_p3));
    p_Val2_4_2_i_fu_920_p2 <= std_logic_vector(unsigned(p_Val2_3_2_i_reg_1244) + unsigned(tmp_50_2_i_fu_913_p3));
    sel_tmp1_fu_283_p2 <= "1" when (c_i_mid2_fu_263_p3 = ap_const_lv4_E) else "0";
    sel_tmp2_fu_289_p2 <= "1" when (c_i_mid2_fu_263_p3 = ap_const_lv4_D) else "0";
    sel_tmp3_fu_295_p2 <= "1" when (c_i_mid2_fu_263_p3 = ap_const_lv4_C) else "0";
    sel_tmp4_fu_349_p2 <= (tmp6_fu_343_p2 or tmp4_fu_325_p2);
    sel_tmp5_fu_301_p2 <= "1" when (c_i_mid2_fu_263_p3 = ap_const_lv4_A) else "0";
    sel_tmp6_fu_307_p2 <= "1" when (c_i_mid2_fu_263_p3 = ap_const_lv4_1) else "0";
    sel_tmp7_fu_313_p2 <= "1" when (c_i_mid2_fu_263_p3 = ap_const_lv4_0) else "0";
    sel_tmp_fu_277_p2 <= "1" when (c_i_mid2_fu_263_p3 = ap_const_lv4_F) else "0";

    tensor_val_V_blk_n_assign_proc : process(tensor_val_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, sel_tmp7_reg_1195_pp0_iter2_reg)
    begin
        if (((sel_tmp7_reg_1195_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            tensor_val_V_blk_n <= tensor_val_V_full_n;
        else 
            tensor_val_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    tensor_val_V_din <= (((((acc_val_V_5_i_fu_1045_p3 & acc_val_V_4_i_fu_1052_p3) & acc_val_V_3_i_fu_1059_p3) & acc_val_V_2_i_fu_1066_p3) & acc_val_V_1_i_fu_1073_p3) & acc_val_V_0_i_fu_1080_p3);

    tensor_val_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, sel_tmp7_reg_1195_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (sel_tmp7_reg_1195_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            tensor_val_V_write <= ap_const_logic_1;
        else 
            tensor_val_V_write <= ap_const_logic_0;
        end if; 
    end process;


    tensor_y_val_V_blk_n_assign_proc : process(tensor_y_val_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_1182, tmp_1_i_reg_1191)
    begin
        if (((tmp_1_i_reg_1191 = ap_const_lv1_1) and (exitcond_flatten_reg_1182 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tensor_y_val_V_blk_n <= tensor_y_val_V_empty_n;
        else 
            tensor_y_val_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tensor_y_val_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op46_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op46_read_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tensor_y_val_V_read <= ap_const_logic_1;
        else 
            tensor_y_val_V_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp4_fu_325_p2 <= (tmp5_fu_319_p2 or sel_tmp5_fu_301_p2);
    tmp5_fu_319_p2 <= (sel_tmp6_fu_307_p2 or sel_tmp3_fu_295_p2);
    tmp6_fu_343_p2 <= (tmp8_fu_337_p2 or tmp7_fu_331_p2);
    tmp7_fu_331_p2 <= (sel_tmp_fu_277_p2 or sel_tmp2_fu_289_p2);
    tmp8_fu_337_p2 <= (sel_tmp7_fu_313_p2 or sel_tmp1_fu_283_p2);
    tmp_12_fu_637_p4 <= p_Val2_3_0_2_i_fu_523_p2(50 downto 19);
    tmp_13_fu_671_p4 <= p_Val2_3_0_3_i_fu_533_p2(50 downto 19);
    tmp_14_fu_705_p4 <= p_Val2_3_0_4_i_fu_543_p2(50 downto 19);
    tmp_15_fu_739_p4 <= p_Val2_3_0_5_i_fu_553_p2(50 downto 19);
    tmp_1_i_fu_271_p2 <= "1" when (unsigned(c_i_mid2_fu_263_p3) < unsigned(ap_const_lv4_A)) else "0";
    tmp_50_1_1_i_fu_613_p3 <= (tmp_s_fu_603_p4 & ap_const_lv19_0);
    tmp_50_1_2_i_fu_647_p3 <= (tmp_12_fu_637_p4 & ap_const_lv19_0);
    tmp_50_1_3_i_fu_681_p3 <= (tmp_13_fu_671_p4 & ap_const_lv19_0);
    tmp_50_1_4_i_fu_715_p3 <= (tmp_14_fu_705_p4 & ap_const_lv19_0);
    tmp_50_1_5_i_fu_749_p3 <= (tmp_15_fu_739_p4 & ap_const_lv19_0);
    tmp_50_1_i_fu_579_p3 <= (tmp_fu_569_p4 & ap_const_lv19_0);
    tmp_50_2_1_i_fu_935_p3 <= (tmp_17_reg_1259 & ap_const_lv19_0);
    tmp_50_2_2_i_fu_957_p3 <= (tmp_18_reg_1269 & ap_const_lv19_0);
    tmp_50_2_3_i_fu_979_p3 <= (tmp_19_reg_1279 & ap_const_lv19_0);
    tmp_50_2_4_i_fu_1001_p3 <= (tmp_20_reg_1289 & ap_const_lv19_0);
    tmp_50_2_5_i_fu_1023_p3 <= (tmp_21_reg_1299 & ap_const_lv19_0);
    tmp_50_2_i_fu_913_p3 <= (tmp_16_reg_1249 & ap_const_lv19_0);
    tmp_fu_569_p4 <= p_Val2_3_0_i_fu_503_p2(50 downto 19);
    tmp_s_fu_603_p4 <= p_Val2_3_0_1_i_fu_513_p2(50 downto 19);
    tmp_val_0_V_2_fu_361_p1 <= tensor_y_val_V_dout(32 - 1 downto 0);
end behav;
