-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tensor_weight_y is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    out_product_val_V_dout : IN STD_LOGIC_VECTOR (190 downto 0);
    out_product_val_V_empty_n : IN STD_LOGIC;
    out_product_val_V_read : OUT STD_LOGIC;
    tensor_y_val_V_din : OUT STD_LOGIC_VECTOR (191 downto 0);
    tensor_y_val_V_full_n : IN STD_LOGIC;
    tensor_y_val_V_write : OUT STD_LOGIC );
end;


architecture behav of tensor_weight_y is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv191_lc_1 : STD_LOGIC_VECTOR (190 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111110";
    constant ap_const_lv51_2982A : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000101001100000101010";
    constant ap_const_lv51_2CF76 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000101100111101110110";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv50_2982A : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000101001100000101010";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal out_product_val_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_flatten_reg_1080 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_mid2_reg_1089 : STD_LOGIC_VECTOR (0 downto 0);
    signal tensor_y_val_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal tmp_3_i_mid2_reg_1103 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_i_mid2_reg_1103_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_162 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_i_reg_173 : STD_LOGIC_VECTOR (2 downto 0);
    signal col_assign_reg_184 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_flatten_fu_235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op58_read_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar_flatten_next_fu_241_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_i_mid2_fu_273_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_mid2_fu_303_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_mid2_reg_1093 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_mid2_reg_1093_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_mid2_reg_1093_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_i_mid2_fu_323_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_i_mid2_reg_1103_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_i_mid2_fu_331_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_val_1_val_V_add_reg_1112 : STD_LOGIC_VECTOR (3 downto 0);
    signal buf_val_2_val_V_add_reg_1118 : STD_LOGIC_VECTOR (3 downto 0);
    signal buf_val_2_val_V_add_reg_1118_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal c_fu_345_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_14_fu_351_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_reg_1129 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_i_reg_1134 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_i_reg_1139 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_i_reg_1144 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_i_reg_1149 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_395_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_reg_1154 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_i_reg_1159 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_i_reg_1164 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_i_reg_1169 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_i_reg_1174 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_reg_1184 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_17_reg_1189 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_1_2_i_fu_719_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_1_2_i_reg_1194 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_7_reg_1199 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_2_1_i_fu_749_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_1_2_1_i_reg_1204 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_8_reg_1209 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_2_2_i_fu_779_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_1_2_2_i_reg_1214 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_9_reg_1219 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_2_3_i_fu_809_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_1_2_3_i_reg_1224 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_s_reg_1229 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_2_4_i_fu_839_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_1_2_4_i_reg_1234 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_10_reg_1239 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_2_5_i_fu_869_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Val2_1_2_5_i_reg_1244 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_11_reg_1249 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal buf_val_1_val_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal buf_val_1_val_V_ce0 : STD_LOGIC;
    signal buf_val_1_val_V_q0 : STD_LOGIC_VECTOR (190 downto 0);
    signal buf_val_1_val_V_ce1 : STD_LOGIC;
    signal buf_val_1_val_V_we1 : STD_LOGIC;
    signal buf_val_2_val_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal buf_val_2_val_V_ce0 : STD_LOGIC;
    signal buf_val_2_val_V_q0 : STD_LOGIC_VECTOR (190 downto 0);
    signal buf_val_2_val_V_ce1 : STD_LOGIC;
    signal buf_val_2_val_V_we1 : STD_LOGIC;
    signal ap_phi_reg_pp0_iter0_tmp_val_V_4_i_reg_195 : STD_LOGIC_VECTOR (190 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_val_V_4_i_reg_195 : STD_LOGIC_VECTOR (190 downto 0);
    signal ap_phi_reg_pp0_iter2_tmp_val_V_4_i_reg_195 : STD_LOGIC_VECTOR (190 downto 0);
    signal tmp_i_32_fu_339_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_fu_213_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_fu_223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_fu_207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2_i_fu_247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_fu_261_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_i_mid1_fu_267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_281_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp1_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_mid1_fu_297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_i_mid1_fu_311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_i_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_assign_mid2_fu_253_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_1_0_i_fu_462_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_0_1_i_fu_471_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_0_2_i_fu_480_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_0_3_i_fu_489_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_0_4_i_fu_498_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_0_5_i_fu_507_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_1_1_i_fu_516_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_0_i_fu_462_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_1_fu_522_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_1_i_fu_516_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_23_1_i_fu_532_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_1_1_1_i_fu_549_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_0_1_i_fu_471_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_2_fu_555_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_1_1_i_fu_549_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_23_1_1_i_fu_565_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_1_1_2_i_fu_582_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_0_2_i_fu_480_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_3_fu_588_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_1_2_i_fu_582_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_23_1_2_i_fu_598_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_1_1_3_i_fu_615_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_0_3_i_fu_489_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_4_fu_621_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_1_3_i_fu_615_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_23_1_3_i_fu_631_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_1_1_4_i_fu_648_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_0_4_i_fu_498_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_5_fu_654_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_1_4_i_fu_648_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_23_1_4_i_fu_664_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_1_1_5_i_fu_681_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_1_0_5_i_fu_507_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_6_fu_687_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_1_5_i_fu_681_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_23_1_5_i_fu_697_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_18_fu_711_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_2_i_fu_719_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_2_1_i_fu_540_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_21_i_fu_735_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_2_1_i_fu_749_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_2_1_1_i_fu_573_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_22_i_fu_765_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_2_2_i_fu_779_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_2_1_2_i_fu_606_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_23_i_fu_795_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_2_3_i_fu_809_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_2_1_3_i_fu_639_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_24_i_fu_825_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_2_4_i_fu_839_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_2_1_4_i_fu_672_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_19_fu_855_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_1_2_5_i_fu_869_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_2_1_5_i_fu_705_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_23_2_i_fu_885_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_2_2_i_fu_892_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_23_2_1_i_fu_907_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_2_2_1_i_fu_914_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_23_2_2_i_fu_929_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_2_2_2_i_fu_936_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_23_2_3_i_fu_951_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_2_2_3_i_fu_958_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_23_2_4_i_fu_973_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_2_2_4_i_fu_980_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_1_2_5_i_cas_fu_995_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_23_2_5_i_fu_998_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_2_2_5_i_fu_1005_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal acc_val_5_V_fu_1011_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_4_V_fu_985_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_3_V_fu_963_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_2_V_fu_941_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_1_V_fu_919_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_0_V_fu_897_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_5_i_fu_1021_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_4_i_fu_1028_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_3_i_fu_1035_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_2_i_fu_1042_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_1_i_fu_1049_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_0_i_fu_1056_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_111 : BOOLEAN;
    signal ap_condition_243 : BOOLEAN;

    component tensor_weight_y_bzec IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (190 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (190 downto 0) );
    end component;



begin
    buf_val_1_val_V_U : component tensor_weight_y_bzec
    generic map (
        DataWidth => 191,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_1_val_V_address0,
        ce0 => buf_val_1_val_V_ce0,
        q0 => buf_val_1_val_V_q0,
        address1 => buf_val_1_val_V_add_reg_1112,
        ce1 => buf_val_1_val_V_ce1,
        we1 => buf_val_1_val_V_we1,
        d1 => buf_val_2_val_V_q0);

    buf_val_2_val_V_U : component tensor_weight_y_bzec
    generic map (
        DataWidth => 191,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_2_val_V_address0,
        ce0 => buf_val_2_val_V_ce0,
        q0 => buf_val_2_val_V_q0,
        address1 => buf_val_2_val_V_add_reg_1118_pp0_iter1_reg,
        ce1 => buf_val_2_val_V_ce1,
        we1 => buf_val_2_val_V_we1,
        d1 => ap_phi_reg_pp0_iter2_tmp_val_V_4_i_reg_195);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_tmp_val_V_4_i_reg_195_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_111)) then
                if (((exitcond_flatten_fu_235_p2 = ap_const_lv1_0) and (tmp_i_mid2_fu_273_p3 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_tmp_val_V_4_i_reg_195 <= ap_const_lv191_lc_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_tmp_val_V_4_i_reg_195 <= ap_phi_reg_pp0_iter0_tmp_val_V_4_i_reg_195;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_tmp_val_V_4_i_reg_195_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_243)) then
                if (((tmp_i_mid2_reg_1089 = ap_const_lv1_1) and (exitcond_flatten_reg_1080 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_tmp_val_V_4_i_reg_195 <= out_product_val_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_tmp_val_V_4_i_reg_195 <= ap_phi_reg_pp0_iter1_tmp_val_V_4_i_reg_195;
                end if;
            end if; 
        end if;
    end process;

    col_assign_reg_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_235_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                col_assign_reg_184 <= c_fu_345_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                col_assign_reg_184 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_235_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                indvar_flatten_reg_162 <= indvar_flatten_next_fu_241_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_162 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    r_i_reg_173_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_235_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                r_i_reg_173 <= r_i_mid2_fu_331_p3;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                r_i_reg_173 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_235_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                buf_val_1_val_V_add_reg_1112 <= tmp_i_32_fu_339_p1(4 - 1 downto 0);
                buf_val_2_val_V_add_reg_1118 <= tmp_i_32_fu_339_p1(4 - 1 downto 0);
                or_cond_i_mid2_reg_1093 <= or_cond_i_mid2_fu_303_p3;
                tmp_3_i_mid2_reg_1103 <= tmp_3_i_mid2_fu_323_p3;
                tmp_i_mid2_reg_1089 <= tmp_i_mid2_fu_273_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                buf_val_2_val_V_add_reg_1118_pp0_iter1_reg <= buf_val_2_val_V_add_reg_1118;
                exitcond_flatten_reg_1080 <= exitcond_flatten_fu_235_p2;
                or_cond_i_mid2_reg_1093_pp0_iter1_reg <= or_cond_i_mid2_reg_1093;
                tmp_3_i_mid2_reg_1103_pp0_iter1_reg <= tmp_3_i_mid2_reg_1103;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                or_cond_i_mid2_reg_1093_pp0_iter2_reg <= or_cond_i_mid2_reg_1093_pp0_iter1_reg;
                tmp_3_i_mid2_reg_1103_pp0_iter2_reg <= tmp_3_i_mid2_reg_1103_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_i_mid2_reg_1093_pp0_iter1_reg = ap_const_lv1_1))) then
                p_Val2_1_2_1_i_reg_1204 <= p_Val2_1_2_1_i_fu_749_p2;
                p_Val2_1_2_2_i_reg_1214 <= p_Val2_1_2_2_i_fu_779_p2;
                p_Val2_1_2_3_i_reg_1224 <= p_Val2_1_2_3_i_fu_809_p2;
                p_Val2_1_2_4_i_reg_1234 <= p_Val2_1_2_4_i_fu_839_p2;
                p_Val2_1_2_5_i_reg_1244 <= p_Val2_1_2_5_i_fu_869_p2;
                p_Val2_1_2_i_reg_1194 <= p_Val2_1_2_i_fu_719_p2;
                tmp_10_reg_1239 <= p_Val2_2_1_4_i_fu_672_p2(50 downto 19);
                tmp_11_reg_1249 <= p_Val2_2_1_5_i_fu_705_p2(50 downto 19);
                tmp_7_reg_1199 <= p_Val2_2_1_i_fu_540_p2(50 downto 19);
                tmp_8_reg_1209 <= p_Val2_2_1_1_i_fu_573_p2(50 downto 19);
                tmp_9_reg_1219 <= p_Val2_2_1_2_i_fu_606_p2(50 downto 19);
                tmp_s_reg_1229 <= p_Val2_2_1_3_i_fu_639_p2(50 downto 19);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_i_mid2_reg_1093 = ap_const_lv1_1) and (exitcond_flatten_reg_1080 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_10_i_reg_1139 <= buf_val_1_val_V_q0(95 downto 64);
                tmp_11_i_reg_1144 <= buf_val_1_val_V_q0(127 downto 96);
                tmp_12_i_reg_1149 <= buf_val_1_val_V_q0(159 downto 128);
                tmp_14_i_reg_1159 <= buf_val_2_val_V_q0(63 downto 32);
                tmp_14_reg_1129 <= tmp_14_fu_351_p1;
                tmp_15_i_reg_1164 <= buf_val_2_val_V_q0(95 downto 64);
                tmp_15_reg_1154 <= tmp_15_fu_395_p1;
                tmp_16_i_reg_1169 <= buf_val_2_val_V_q0(127 downto 96);
                tmp_17_i_reg_1174 <= buf_val_2_val_V_q0(159 downto 128);
                tmp_9_i_reg_1134 <= buf_val_1_val_V_q0(63 downto 32);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_i_mid2_reg_1093 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_16_reg_1184 <= buf_val_1_val_V_q0(190 downto 160);
                tmp_17_reg_1189 <= buf_val_2_val_V_q0(190 downto 160);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, exitcond_flatten_fu_235_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond_flatten_fu_235_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((exitcond_flatten_fu_235_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    acc_val_0_V_fu_897_p4 <= p_Val2_2_2_i_fu_892_p2(50 downto 19);
    acc_val_1_V_fu_919_p4 <= p_Val2_2_2_1_i_fu_914_p2(50 downto 19);
    acc_val_2_V_fu_941_p4 <= p_Val2_2_2_2_i_fu_936_p2(50 downto 19);
    acc_val_3_V_fu_963_p4 <= p_Val2_2_2_3_i_fu_958_p2(50 downto 19);
    acc_val_4_V_fu_985_p4 <= p_Val2_2_2_4_i_fu_980_p2(50 downto 19);
    acc_val_5_V_fu_1011_p4 <= p_Val2_2_2_5_i_fu_1005_p2(50 downto 19);
    acc_val_V_0_i_fu_1056_p3 <= 
        acc_val_0_V_fu_897_p4 when (or_cond_i_mid2_reg_1093_pp0_iter2_reg(0) = '1') else 
        ap_const_lv32_0;
    acc_val_V_1_i_fu_1049_p3 <= 
        acc_val_1_V_fu_919_p4 when (or_cond_i_mid2_reg_1093_pp0_iter2_reg(0) = '1') else 
        ap_const_lv32_0;
    acc_val_V_2_i_fu_1042_p3 <= 
        acc_val_2_V_fu_941_p4 when (or_cond_i_mid2_reg_1093_pp0_iter2_reg(0) = '1') else 
        ap_const_lv32_0;
    acc_val_V_3_i_fu_1035_p3 <= 
        acc_val_3_V_fu_963_p4 when (or_cond_i_mid2_reg_1093_pp0_iter2_reg(0) = '1') else 
        ap_const_lv32_0;
    acc_val_V_4_i_fu_1028_p3 <= 
        acc_val_4_V_fu_985_p4 when (or_cond_i_mid2_reg_1093_pp0_iter2_reg(0) = '1') else 
        ap_const_lv32_0;
    acc_val_V_5_i_fu_1021_p3 <= 
        acc_val_5_V_fu_1011_p4 when (or_cond_i_mid2_reg_1093_pp0_iter2_reg(0) = '1') else 
        ap_const_lv32_0;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state6 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(out_product_val_V_empty_n, tensor_y_val_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, tmp_3_i_mid2_reg_1103_pp0_iter2_reg, ap_predicate_op58_read_state3)
    begin
                ap_block_pp0_stage0_01001 <= (((tmp_3_i_mid2_reg_1103_pp0_iter2_reg = ap_const_lv1_0) and (tensor_y_val_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((out_product_val_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op58_read_state3 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(out_product_val_V_empty_n, tensor_y_val_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, tmp_3_i_mid2_reg_1103_pp0_iter2_reg, ap_predicate_op58_read_state3)
    begin
                ap_block_pp0_stage0_11001 <= (((tmp_3_i_mid2_reg_1103_pp0_iter2_reg = ap_const_lv1_0) and (tensor_y_val_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((out_product_val_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op58_read_state3 = ap_const_boolean_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(out_product_val_V_empty_n, tensor_y_val_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, tmp_3_i_mid2_reg_1103_pp0_iter2_reg, ap_predicate_op58_read_state3)
    begin
                ap_block_pp0_stage0_subdone <= (((tmp_3_i_mid2_reg_1103_pp0_iter2_reg = ap_const_lv1_0) and (tensor_y_val_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((out_product_val_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op58_read_state3 = ap_const_boolean_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(out_product_val_V_empty_n, ap_predicate_op58_read_state3)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((out_product_val_V_empty_n = ap_const_logic_0) and (ap_predicate_op58_read_state3 = ap_const_boolean_1));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter3_assign_proc : process(tensor_y_val_V_full_n, tmp_3_i_mid2_reg_1103_pp0_iter2_reg)
    begin
                ap_block_state5_pp0_stage0_iter3 <= ((tmp_3_i_mid2_reg_1103_pp0_iter2_reg = ap_const_lv1_0) and (tensor_y_val_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_111_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_111 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_243_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_243 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_fu_235_p2)
    begin
        if ((exitcond_flatten_fu_235_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_tmp_val_V_4_i_reg_195 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op58_read_state3_assign_proc : process(exitcond_flatten_reg_1080, tmp_i_mid2_reg_1089)
    begin
                ap_predicate_op58_read_state3 <= ((tmp_i_mid2_reg_1089 = ap_const_lv1_1) and (exitcond_flatten_reg_1080 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    buf_val_1_val_V_address0 <= tmp_i_32_fu_339_p1(4 - 1 downto 0);

    buf_val_1_val_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            buf_val_1_val_V_ce0 <= ap_const_logic_1;
        else 
            buf_val_1_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_1_val_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_val_1_val_V_ce1 <= ap_const_logic_1;
        else 
            buf_val_1_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_1_val_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1080, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1080 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_val_1_val_V_we1 <= ap_const_logic_1;
        else 
            buf_val_1_val_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_2_val_V_address0 <= tmp_i_32_fu_339_p1(4 - 1 downto 0);

    buf_val_2_val_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            buf_val_2_val_V_ce0 <= ap_const_logic_1;
        else 
            buf_val_2_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_2_val_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buf_val_2_val_V_ce1 <= ap_const_logic_1;
        else 
            buf_val_2_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_2_val_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buf_val_2_val_V_we1 <= ap_const_logic_1;
        else 
            buf_val_2_val_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    c_fu_345_p2 <= std_logic_vector(unsigned(col_assign_mid2_fu_253_p3) + unsigned(ap_const_lv4_1));
    col_assign_mid2_fu_253_p3 <= 
        ap_const_lv4_0 when (exitcond2_i_fu_247_p2(0) = '1') else 
        col_assign_reg_184;
    exitcond2_i_fu_247_p2 <= "1" when (col_assign_reg_184 = ap_const_lv4_A) else "0";
    exitcond_flatten_fu_235_p2 <= "1" when (indvar_flatten_reg_162 = ap_const_lv6_3C) else "0";
    icmp1_fu_291_p2 <= "0" when (tmp_13_fu_281_p4 = ap_const_lv2_0) else "1";
    icmp_fu_223_p2 <= "0" when (tmp_fu_213_p4 = ap_const_lv2_0) else "1";
    indvar_flatten_next_fu_241_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_162) + unsigned(ap_const_lv6_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    or_cond_i_fu_229_p2 <= (tmp_i_fu_207_p2 and icmp_fu_223_p2);
    or_cond_i_mid1_fu_297_p2 <= (tmp_i_mid1_fu_267_p2 and icmp1_fu_291_p2);
    or_cond_i_mid2_fu_303_p3 <= 
        or_cond_i_mid1_fu_297_p2 when (exitcond2_i_fu_247_p2(0) = '1') else 
        or_cond_i_fu_229_p2;

    out_product_val_V_blk_n_assign_proc : process(out_product_val_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_1080, tmp_i_mid2_reg_1089)
    begin
        if (((tmp_i_mid2_reg_1089 = ap_const_lv1_1) and (exitcond_flatten_reg_1080 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_product_val_V_blk_n <= out_product_val_V_empty_n;
        else 
            out_product_val_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_product_val_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op58_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op58_read_state3 = ap_const_boolean_1))) then 
            out_product_val_V_read <= ap_const_logic_1;
        else 
            out_product_val_V_read <= ap_const_logic_0;
        end if; 
    end process;

    p_Val2_1_0_1_i_fu_471_p1 <= tmp_9_i_reg_1134;
    p_Val2_1_0_1_i_fu_471_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv51_2982A) * signed(p_Val2_1_0_1_i_fu_471_p1))), 51));
    p_Val2_1_0_2_i_fu_480_p1 <= tmp_10_i_reg_1139;
    p_Val2_1_0_2_i_fu_480_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv51_2982A) * signed(p_Val2_1_0_2_i_fu_480_p1))), 51));
    p_Val2_1_0_3_i_fu_489_p1 <= tmp_11_i_reg_1144;
    p_Val2_1_0_3_i_fu_489_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv51_2982A) * signed(p_Val2_1_0_3_i_fu_489_p1))), 51));
    p_Val2_1_0_4_i_fu_498_p1 <= tmp_12_i_reg_1149;
    p_Val2_1_0_4_i_fu_498_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv51_2982A) * signed(p_Val2_1_0_4_i_fu_498_p1))), 51));
    p_Val2_1_0_5_i_fu_507_p1 <= tmp_16_reg_1184;
    p_Val2_1_0_5_i_fu_507_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv51_2982A) * signed(p_Val2_1_0_5_i_fu_507_p1))), 51));
    p_Val2_1_0_i_fu_462_p1 <= tmp_14_reg_1129;
    p_Val2_1_0_i_fu_462_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv51_2982A) * signed(p_Val2_1_0_i_fu_462_p1))), 51));
    p_Val2_1_1_1_i_fu_549_p1 <= tmp_14_i_reg_1159;
    p_Val2_1_1_1_i_fu_549_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv51_2CF76) * signed(p_Val2_1_1_1_i_fu_549_p1))), 51));
    p_Val2_1_1_2_i_fu_582_p1 <= tmp_15_i_reg_1164;
    p_Val2_1_1_2_i_fu_582_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv51_2CF76) * signed(p_Val2_1_1_2_i_fu_582_p1))), 51));
    p_Val2_1_1_3_i_fu_615_p1 <= tmp_16_i_reg_1169;
    p_Val2_1_1_3_i_fu_615_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv51_2CF76) * signed(p_Val2_1_1_3_i_fu_615_p1))), 51));
    p_Val2_1_1_4_i_fu_648_p1 <= tmp_17_i_reg_1174;
    p_Val2_1_1_4_i_fu_648_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv51_2CF76) * signed(p_Val2_1_1_4_i_fu_648_p1))), 51));
    p_Val2_1_1_5_i_fu_681_p1 <= tmp_17_reg_1189;
    p_Val2_1_1_5_i_fu_681_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv51_2CF76) * signed(p_Val2_1_1_5_i_fu_681_p1))), 51));
    p_Val2_1_1_i_fu_516_p1 <= tmp_15_reg_1154;
    p_Val2_1_1_i_fu_516_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv51_2CF76) * signed(p_Val2_1_1_i_fu_516_p1))), 51));
    p_Val2_1_2_1_i_fu_749_p1 <= tmp_21_i_fu_735_p4;
    p_Val2_1_2_1_i_fu_749_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv51_2982A) * signed(p_Val2_1_2_1_i_fu_749_p1))), 51));
    p_Val2_1_2_2_i_fu_779_p1 <= tmp_22_i_fu_765_p4;
    p_Val2_1_2_2_i_fu_779_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv51_2982A) * signed(p_Val2_1_2_2_i_fu_779_p1))), 51));
    p_Val2_1_2_3_i_fu_809_p1 <= tmp_23_i_fu_795_p4;
    p_Val2_1_2_3_i_fu_809_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv51_2982A) * signed(p_Val2_1_2_3_i_fu_809_p1))), 51));
    p_Val2_1_2_4_i_fu_839_p1 <= tmp_24_i_fu_825_p4;
    p_Val2_1_2_4_i_fu_839_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv51_2982A) * signed(p_Val2_1_2_4_i_fu_839_p1))), 51));
        p_Val2_1_2_5_i_cas_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_2_5_i_reg_1244),51));

    p_Val2_1_2_5_i_fu_869_p1 <= tmp_19_fu_855_p4;
    p_Val2_1_2_5_i_fu_869_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv50_2982A) * signed(p_Val2_1_2_5_i_fu_869_p1))), 50));
    p_Val2_1_2_i_fu_719_p1 <= tmp_18_fu_711_p1;
    p_Val2_1_2_i_fu_719_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv51_2982A) * signed(p_Val2_1_2_i_fu_719_p1))), 51));
    p_Val2_2_1_1_i_fu_573_p2 <= std_logic_vector(unsigned(p_Val2_1_1_1_i_fu_549_p2) + unsigned(tmp_23_1_1_i_fu_565_p3));
    p_Val2_2_1_2_i_fu_606_p2 <= std_logic_vector(unsigned(p_Val2_1_1_2_i_fu_582_p2) + unsigned(tmp_23_1_2_i_fu_598_p3));
    p_Val2_2_1_3_i_fu_639_p2 <= std_logic_vector(unsigned(p_Val2_1_1_3_i_fu_615_p2) + unsigned(tmp_23_1_3_i_fu_631_p3));
    p_Val2_2_1_4_i_fu_672_p2 <= std_logic_vector(unsigned(p_Val2_1_1_4_i_fu_648_p2) + unsigned(tmp_23_1_4_i_fu_664_p3));
    p_Val2_2_1_5_i_fu_705_p2 <= std_logic_vector(unsigned(p_Val2_1_1_5_i_fu_681_p2) + unsigned(tmp_23_1_5_i_fu_697_p3));
    p_Val2_2_1_i_fu_540_p2 <= std_logic_vector(unsigned(p_Val2_1_1_i_fu_516_p2) + unsigned(tmp_23_1_i_fu_532_p3));
    p_Val2_2_2_1_i_fu_914_p2 <= std_logic_vector(unsigned(p_Val2_1_2_1_i_reg_1204) + unsigned(tmp_23_2_1_i_fu_907_p3));
    p_Val2_2_2_2_i_fu_936_p2 <= std_logic_vector(unsigned(p_Val2_1_2_2_i_reg_1214) + unsigned(tmp_23_2_2_i_fu_929_p3));
    p_Val2_2_2_3_i_fu_958_p2 <= std_logic_vector(unsigned(p_Val2_1_2_3_i_reg_1224) + unsigned(tmp_23_2_3_i_fu_951_p3));
    p_Val2_2_2_4_i_fu_980_p2 <= std_logic_vector(unsigned(p_Val2_1_2_4_i_reg_1234) + unsigned(tmp_23_2_4_i_fu_973_p3));
    p_Val2_2_2_5_i_fu_1005_p2 <= std_logic_vector(signed(p_Val2_1_2_5_i_cas_fu_995_p1) + signed(tmp_23_2_5_i_fu_998_p3));
    p_Val2_2_2_i_fu_892_p2 <= std_logic_vector(unsigned(p_Val2_1_2_i_reg_1194) + unsigned(tmp_23_2_i_fu_885_p3));
    r_fu_261_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(r_i_reg_173));
    r_i_mid2_fu_331_p3 <= 
        r_fu_261_p2 when (exitcond2_i_fu_247_p2(0) = '1') else 
        r_i_reg_173;

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;


    tensor_y_val_V_blk_n_assign_proc : process(tensor_y_val_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, tmp_3_i_mid2_reg_1103_pp0_iter2_reg)
    begin
        if (((tmp_3_i_mid2_reg_1103_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            tensor_y_val_V_blk_n <= tensor_y_val_V_full_n;
        else 
            tensor_y_val_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    tensor_y_val_V_din <= (((((acc_val_V_5_i_fu_1021_p3 & acc_val_V_4_i_fu_1028_p3) & acc_val_V_3_i_fu_1035_p3) & acc_val_V_2_i_fu_1042_p3) & acc_val_V_1_i_fu_1049_p3) & acc_val_V_0_i_fu_1056_p3);

    tensor_y_val_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, tmp_3_i_mid2_reg_1103_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_3_i_mid2_reg_1103_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            tensor_y_val_V_write <= ap_const_logic_1;
        else 
            tensor_y_val_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_13_fu_281_p4 <= r_fu_261_p2(2 downto 1);
    tmp_14_fu_351_p1 <= buf_val_1_val_V_q0(32 - 1 downto 0);
    tmp_15_fu_395_p1 <= buf_val_2_val_V_q0(32 - 1 downto 0);
    tmp_18_fu_711_p1 <= ap_phi_reg_pp0_iter2_tmp_val_V_4_i_reg_195(32 - 1 downto 0);
    tmp_19_fu_855_p4 <= ap_phi_reg_pp0_iter2_tmp_val_V_4_i_reg_195(190 downto 160);
    tmp_1_fu_522_p4 <= p_Val2_1_0_i_fu_462_p2(50 downto 19);
    tmp_21_i_fu_735_p4 <= ap_phi_reg_pp0_iter2_tmp_val_V_4_i_reg_195(63 downto 32);
    tmp_22_i_fu_765_p4 <= ap_phi_reg_pp0_iter2_tmp_val_V_4_i_reg_195(95 downto 64);
    tmp_23_1_1_i_fu_565_p3 <= (tmp_2_fu_555_p4 & ap_const_lv19_0);
    tmp_23_1_2_i_fu_598_p3 <= (tmp_3_fu_588_p4 & ap_const_lv19_0);
    tmp_23_1_3_i_fu_631_p3 <= (tmp_4_fu_621_p4 & ap_const_lv19_0);
    tmp_23_1_4_i_fu_664_p3 <= (tmp_5_fu_654_p4 & ap_const_lv19_0);
    tmp_23_1_5_i_fu_697_p3 <= (tmp_6_fu_687_p4 & ap_const_lv19_0);
    tmp_23_1_i_fu_532_p3 <= (tmp_1_fu_522_p4 & ap_const_lv19_0);
    tmp_23_2_1_i_fu_907_p3 <= (tmp_8_reg_1209 & ap_const_lv19_0);
    tmp_23_2_2_i_fu_929_p3 <= (tmp_9_reg_1219 & ap_const_lv19_0);
    tmp_23_2_3_i_fu_951_p3 <= (tmp_s_reg_1229 & ap_const_lv19_0);
    tmp_23_2_4_i_fu_973_p3 <= (tmp_10_reg_1239 & ap_const_lv19_0);
    tmp_23_2_5_i_fu_998_p3 <= (tmp_11_reg_1249 & ap_const_lv19_0);
    tmp_23_2_i_fu_885_p3 <= (tmp_7_reg_1199 & ap_const_lv19_0);
    tmp_23_i_fu_795_p4 <= ap_phi_reg_pp0_iter2_tmp_val_V_4_i_reg_195(127 downto 96);
    tmp_24_i_fu_825_p4 <= ap_phi_reg_pp0_iter2_tmp_val_V_4_i_reg_195(159 downto 128);
    tmp_2_fu_555_p4 <= p_Val2_1_0_1_i_fu_471_p2(50 downto 19);
    tmp_3_fu_588_p4 <= p_Val2_1_0_2_i_fu_480_p2(50 downto 19);
    tmp_3_i_fu_317_p2 <= "1" when (r_i_reg_173 = ap_const_lv3_0) else "0";
    tmp_3_i_mid1_fu_311_p2 <= "1" when (r_fu_261_p2 = ap_const_lv3_0) else "0";
    tmp_3_i_mid2_fu_323_p3 <= 
        tmp_3_i_mid1_fu_311_p2 when (exitcond2_i_fu_247_p2(0) = '1') else 
        tmp_3_i_fu_317_p2;
    tmp_4_fu_621_p4 <= p_Val2_1_0_3_i_fu_489_p2(50 downto 19);
    tmp_5_fu_654_p4 <= p_Val2_1_0_4_i_fu_498_p2(50 downto 19);
    tmp_6_fu_687_p4 <= p_Val2_1_0_5_i_fu_507_p2(50 downto 19);
    tmp_fu_213_p4 <= r_i_reg_173(2 downto 1);
    tmp_i_32_fu_339_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_assign_mid2_fu_253_p3),64));
    tmp_i_fu_207_p2 <= "1" when (unsigned(r_i_reg_173) < unsigned(ap_const_lv3_5)) else "0";
    tmp_i_mid1_fu_267_p2 <= "1" when (unsigned(r_fu_261_p2) < unsigned(ap_const_lv3_5)) else "0";
    tmp_i_mid2_fu_273_p3 <= 
        tmp_i_mid1_fu_267_p2 when (exitcond2_i_fu_247_p2(0) = '1') else 
        tmp_i_fu_207_p2;
end behav;
