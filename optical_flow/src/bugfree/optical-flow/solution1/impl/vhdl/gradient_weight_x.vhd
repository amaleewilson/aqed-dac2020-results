-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gradient_weight_x is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    y_filtered_x_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    y_filtered_x_V_empty_n : IN STD_LOGIC;
    y_filtered_x_V_read : OUT STD_LOGIC;
    y_filtered_y_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    y_filtered_y_V_empty_n : IN STD_LOGIC;
    y_filtered_y_V_read : OUT STD_LOGIC;
    y_filtered_z_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    y_filtered_z_V_empty_n : IN STD_LOGIC;
    y_filtered_z_V_read : OUT STD_LOGIC;
    filtered_gradient_x_s_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    filtered_gradient_x_s_full_n : IN STD_LOGIC;
    filtered_gradient_x_s_write : OUT STD_LOGIC;
    filtered_gradient_y_s_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    filtered_gradient_y_s_full_n : IN STD_LOGIC;
    filtered_gradient_y_s_write : OUT STD_LOGIC;
    filtered_gradient_z_s_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    filtered_gradient_z_s_full_n : IN STD_LOGIC;
    filtered_gradient_z_s_write : OUT STD_LOGIC );
end;


architecture behav of gradient_weight_x is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_41 : STD_LOGIC_VECTOR (6 downto 0) := "1000001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv51_17EC5 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000010111111011000101";
    constant ap_const_lv51_0 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000000000000000000000";
    constant ap_const_lv51_25288 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000100101001010001000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv51_11062 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000010001000001100010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal y_filtered_x_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_flatten_reg_1070 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_i_reg_1079 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_filtered_y_V_blk_n : STD_LOGIC;
    signal y_filtered_z_V_blk_n : STD_LOGIC;
    signal filtered_gradient_x_s_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmp_85_reg_1083 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_reg_1083_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_i_reg_1087 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_i_reg_1087_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal filtered_gradient_y_s_blk_n : STD_LOGIC;
    signal filtered_gradient_z_s_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_200 : STD_LOGIC_VECTOR (6 downto 0);
    signal c_i_reg_211 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_flatten_fu_258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op90_read_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op165_write_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar_flatten_next_fu_264_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_53_i_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_i_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_fu_422_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal acc_x_V_5_i_reg_1096 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_y_V_5_i_reg_1101 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_z_V_5_i_reg_1106 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter1_state3 : STD_LOGIC;
    signal ap_phi_mux_buf_val_0_y_V_6_phi_fu_226_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_buf_val_0_y_V_6_reg_222 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_buf_val_0_y_V_6_reg_222 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_buf_val_0_x_V_6_phi_fu_238_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_buf_val_0_x_V_6_reg_234 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_buf_val_0_x_V_6_reg_234 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_tmp_z_V_phi_fu_250_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_z_V_reg_246 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_tmp_z_V_reg_246 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal buf_val_0_x_V_1_fu_98 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_val_0_x_V_2_fu_102 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_val_0_x_V_3_fu_106 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_val_0_x_V_4_fu_110 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_val_0_x_V_5_fu_114 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_val_0_y_V_1_fu_118 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_val_0_y_V_2_fu_122 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_val_0_y_V_3_fu_126 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_val_0_y_V_4_fu_130 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_val_0_y_V_5_fu_134 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_val_0_z_V_1_fu_138 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_val_0_z_V_2_fu_142 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_val_0_z_V_3_fu_146 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_val_0_z_V_4_fu_150 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_val_0_z_V_5_fu_154 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2_i2_fu_270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_i_mid2_fu_276_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_66_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_fu_308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_fu_320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_69_fu_314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_73_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_79_fu_374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_86_fu_557_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_87_fu_565_p3 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_200_2_i_fu_573_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_20123_2_cast_i_fu_577_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_88_fu_591_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_89_fu_599_p3 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_205_2_i_fu_607_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_20624_2_cast_i_fu_611_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_90_fu_625_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_91_fu_633_p3 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_210_2_i_fu_641_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_21125_2_cast_i_fu_645_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_35_2_i_fu_585_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_s_fu_667_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_92_fu_659_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_200_3_i_fu_677_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_38_2_i_fu_619_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_35_fu_699_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_93_fu_691_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_205_3_i_fu_709_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_41_2_i_fu_653_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_36_fu_731_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_fu_723_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_210_3_i_fu_741_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_35_3_i_fu_685_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_37_fu_755_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_200_4_i_fu_765_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_20123_4_cast_i_fu_773_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_38_3_i_fu_717_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_38_fu_787_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_205_4_i_fu_797_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_20624_4_cast_i_fu_805_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_41_3_i_fu_749_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_39_fu_819_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_210_4_i_fu_829_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_21125_4_cast_i_fu_837_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_35_4_i_fu_781_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_40_fu_851_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_200_5_i_fu_861_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_20123_5_cast_i_fu_869_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_35_5_i_fu_877_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_38_4_i_fu_813_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_41_fu_893_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_205_5_i_fu_903_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_20624_5_cast_i_fu_911_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_38_5_i_fu_919_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_41_4_i_fu_845_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_42_fu_935_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_210_5_i_fu_945_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_21125_5_cast_i_fu_953_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_41_5_i_fu_961_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_158 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond_flatten_fu_258_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_buf_val_0_x_V_6_reg_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_158)) then
                if (((tmp_53_i_fu_284_p2 = ap_const_lv1_0) and (exitcond_flatten_fu_258_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_buf_val_0_x_V_6_reg_234 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_buf_val_0_x_V_6_reg_234 <= ap_phi_reg_pp0_iter0_buf_val_0_x_V_6_reg_234;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_buf_val_0_y_V_6_reg_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_158)) then
                if (((tmp_53_i_fu_284_p2 = ap_const_lv1_0) and (exitcond_flatten_fu_258_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_buf_val_0_y_V_6_reg_222 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_buf_val_0_y_V_6_reg_222 <= ap_phi_reg_pp0_iter0_buf_val_0_y_V_6_reg_222;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_tmp_z_V_reg_246_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_158)) then
                if (((tmp_53_i_fu_284_p2 = ap_const_lv1_0) and (exitcond_flatten_fu_258_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_tmp_z_V_reg_246 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_tmp_z_V_reg_246 <= ap_phi_reg_pp0_iter0_tmp_z_V_reg_246;
                end if;
            end if; 
        end if;
    end process;

    c_i_reg_211_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_258_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                c_i_reg_211 <= c_fu_422_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c_i_reg_211 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_258_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_reg_200 <= indvar_flatten_next_fu_264_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_200 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_85_reg_1083 = ap_const_lv1_0) and (exitcond_flatten_reg_1070 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                acc_x_V_5_i_reg_1096 <= p_Val2_35_5_i_fu_877_p2(50 downto 19);
                acc_y_V_5_i_reg_1101 <= p_Val2_38_5_i_fu_919_p2(50 downto 19);
                acc_z_V_5_i_reg_1106 <= p_Val2_41_5_i_fu_961_p2(50 downto 19);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buf_val_0_x_V_1_fu_98 <= buf_val_0_x_V_2_fu_102;
                buf_val_0_x_V_2_fu_102 <= buf_val_0_x_V_3_fu_106;
                buf_val_0_x_V_3_fu_106 <= buf_val_0_x_V_4_fu_110;
                buf_val_0_x_V_4_fu_110 <= buf_val_0_x_V_5_fu_114;
                buf_val_0_y_V_1_fu_118 <= buf_val_0_y_V_2_fu_122;
                buf_val_0_y_V_2_fu_122 <= buf_val_0_y_V_3_fu_126;
                buf_val_0_y_V_3_fu_126 <= buf_val_0_y_V_4_fu_130;
                buf_val_0_y_V_4_fu_130 <= buf_val_0_y_V_5_fu_134;
                buf_val_0_z_V_1_fu_138 <= buf_val_0_z_V_2_fu_142;
                buf_val_0_z_V_2_fu_142 <= buf_val_0_z_V_3_fu_146;
                buf_val_0_z_V_3_fu_146 <= buf_val_0_z_V_4_fu_150;
                buf_val_0_z_V_4_fu_150 <= buf_val_0_z_V_5_fu_154;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1070 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buf_val_0_x_V_5_fu_114 <= ap_phi_mux_buf_val_0_x_V_6_phi_fu_238_p4;
                buf_val_0_y_V_5_fu_134 <= ap_phi_mux_buf_val_0_y_V_6_phi_fu_226_p4;
                buf_val_0_z_V_5_fu_154 <= ap_phi_mux_tmp_z_V_phi_fu_250_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_flatten_reg_1070 <= exitcond_flatten_fu_258_p2;
                tmp_57_i_reg_1087_pp0_iter1_reg <= tmp_57_i_reg_1087;
                tmp_85_reg_1083_pp0_iter1_reg <= tmp_85_reg_1083;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_fu_258_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_53_i_reg_1079 <= tmp_53_i_fu_284_p2;
                tmp_85_reg_1083 <= tmp_85_fu_410_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_85_fu_410_p2 = ap_const_lv1_1) and (exitcond_flatten_fu_258_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_57_i_reg_1087 <= tmp_57_i_fu_416_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(y_filtered_x_V_empty_n, y_filtered_y_V_empty_n, y_filtered_z_V_empty_n, filtered_gradient_x_s_full_n, filtered_gradient_y_s_full_n, filtered_gradient_z_s_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, tmp_85_reg_1083_pp0_iter1_reg, ap_predicate_op90_read_state3, ap_predicate_op165_write_state4)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_0) and (filtered_gradient_z_s_full_n = ap_const_logic_0)) or ((tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_0) and (filtered_gradient_y_s_full_n = ap_const_logic_0)) or ((tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_0) and (filtered_gradient_x_s_full_n = ap_const_logic_0)) or ((filtered_gradient_z_s_full_n = ap_const_logic_0) and (ap_predicate_op165_write_state4 = ap_const_boolean_1)) or ((filtered_gradient_y_s_full_n = ap_const_logic_0) and (ap_predicate_op165_write_state4 = ap_const_boolean_1)) or ((filtered_gradient_x_s_full_n = ap_const_logic_0) and (ap_predicate_op165_write_state4 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((y_filtered_z_V_empty_n = ap_const_logic_0) and (ap_predicate_op90_read_state3 = ap_const_boolean_1)) or ((y_filtered_y_V_empty_n = ap_const_logic_0) and (ap_predicate_op90_read_state3 = ap_const_boolean_1)) or ((y_filtered_x_V_empty_n = ap_const_logic_0) and (ap_predicate_op90_read_state3 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(y_filtered_x_V_empty_n, y_filtered_y_V_empty_n, y_filtered_z_V_empty_n, filtered_gradient_x_s_full_n, filtered_gradient_y_s_full_n, filtered_gradient_z_s_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, tmp_85_reg_1083_pp0_iter1_reg, ap_predicate_op90_read_state3, ap_predicate_op165_write_state4)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_0) and (filtered_gradient_z_s_full_n = ap_const_logic_0)) or ((tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_0) and (filtered_gradient_y_s_full_n = ap_const_logic_0)) or ((tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_0) and (filtered_gradient_x_s_full_n = ap_const_logic_0)) or ((filtered_gradient_z_s_full_n = ap_const_logic_0) and (ap_predicate_op165_write_state4 = ap_const_boolean_1)) or ((filtered_gradient_y_s_full_n = ap_const_logic_0) and (ap_predicate_op165_write_state4 = ap_const_boolean_1)) or ((filtered_gradient_x_s_full_n = ap_const_logic_0) and (ap_predicate_op165_write_state4 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((y_filtered_z_V_empty_n = ap_const_logic_0) and (ap_predicate_op90_read_state3 = ap_const_boolean_1)) or ((y_filtered_y_V_empty_n = ap_const_logic_0) and (ap_predicate_op90_read_state3 = ap_const_boolean_1)) or ((y_filtered_x_V_empty_n = ap_const_logic_0) and (ap_predicate_op90_read_state3 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(y_filtered_x_V_empty_n, y_filtered_y_V_empty_n, y_filtered_z_V_empty_n, filtered_gradient_x_s_full_n, filtered_gradient_y_s_full_n, filtered_gradient_z_s_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, tmp_85_reg_1083_pp0_iter1_reg, ap_predicate_op90_read_state3, ap_predicate_op165_write_state4)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_0) and (filtered_gradient_z_s_full_n = ap_const_logic_0)) or ((tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_0) and (filtered_gradient_y_s_full_n = ap_const_logic_0)) or ((tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_0) and (filtered_gradient_x_s_full_n = ap_const_logic_0)) or ((filtered_gradient_z_s_full_n = ap_const_logic_0) and (ap_predicate_op165_write_state4 = ap_const_boolean_1)) or ((filtered_gradient_y_s_full_n = ap_const_logic_0) and (ap_predicate_op165_write_state4 = ap_const_boolean_1)) or ((filtered_gradient_x_s_full_n = ap_const_logic_0) and (ap_predicate_op165_write_state4 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((y_filtered_z_V_empty_n = ap_const_logic_0) and (ap_predicate_op90_read_state3 = ap_const_boolean_1)) or ((y_filtered_y_V_empty_n = ap_const_logic_0) and (ap_predicate_op90_read_state3 = ap_const_boolean_1)) or ((y_filtered_x_V_empty_n = ap_const_logic_0) and (ap_predicate_op90_read_state3 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(y_filtered_x_V_empty_n, y_filtered_y_V_empty_n, y_filtered_z_V_empty_n, ap_predicate_op90_read_state3)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (((y_filtered_z_V_empty_n = ap_const_logic_0) and (ap_predicate_op90_read_state3 = ap_const_boolean_1)) or ((y_filtered_y_V_empty_n = ap_const_logic_0) and (ap_predicate_op90_read_state3 = ap_const_boolean_1)) or ((y_filtered_x_V_empty_n = ap_const_logic_0) and (ap_predicate_op90_read_state3 = ap_const_boolean_1)));
    end process;


    ap_block_state4_pp0_stage0_iter2_assign_proc : process(filtered_gradient_x_s_full_n, filtered_gradient_y_s_full_n, filtered_gradient_z_s_full_n, tmp_85_reg_1083_pp0_iter1_reg, ap_predicate_op165_write_state4)
    begin
                ap_block_state4_pp0_stage0_iter2 <= (((tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_0) and (filtered_gradient_z_s_full_n = ap_const_logic_0)) or ((tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_0) and (filtered_gradient_y_s_full_n = ap_const_logic_0)) or ((tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_0) and (filtered_gradient_x_s_full_n = ap_const_logic_0)) or ((filtered_gradient_z_s_full_n = ap_const_logic_0) and (ap_predicate_op165_write_state4 = ap_const_boolean_1)) or ((filtered_gradient_y_s_full_n = ap_const_logic_0) and (ap_predicate_op165_write_state4 = ap_const_boolean_1)) or ((filtered_gradient_x_s_full_n = ap_const_logic_0) and (ap_predicate_op165_write_state4 = ap_const_boolean_1)));
    end process;


    ap_condition_158_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_158 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_pp0_exit_iter1_state3_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_buf_val_0_x_V_6_phi_fu_238_p4_assign_proc : process(y_filtered_x_V_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_1070, tmp_53_i_reg_1079, ap_phi_reg_pp0_iter1_buf_val_0_x_V_6_reg_234)
    begin
        if (((tmp_53_i_reg_1079 = ap_const_lv1_1) and (exitcond_flatten_reg_1070 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_buf_val_0_x_V_6_phi_fu_238_p4 <= y_filtered_x_V_dout;
        else 
            ap_phi_mux_buf_val_0_x_V_6_phi_fu_238_p4 <= ap_phi_reg_pp0_iter1_buf_val_0_x_V_6_reg_234;
        end if; 
    end process;


    ap_phi_mux_buf_val_0_y_V_6_phi_fu_226_p4_assign_proc : process(y_filtered_y_V_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_1070, tmp_53_i_reg_1079, ap_phi_reg_pp0_iter1_buf_val_0_y_V_6_reg_222)
    begin
        if (((tmp_53_i_reg_1079 = ap_const_lv1_1) and (exitcond_flatten_reg_1070 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_buf_val_0_y_V_6_phi_fu_226_p4 <= y_filtered_y_V_dout;
        else 
            ap_phi_mux_buf_val_0_y_V_6_phi_fu_226_p4 <= ap_phi_reg_pp0_iter1_buf_val_0_y_V_6_reg_222;
        end if; 
    end process;


    ap_phi_mux_tmp_z_V_phi_fu_250_p4_assign_proc : process(y_filtered_z_V_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_1070, tmp_53_i_reg_1079, ap_phi_reg_pp0_iter1_tmp_z_V_reg_246)
    begin
        if (((tmp_53_i_reg_1079 = ap_const_lv1_1) and (exitcond_flatten_reg_1070 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_tmp_z_V_phi_fu_250_p4 <= y_filtered_z_V_dout;
        else 
            ap_phi_mux_tmp_z_V_phi_fu_250_p4 <= ap_phi_reg_pp0_iter1_tmp_z_V_reg_246;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_buf_val_0_x_V_6_reg_234 <= "X";
    ap_phi_reg_pp0_iter0_buf_val_0_y_V_6_reg_222 <= "X";
    ap_phi_reg_pp0_iter0_tmp_z_V_reg_246 <= "X";

    ap_predicate_op165_write_state4_assign_proc : process(tmp_85_reg_1083_pp0_iter1_reg, tmp_57_i_reg_1087_pp0_iter1_reg)
    begin
                ap_predicate_op165_write_state4 <= ((tmp_57_i_reg_1087_pp0_iter1_reg = ap_const_lv1_1) and (tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op90_read_state3_assign_proc : process(exitcond_flatten_reg_1070, tmp_53_i_reg_1079)
    begin
                ap_predicate_op90_read_state3 <= ((tmp_53_i_reg_1079 = ap_const_lv1_1) and (exitcond_flatten_reg_1070 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    c_fu_422_p2 <= std_logic_vector(unsigned(c_i_mid2_fu_276_p3) + unsigned(ap_const_lv4_1));
    c_i_mid2_fu_276_p3 <= 
        ap_const_lv4_0 when (exitcond2_i2_fu_270_p2(0) = '1') else 
        c_i_reg_211;
    exitcond2_i2_fu_270_p2 <= "1" when (c_i_reg_211 = ap_const_lv4_D) else "0";
    exitcond_flatten_fu_258_p2 <= "1" when (indvar_flatten_reg_200 = ap_const_lv7_41) else "0";

    filtered_gradient_x_s_blk_n_assign_proc : process(filtered_gradient_x_s_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, tmp_85_reg_1083_pp0_iter1_reg, tmp_57_i_reg_1087_pp0_iter1_reg)
    begin
        if ((((tmp_57_i_reg_1087_pp0_iter1_reg = ap_const_lv1_1) and (tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            filtered_gradient_x_s_blk_n <= filtered_gradient_x_s_full_n;
        else 
            filtered_gradient_x_s_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    filtered_gradient_x_s_din_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_85_reg_1083_pp0_iter1_reg, ap_predicate_op165_write_state4, acc_x_V_5_i_reg_1096, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op165_write_state4 = ap_const_boolean_1)) then 
                filtered_gradient_x_s_din <= ap_const_lv32_0;
            elsif ((tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_0)) then 
                filtered_gradient_x_s_din <= acc_x_V_5_i_reg_1096;
            else 
                filtered_gradient_x_s_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            filtered_gradient_x_s_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    filtered_gradient_x_s_write_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_85_reg_1083_pp0_iter1_reg, ap_predicate_op165_write_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op165_write_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            filtered_gradient_x_s_write <= ap_const_logic_1;
        else 
            filtered_gradient_x_s_write <= ap_const_logic_0;
        end if; 
    end process;


    filtered_gradient_y_s_blk_n_assign_proc : process(filtered_gradient_y_s_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, tmp_85_reg_1083_pp0_iter1_reg, tmp_57_i_reg_1087_pp0_iter1_reg)
    begin
        if ((((tmp_57_i_reg_1087_pp0_iter1_reg = ap_const_lv1_1) and (tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            filtered_gradient_y_s_blk_n <= filtered_gradient_y_s_full_n;
        else 
            filtered_gradient_y_s_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    filtered_gradient_y_s_din_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_85_reg_1083_pp0_iter1_reg, ap_predicate_op165_write_state4, acc_y_V_5_i_reg_1101, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op165_write_state4 = ap_const_boolean_1)) then 
                filtered_gradient_y_s_din <= ap_const_lv32_0;
            elsif ((tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_0)) then 
                filtered_gradient_y_s_din <= acc_y_V_5_i_reg_1101;
            else 
                filtered_gradient_y_s_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            filtered_gradient_y_s_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    filtered_gradient_y_s_write_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_85_reg_1083_pp0_iter1_reg, ap_predicate_op165_write_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op165_write_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            filtered_gradient_y_s_write <= ap_const_logic_1;
        else 
            filtered_gradient_y_s_write <= ap_const_logic_0;
        end if; 
    end process;


    filtered_gradient_z_s_blk_n_assign_proc : process(filtered_gradient_z_s_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, tmp_85_reg_1083_pp0_iter1_reg, tmp_57_i_reg_1087_pp0_iter1_reg)
    begin
        if ((((tmp_57_i_reg_1087_pp0_iter1_reg = ap_const_lv1_1) and (tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            filtered_gradient_z_s_blk_n <= filtered_gradient_z_s_full_n;
        else 
            filtered_gradient_z_s_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    filtered_gradient_z_s_din_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_85_reg_1083_pp0_iter1_reg, ap_predicate_op165_write_state4, acc_z_V_5_i_reg_1106, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op165_write_state4 = ap_const_boolean_1)) then 
                filtered_gradient_z_s_din <= ap_const_lv32_0;
            elsif ((tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_0)) then 
                filtered_gradient_z_s_din <= acc_z_V_5_i_reg_1106;
            else 
                filtered_gradient_z_s_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            filtered_gradient_z_s_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    filtered_gradient_z_s_write_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_85_reg_1083_pp0_iter1_reg, ap_predicate_op165_write_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_85_reg_1083_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op165_write_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            filtered_gradient_z_s_write <= ap_const_logic_1;
        else 
            filtered_gradient_z_s_write <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next_fu_264_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_200) + unsigned(ap_const_lv7_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    p_Val2_35_2_i_fu_585_p2 <= std_logic_vector(signed(tmp_200_2_i_fu_573_p1) + signed(tmp_20123_2_cast_i_fu_577_p3));
    p_Val2_35_3_i_fu_685_p2 <= std_logic_vector(unsigned(tmp_92_fu_659_p3) + unsigned(tmp_200_3_i_fu_677_p3));
    p_Val2_35_4_i_fu_781_p2 <= std_logic_vector(unsigned(tmp_200_4_i_fu_765_p3) + unsigned(tmp_20123_4_cast_i_fu_773_p3));
    p_Val2_35_5_i_fu_877_p2 <= std_logic_vector(unsigned(tmp_200_5_i_fu_861_p3) + unsigned(tmp_20123_5_cast_i_fu_869_p3));
    p_Val2_38_2_i_fu_619_p2 <= std_logic_vector(signed(tmp_205_2_i_fu_607_p1) + signed(tmp_20624_2_cast_i_fu_611_p3));
    p_Val2_38_3_i_fu_717_p2 <= std_logic_vector(unsigned(tmp_93_fu_691_p3) + unsigned(tmp_205_3_i_fu_709_p3));
    p_Val2_38_4_i_fu_813_p2 <= std_logic_vector(unsigned(tmp_205_4_i_fu_797_p3) + unsigned(tmp_20624_4_cast_i_fu_805_p3));
    p_Val2_38_5_i_fu_919_p2 <= std_logic_vector(unsigned(tmp_205_5_i_fu_903_p3) + unsigned(tmp_20624_5_cast_i_fu_911_p3));
    p_Val2_41_2_i_fu_653_p2 <= std_logic_vector(signed(tmp_210_2_i_fu_641_p1) + signed(tmp_21125_2_cast_i_fu_645_p3));
    p_Val2_41_3_i_fu_749_p2 <= std_logic_vector(unsigned(tmp_94_fu_723_p3) + unsigned(tmp_210_3_i_fu_741_p3));
    p_Val2_41_4_i_fu_845_p2 <= std_logic_vector(unsigned(tmp_210_4_i_fu_829_p3) + unsigned(tmp_21125_4_cast_i_fu_837_p3));
    p_Val2_41_5_i_fu_961_p2 <= std_logic_vector(unsigned(tmp_210_5_i_fu_945_p3) + unsigned(tmp_21125_5_cast_i_fu_953_p3));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

        tmp_200_2_i_fu_573_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_87_fu_565_p3),51));

    tmp_200_3_i_fu_677_p3 <= (tmp_s_fu_667_p4 & ap_const_lv19_0);
    tmp_200_4_i_fu_765_p3 <= (tmp_37_fu_755_p4 & ap_const_lv19_0);
    tmp_200_5_i_fu_861_p3 <= (tmp_40_fu_851_p4 & ap_const_lv19_0);
    tmp_20123_2_cast_i_fu_577_p3 <= 
        ap_const_lv51_17EC5 when (buf_val_0_x_V_2_fu_102(0) = '1') else 
        ap_const_lv51_0;
    tmp_20123_4_cast_i_fu_773_p3 <= 
        ap_const_lv51_17EC5 when (buf_val_0_x_V_4_fu_110(0) = '1') else 
        ap_const_lv51_0;
    tmp_20123_5_cast_i_fu_869_p3 <= 
        ap_const_lv51_11062 when (buf_val_0_x_V_5_fu_114(0) = '1') else 
        ap_const_lv51_0;
        tmp_205_2_i_fu_607_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_89_fu_599_p3),51));

    tmp_205_3_i_fu_709_p3 <= (tmp_35_fu_699_p4 & ap_const_lv19_0);
    tmp_205_4_i_fu_797_p3 <= (tmp_38_fu_787_p4 & ap_const_lv19_0);
    tmp_205_5_i_fu_903_p3 <= (tmp_41_fu_893_p4 & ap_const_lv19_0);
    tmp_20624_2_cast_i_fu_611_p3 <= 
        ap_const_lv51_17EC5 when (buf_val_0_y_V_2_fu_122(0) = '1') else 
        ap_const_lv51_0;
    tmp_20624_4_cast_i_fu_805_p3 <= 
        ap_const_lv51_17EC5 when (buf_val_0_y_V_4_fu_130(0) = '1') else 
        ap_const_lv51_0;
    tmp_20624_5_cast_i_fu_911_p3 <= 
        ap_const_lv51_11062 when (buf_val_0_y_V_5_fu_134(0) = '1') else 
        ap_const_lv51_0;
        tmp_210_2_i_fu_641_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_91_fu_633_p3),51));

    tmp_210_3_i_fu_741_p3 <= (tmp_36_fu_731_p4 & ap_const_lv19_0);
    tmp_210_4_i_fu_829_p3 <= (tmp_39_fu_819_p4 & ap_const_lv19_0);
    tmp_210_5_i_fu_945_p3 <= (tmp_42_fu_935_p4 & ap_const_lv19_0);
    tmp_21125_2_cast_i_fu_645_p3 <= 
        ap_const_lv51_17EC5 when (buf_val_0_z_V_2_fu_142(0) = '1') else 
        ap_const_lv51_0;
    tmp_21125_4_cast_i_fu_837_p3 <= 
        ap_const_lv51_17EC5 when (buf_val_0_z_V_4_fu_150(0) = '1') else 
        ap_const_lv51_0;
    tmp_21125_5_cast_i_fu_953_p3 <= 
        ap_const_lv51_11062 when (buf_val_0_z_V_5_fu_154(0) = '1') else 
        ap_const_lv51_0;
    tmp_35_fu_699_p4 <= p_Val2_38_2_i_fu_619_p2(50 downto 19);
    tmp_36_fu_731_p4 <= p_Val2_41_2_i_fu_653_p2(50 downto 19);
    tmp_37_fu_755_p4 <= p_Val2_35_3_i_fu_685_p2(50 downto 19);
    tmp_38_fu_787_p4 <= p_Val2_38_3_i_fu_717_p2(50 downto 19);
    tmp_39_fu_819_p4 <= p_Val2_41_3_i_fu_749_p2(50 downto 19);
    tmp_40_fu_851_p4 <= p_Val2_35_4_i_fu_781_p2(50 downto 19);
    tmp_41_fu_893_p4 <= p_Val2_38_4_i_fu_813_p2(50 downto 19);
    tmp_42_fu_935_p4 <= p_Val2_41_4_i_fu_845_p2(50 downto 19);
    tmp_53_i_fu_284_p2 <= "1" when (unsigned(c_i_mid2_fu_276_p3) < unsigned(ap_const_lv4_A)) else "0";
    tmp_57_i_fu_416_p2 <= "1" when (unsigned(c_i_mid2_fu_276_p3) > unsigned(ap_const_lv4_2)) else "0";
    tmp_66_fu_296_p2 <= "1" when (c_i_mid2_fu_276_p3 = ap_const_lv4_E) else "0";
    tmp_67_fu_302_p2 <= (tmp_fu_290_p2 or tmp_66_fu_296_p2);
    tmp_68_fu_308_p2 <= "1" when (c_i_mid2_fu_276_p3 = ap_const_lv4_C) else "0";
    tmp_69_fu_314_p2 <= (tmp_68_fu_308_p2 or tmp_67_fu_302_p2);
    tmp_70_fu_320_p2 <= "1" when (c_i_mid2_fu_276_p3 = ap_const_lv4_B) else "0";
    tmp_71_fu_326_p2 <= (tmp_70_fu_320_p2 or tmp_69_fu_314_p2);
    tmp_72_fu_332_p2 <= "1" when (c_i_mid2_fu_276_p3 = ap_const_lv4_A) else "0";
    tmp_73_fu_338_p2 <= (tmp_72_fu_332_p2 or tmp_71_fu_326_p2);
    tmp_74_fu_344_p2 <= "1" when (c_i_mid2_fu_276_p3 = ap_const_lv4_5) else "0";
    tmp_75_fu_350_p2 <= (tmp_74_fu_344_p2 or tmp_73_fu_338_p2);
    tmp_76_fu_356_p2 <= "1" when (c_i_mid2_fu_276_p3 = ap_const_lv4_4) else "0";
    tmp_77_fu_362_p2 <= (tmp_76_fu_356_p2 or tmp_75_fu_350_p2);
    tmp_78_fu_368_p2 <= "1" when (c_i_mid2_fu_276_p3 = ap_const_lv4_3) else "0";
    tmp_79_fu_374_p2 <= (tmp_78_fu_368_p2 or tmp_77_fu_362_p2);
    tmp_80_fu_380_p2 <= "1" when (c_i_mid2_fu_276_p3 = ap_const_lv4_2) else "0";
    tmp_81_fu_386_p2 <= (tmp_80_fu_380_p2 or tmp_79_fu_374_p2);
    tmp_82_fu_392_p2 <= "1" when (c_i_mid2_fu_276_p3 = ap_const_lv4_1) else "0";
    tmp_83_fu_398_p2 <= (tmp_82_fu_392_p2 or tmp_81_fu_386_p2);
    tmp_84_fu_404_p2 <= "1" when (c_i_mid2_fu_276_p3 = ap_const_lv4_0) else "0";
    tmp_85_fu_410_p2 <= (tmp_84_fu_404_p2 or tmp_83_fu_398_p2);
    tmp_86_fu_557_p3 <= 
        ap_const_lv31_0 when (buf_val_0_x_V_1_fu_98(0) = '1') else 
        ap_const_lv31_0;
    tmp_87_fu_565_p3 <= (tmp_86_fu_557_p3 & ap_const_lv19_0);
    tmp_88_fu_591_p3 <= 
        ap_const_lv31_0 when (buf_val_0_y_V_1_fu_118(0) = '1') else 
        ap_const_lv31_0;
    tmp_89_fu_599_p3 <= (tmp_88_fu_591_p3 & ap_const_lv19_0);
    tmp_90_fu_625_p3 <= 
        ap_const_lv31_0 when (buf_val_0_z_V_1_fu_138(0) = '1') else 
        ap_const_lv31_0;
    tmp_91_fu_633_p3 <= (tmp_90_fu_625_p3 & ap_const_lv19_0);
    tmp_92_fu_659_p3 <= 
        ap_const_lv51_25288 when (buf_val_0_x_V_3_fu_106(0) = '1') else 
        ap_const_lv51_0;
    tmp_93_fu_691_p3 <= 
        ap_const_lv51_25288 when (buf_val_0_y_V_3_fu_126(0) = '1') else 
        ap_const_lv51_0;
    tmp_94_fu_723_p3 <= 
        ap_const_lv51_25288 when (buf_val_0_z_V_3_fu_146(0) = '1') else 
        ap_const_lv51_0;
    tmp_fu_290_p2 <= "1" when (c_i_mid2_fu_276_p3 = ap_const_lv4_F) else "0";
    tmp_s_fu_667_p4 <= p_Val2_35_2_i_fu_585_p2(50 downto 19);

    y_filtered_x_V_blk_n_assign_proc : process(y_filtered_x_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_1070, tmp_53_i_reg_1079)
    begin
        if (((tmp_53_i_reg_1079 = ap_const_lv1_1) and (exitcond_flatten_reg_1070 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            y_filtered_x_V_blk_n <= y_filtered_x_V_empty_n;
        else 
            y_filtered_x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    y_filtered_x_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op90_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op90_read_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            y_filtered_x_V_read <= ap_const_logic_1;
        else 
            y_filtered_x_V_read <= ap_const_logic_0;
        end if; 
    end process;


    y_filtered_y_V_blk_n_assign_proc : process(y_filtered_y_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_1070, tmp_53_i_reg_1079)
    begin
        if (((tmp_53_i_reg_1079 = ap_const_lv1_1) and (exitcond_flatten_reg_1070 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            y_filtered_y_V_blk_n <= y_filtered_y_V_empty_n;
        else 
            y_filtered_y_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    y_filtered_y_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op90_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op90_read_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            y_filtered_y_V_read <= ap_const_logic_1;
        else 
            y_filtered_y_V_read <= ap_const_logic_0;
        end if; 
    end process;


    y_filtered_z_V_blk_n_assign_proc : process(y_filtered_z_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_reg_1070, tmp_53_i_reg_1079)
    begin
        if (((tmp_53_i_reg_1079 = ap_const_lv1_1) and (exitcond_flatten_reg_1070 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            y_filtered_z_V_blk_n <= y_filtered_z_V_empty_n;
        else 
            y_filtered_z_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    y_filtered_z_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op90_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op90_read_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            y_filtered_z_V_read <= ap_const_logic_1;
        else 
            y_filtered_z_V_read <= ap_const_logic_0;
        end if; 
    end process;

end behav;
