// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tensor_weight_x (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        tensor_y_val_V_dout,
        tensor_y_val_V_empty_n,
        tensor_y_val_V_read,
        tensor_val_V_din,
        tensor_val_V_full_n,
        tensor_val_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state6 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [191:0] tensor_y_val_V_dout;
input   tensor_y_val_V_empty_n;
output   tensor_y_val_V_read;
output  [191:0] tensor_val_V_din;
input   tensor_val_V_full_n;
output   tensor_val_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg tensor_y_val_V_read;
reg tensor_val_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    tensor_y_val_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten_reg_1182;
reg   [0:0] tmp_1_i_reg_1191;
reg    tensor_val_V_blk_n;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] sel_tmp7_reg_1195;
reg   [0:0] sel_tmp7_reg_1195_pp0_iter2_reg;
reg   [5:0] indvar_flatten_reg_157;
reg   [3:0] c_i_reg_168;
wire   [0:0] exitcond_flatten_fu_245_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_predicate_op46_read_state3;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten_reg_1182_pp0_iter1_reg;
wire   [5:0] indvar_flatten_next_fu_251_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_1_i_fu_271_p2;
wire   [0:0] sel_tmp7_fu_313_p2;
reg   [0:0] sel_tmp7_reg_1195_pp0_iter1_reg;
wire   [0:0] sel_tmp4_fu_349_p2;
reg   [0:0] sel_tmp4_reg_1199;
reg   [0:0] sel_tmp4_reg_1199_pp0_iter1_reg;
reg   [0:0] sel_tmp4_reg_1199_pp0_iter2_reg;
wire   [3:0] c_fu_355_p2;
wire   [31:0] tmp_val_0_V_2_fu_361_p1;
wire   [50:0] p_Val2_3_2_i_fu_767_p2;
reg   [50:0] p_Val2_3_2_i_reg_1244;
reg   [31:0] tmp_16_reg_1249;
wire   [50:0] p_Val2_3_2_1_i_fu_787_p2;
reg   [50:0] p_Val2_3_2_1_i_reg_1254;
reg   [31:0] tmp_17_reg_1259;
wire   [50:0] p_Val2_3_2_2_i_fu_807_p2;
reg   [50:0] p_Val2_3_2_2_i_reg_1264;
reg   [31:0] tmp_18_reg_1269;
wire   [50:0] p_Val2_3_2_3_i_fu_827_p2;
reg   [50:0] p_Val2_3_2_3_i_reg_1274;
reg   [31:0] tmp_19_reg_1279;
wire   [50:0] p_Val2_3_2_4_i_fu_847_p2;
reg   [50:0] p_Val2_3_2_4_i_reg_1284;
reg   [31:0] tmp_20_reg_1289;
wire   [50:0] p_Val2_3_2_5_i_fu_867_p2;
reg   [50:0] p_Val2_3_2_5_i_reg_1294;
reg   [31:0] tmp_21_reg_1299;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_condition_pp0_exit_iter2_state4;
wire  signed [31:0] ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_s_reg_179;
reg  signed [31:0] ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_s_reg_179;
reg  signed [31:0] ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_s_reg_179;
wire  signed [31:0] ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_1_reg_190;
reg  signed [31:0] ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_1_reg_190;
reg  signed [31:0] ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_1_reg_190;
wire  signed [31:0] ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_2_reg_201;
reg  signed [31:0] ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_2_reg_201;
reg  signed [31:0] ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_2_reg_201;
wire  signed [31:0] ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_3_reg_212;
reg  signed [31:0] ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_3_reg_212;
reg  signed [31:0] ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_3_reg_212;
wire  signed [31:0] ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_4_reg_223;
reg  signed [31:0] ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_4_reg_223;
reg  signed [31:0] ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_4_reg_223;
wire  signed [31:0] ap_phi_reg_pp0_iter0_tmp_val_5_V_3_reg_234;
reg  signed [31:0] ap_phi_reg_pp0_iter1_tmp_val_5_V_3_reg_234;
reg  signed [31:0] ap_phi_reg_pp0_iter2_tmp_val_5_V_3_reg_234;
reg    ap_block_pp0_stage0_01001;
reg   [31:0] tmp_val_0_V_fu_96;
reg   [31:0] tmp_val_1_V_1_fu_100;
reg   [31:0] tmp_val_2_V_1_fu_104;
reg   [31:0] tmp_val_3_V_1_fu_108;
reg   [31:0] tmp_val_4_V_1_fu_112;
reg   [31:0] tmp_val_5_V_fu_116;
reg   [31:0] tmp_val_0_V_1_fu_120;
reg   [31:0] tmp_val_1_V_2_fu_124;
reg   [31:0] tmp_val_2_V_2_fu_128;
reg   [31:0] tmp_val_3_V_2_fu_132;
reg   [31:0] tmp_val_4_V_2_fu_136;
reg   [31:0] tmp_val_5_V_1_fu_140;
wire   [0:0] exitcond7_i2_fu_257_p2;
wire   [3:0] c_i_mid2_fu_263_p3;
wire   [0:0] sel_tmp6_fu_307_p2;
wire   [0:0] sel_tmp3_fu_295_p2;
wire   [0:0] tmp5_fu_319_p2;
wire   [0:0] sel_tmp5_fu_301_p2;
wire   [0:0] sel_tmp_fu_277_p2;
wire   [0:0] sel_tmp2_fu_289_p2;
wire   [0:0] sel_tmp1_fu_283_p2;
wire   [0:0] tmp8_fu_337_p2;
wire   [0:0] tmp7_fu_331_p2;
wire   [0:0] tmp6_fu_343_p2;
wire   [0:0] tmp4_fu_325_p2;
wire  signed [31:0] OP1_V_0_cast_i_fu_499_p0;
wire  signed [31:0] p_Val2_3_0_i_fu_503_p0;
wire  signed [31:0] OP1_V_0_1_cast_i_fu_509_p0;
wire  signed [31:0] p_Val2_3_0_1_i_fu_513_p0;
wire  signed [31:0] OP1_V_0_2_cast_i_fu_519_p0;
wire  signed [31:0] p_Val2_3_0_2_i_fu_523_p0;
wire  signed [31:0] OP1_V_0_3_cast_i_fu_529_p0;
wire  signed [31:0] p_Val2_3_0_3_i_fu_533_p0;
wire  signed [31:0] OP1_V_0_4_cast_i_fu_539_p0;
wire  signed [31:0] p_Val2_3_0_4_i_fu_543_p0;
wire  signed [31:0] OP1_V_0_5_cast_i_fu_549_p0;
wire  signed [31:0] p_Val2_3_0_5_i_fu_553_p0;
wire  signed [31:0] OP1_V_1_cast_i_fu_559_p0;
wire  signed [31:0] p_Val2_3_1_i_fu_563_p0;
wire   [50:0] p_Val2_3_0_i_fu_503_p2;
wire   [31:0] tmp_fu_569_p4;
wire   [50:0] p_Val2_3_1_i_fu_563_p2;
wire   [50:0] tmp_50_1_i_fu_579_p3;
wire  signed [31:0] OP1_V_1_1_cast_i_fu_593_p0;
wire  signed [31:0] p_Val2_3_1_1_i_fu_597_p0;
wire   [50:0] p_Val2_3_0_1_i_fu_513_p2;
wire   [31:0] tmp_s_fu_603_p4;
wire   [50:0] p_Val2_3_1_1_i_fu_597_p2;
wire   [50:0] tmp_50_1_1_i_fu_613_p3;
wire  signed [31:0] OP1_V_1_2_cast_i_fu_627_p0;
wire  signed [31:0] p_Val2_3_1_2_i_fu_631_p0;
wire   [50:0] p_Val2_3_0_2_i_fu_523_p2;
wire   [31:0] tmp_12_fu_637_p4;
wire   [50:0] p_Val2_3_1_2_i_fu_631_p2;
wire   [50:0] tmp_50_1_2_i_fu_647_p3;
wire  signed [31:0] OP1_V_1_3_cast_i_fu_661_p0;
wire  signed [31:0] p_Val2_3_1_3_i_fu_665_p0;
wire   [50:0] p_Val2_3_0_3_i_fu_533_p2;
wire   [31:0] tmp_13_fu_671_p4;
wire   [50:0] p_Val2_3_1_3_i_fu_665_p2;
wire   [50:0] tmp_50_1_3_i_fu_681_p3;
wire  signed [31:0] OP1_V_1_4_cast_i_fu_695_p0;
wire  signed [31:0] p_Val2_3_1_4_i_fu_699_p0;
wire   [50:0] p_Val2_3_0_4_i_fu_543_p2;
wire   [31:0] tmp_14_fu_705_p4;
wire   [50:0] p_Val2_3_1_4_i_fu_699_p2;
wire   [50:0] tmp_50_1_4_i_fu_715_p3;
wire  signed [31:0] OP1_V_1_5_cast_i_fu_729_p0;
wire  signed [31:0] p_Val2_3_1_5_i_fu_733_p0;
wire   [50:0] p_Val2_3_0_5_i_fu_553_p2;
wire   [31:0] tmp_15_fu_739_p4;
wire   [50:0] p_Val2_3_1_5_i_fu_733_p2;
wire   [50:0] tmp_50_1_5_i_fu_749_p3;
wire  signed [31:0] p_Val2_3_2_i_fu_767_p0;
wire   [50:0] p_Val2_4_1_i_fu_587_p2;
wire  signed [31:0] p_Val2_3_2_1_i_fu_787_p0;
wire   [50:0] p_Val2_4_1_1_i_fu_621_p2;
wire  signed [31:0] p_Val2_3_2_2_i_fu_807_p0;
wire   [50:0] p_Val2_4_1_2_i_fu_655_p2;
wire  signed [31:0] p_Val2_3_2_3_i_fu_827_p0;
wire   [50:0] p_Val2_4_1_3_i_fu_689_p2;
wire  signed [31:0] p_Val2_3_2_4_i_fu_847_p0;
wire   [50:0] p_Val2_4_1_4_i_fu_723_p2;
wire  signed [31:0] p_Val2_3_2_5_i_fu_867_p0;
wire   [50:0] p_Val2_4_1_5_i_fu_757_p2;
wire   [50:0] tmp_50_2_i_fu_913_p3;
wire   [50:0] p_Val2_4_2_i_fu_920_p2;
wire   [50:0] tmp_50_2_1_i_fu_935_p3;
wire   [50:0] p_Val2_4_2_1_i_fu_942_p2;
wire   [50:0] tmp_50_2_2_i_fu_957_p3;
wire   [50:0] p_Val2_4_2_2_i_fu_964_p2;
wire   [50:0] tmp_50_2_3_i_fu_979_p3;
wire   [50:0] p_Val2_4_2_3_i_fu_986_p2;
wire   [50:0] tmp_50_2_4_i_fu_1001_p3;
wire   [50:0] p_Val2_4_2_4_i_fu_1008_p2;
wire   [50:0] tmp_50_2_5_i_fu_1023_p3;
wire   [50:0] p_Val2_4_2_5_i_fu_1030_p2;
wire   [31:0] acc_val_5_V_fu_1035_p4;
wire   [31:0] acc_val_4_V_fu_1013_p4;
wire   [31:0] acc_val_3_V_fu_991_p4;
wire   [31:0] acc_val_2_V_fu_969_p4;
wire   [31:0] acc_val_1_V_fu_947_p4;
wire   [31:0] acc_val_0_V_fu_925_p4;
wire   [31:0] acc_val_V_5_i_fu_1045_p3;
wire   [31:0] acc_val_V_4_i_fu_1052_p3;
wire   [31:0] acc_val_V_3_i_fu_1059_p3;
wire   [31:0] acc_val_V_2_i_fu_1066_p3;
wire   [31:0] acc_val_V_1_i_fu_1073_p3;
wire   [31:0] acc_val_V_0_i_fu_1080_p3;
wire    ap_CS_fsm_state6;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_105;
reg    ap_condition_191;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond_flatten_fu_245_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_condition_pp0_exit_iter2_state4) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter2_state4) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_105)) begin
        if (((exitcond_flatten_fu_245_p2 == 1'd0) & (tmp_1_i_fu_271_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_1_reg_190 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_1_reg_190 <= ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_1_reg_190;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_105)) begin
        if (((exitcond_flatten_fu_245_p2 == 1'd0) & (tmp_1_i_fu_271_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_2_reg_201 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_2_reg_201 <= ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_2_reg_201;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_105)) begin
        if (((exitcond_flatten_fu_245_p2 == 1'd0) & (tmp_1_i_fu_271_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_3_reg_212 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_3_reg_212 <= ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_3_reg_212;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_105)) begin
        if (((exitcond_flatten_fu_245_p2 == 1'd0) & (tmp_1_i_fu_271_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_4_reg_223 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_4_reg_223 <= ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_4_reg_223;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_105)) begin
        if (((exitcond_flatten_fu_245_p2 == 1'd0) & (tmp_1_i_fu_271_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_s_reg_179 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_s_reg_179 <= ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_s_reg_179;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_105)) begin
        if (((exitcond_flatten_fu_245_p2 == 1'd0) & (tmp_1_i_fu_271_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_val_5_V_3_reg_234 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_val_5_V_3_reg_234 <= ap_phi_reg_pp0_iter0_tmp_val_5_V_3_reg_234;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_191)) begin
        if (((tmp_1_i_reg_1191 == 1'd1) & (exitcond_flatten_reg_1182 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_1_reg_190 <= {{tensor_y_val_V_dout[127:96]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_1_reg_190 <= ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_1_reg_190;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_191)) begin
        if (((tmp_1_i_reg_1191 == 1'd1) & (exitcond_flatten_reg_1182 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_2_reg_201 <= {{tensor_y_val_V_dout[95:64]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_2_reg_201 <= ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_2_reg_201;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_191)) begin
        if (((tmp_1_i_reg_1191 == 1'd1) & (exitcond_flatten_reg_1182 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_3_reg_212 <= {{tensor_y_val_V_dout[63:32]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_3_reg_212 <= ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_3_reg_212;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_191)) begin
        if (((tmp_1_i_reg_1191 == 1'd1) & (exitcond_flatten_reg_1182 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_4_reg_223 <= tmp_val_0_V_2_fu_361_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_4_reg_223 <= ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_4_reg_223;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_191)) begin
        if (((tmp_1_i_reg_1191 == 1'd1) & (exitcond_flatten_reg_1182 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_s_reg_179 <= {{tensor_y_val_V_dout[159:128]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_s_reg_179 <= ap_phi_reg_pp0_iter1_buf_val_0_val_V_2_s_reg_179;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_191)) begin
        if (((tmp_1_i_reg_1191 == 1'd1) & (exitcond_flatten_reg_1182 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_tmp_val_5_V_3_reg_234 <= {{tensor_y_val_V_dout[191:160]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_tmp_val_5_V_3_reg_234 <= ap_phi_reg_pp0_iter1_tmp_val_5_V_3_reg_234;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_245_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        c_i_reg_168 <= c_fu_355_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        c_i_reg_168 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_245_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_reg_157 <= indvar_flatten_next_fu_251_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_157 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten_reg_1182 <= exitcond_flatten_fu_245_p2;
        exitcond_flatten_reg_1182_pp0_iter1_reg <= exitcond_flatten_reg_1182;
        sel_tmp4_reg_1199_pp0_iter1_reg <= sel_tmp4_reg_1199;
        sel_tmp7_reg_1195_pp0_iter1_reg <= sel_tmp7_reg_1195;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1182_pp0_iter1_reg == 1'd0) & (sel_tmp4_reg_1199_pp0_iter1_reg == 1'd0))) begin
        p_Val2_3_2_1_i_reg_1254[50 : 1] <= p_Val2_3_2_1_i_fu_787_p2[50 : 1];
        p_Val2_3_2_2_i_reg_1264[50 : 1] <= p_Val2_3_2_2_i_fu_807_p2[50 : 1];
        p_Val2_3_2_3_i_reg_1274[50 : 1] <= p_Val2_3_2_3_i_fu_827_p2[50 : 1];
        p_Val2_3_2_4_i_reg_1284[50 : 1] <= p_Val2_3_2_4_i_fu_847_p2[50 : 1];
        p_Val2_3_2_5_i_reg_1294[50 : 1] <= p_Val2_3_2_5_i_fu_867_p2[50 : 1];
        p_Val2_3_2_i_reg_1244[50 : 1] <= p_Val2_3_2_i_fu_767_p2[50 : 1];
        tmp_16_reg_1249 <= {{p_Val2_4_1_i_fu_587_p2[50:19]}};
        tmp_17_reg_1259 <= {{p_Val2_4_1_1_i_fu_621_p2[50:19]}};
        tmp_18_reg_1269 <= {{p_Val2_4_1_2_i_fu_655_p2[50:19]}};
        tmp_19_reg_1279 <= {{p_Val2_4_1_3_i_fu_689_p2[50:19]}};
        tmp_20_reg_1289 <= {{p_Val2_4_1_4_i_fu_723_p2[50:19]}};
        tmp_21_reg_1299 <= {{p_Val2_4_1_5_i_fu_757_p2[50:19]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_245_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sel_tmp4_reg_1199 <= sel_tmp4_fu_349_p2;
        sel_tmp7_reg_1195 <= sel_tmp7_fu_313_p2;
        tmp_1_i_reg_1191 <= tmp_1_i_fu_271_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        sel_tmp4_reg_1199_pp0_iter2_reg <= sel_tmp4_reg_1199_pp0_iter1_reg;
        sel_tmp7_reg_1195_pp0_iter2_reg <= sel_tmp7_reg_1195_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_1182_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tmp_val_0_V_1_fu_120 <= ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_4_reg_223;
        tmp_val_1_V_2_fu_124 <= ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_3_reg_212;
        tmp_val_2_V_2_fu_128 <= ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_2_reg_201;
        tmp_val_3_V_2_fu_132 <= ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_1_reg_190;
        tmp_val_4_V_2_fu_136 <= ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_s_reg_179;
        tmp_val_5_V_1_fu_140 <= ap_phi_reg_pp0_iter2_tmp_val_5_V_3_reg_234;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tmp_val_0_V_fu_96 <= tmp_val_0_V_1_fu_120;
        tmp_val_1_V_1_fu_100 <= tmp_val_1_V_2_fu_124;
        tmp_val_2_V_1_fu_104 <= tmp_val_2_V_2_fu_128;
        tmp_val_3_V_1_fu_108 <= tmp_val_3_V_2_fu_132;
        tmp_val_4_V_1_fu_112 <= tmp_val_4_V_2_fu_136;
        tmp_val_5_V_fu_116 <= tmp_val_5_V_1_fu_140;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_condition_pp0_exit_iter2_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((sel_tmp7_reg_1195_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        tensor_val_V_blk_n = tensor_val_V_full_n;
    end else begin
        tensor_val_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (sel_tmp7_reg_1195_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        tensor_val_V_write = 1'b1;
    end else begin
        tensor_val_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_1_i_reg_1191 == 1'd1) & (exitcond_flatten_reg_1182 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tensor_y_val_V_blk_n = tensor_y_val_V_empty_n;
    end else begin
        tensor_y_val_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op46_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tensor_y_val_V_read = 1'b1;
    end else begin
        tensor_y_val_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP1_V_0_1_cast_i_fu_509_p0 = tmp_val_1_V_1_fu_100;

assign OP1_V_0_2_cast_i_fu_519_p0 = tmp_val_2_V_1_fu_104;

assign OP1_V_0_3_cast_i_fu_529_p0 = tmp_val_3_V_1_fu_108;

assign OP1_V_0_4_cast_i_fu_539_p0 = tmp_val_4_V_1_fu_112;

assign OP1_V_0_5_cast_i_fu_549_p0 = tmp_val_5_V_fu_116;

assign OP1_V_0_cast_i_fu_499_p0 = tmp_val_0_V_fu_96;

assign OP1_V_1_1_cast_i_fu_593_p0 = tmp_val_1_V_2_fu_124;

assign OP1_V_1_2_cast_i_fu_627_p0 = tmp_val_2_V_2_fu_128;

assign OP1_V_1_3_cast_i_fu_661_p0 = tmp_val_3_V_2_fu_132;

assign OP1_V_1_4_cast_i_fu_695_p0 = tmp_val_4_V_2_fu_136;

assign OP1_V_1_5_cast_i_fu_729_p0 = tmp_val_5_V_1_fu_140;

assign OP1_V_1_cast_i_fu_559_p0 = tmp_val_0_V_1_fu_120;

assign acc_val_0_V_fu_925_p4 = {{p_Val2_4_2_i_fu_920_p2[50:19]}};

assign acc_val_1_V_fu_947_p4 = {{p_Val2_4_2_1_i_fu_942_p2[50:19]}};

assign acc_val_2_V_fu_969_p4 = {{p_Val2_4_2_2_i_fu_964_p2[50:19]}};

assign acc_val_3_V_fu_991_p4 = {{p_Val2_4_2_3_i_fu_986_p2[50:19]}};

assign acc_val_4_V_fu_1013_p4 = {{p_Val2_4_2_4_i_fu_1008_p2[50:19]}};

assign acc_val_5_V_fu_1035_p4 = {{p_Val2_4_2_5_i_fu_1030_p2[50:19]}};

assign acc_val_V_0_i_fu_1080_p3 = ((sel_tmp4_reg_1199_pp0_iter2_reg[0:0] === 1'b1) ? 32'd0 : acc_val_0_V_fu_925_p4);

assign acc_val_V_1_i_fu_1073_p3 = ((sel_tmp4_reg_1199_pp0_iter2_reg[0:0] === 1'b1) ? 32'd0 : acc_val_1_V_fu_947_p4);

assign acc_val_V_2_i_fu_1066_p3 = ((sel_tmp4_reg_1199_pp0_iter2_reg[0:0] === 1'b1) ? 32'd0 : acc_val_2_V_fu_969_p4);

assign acc_val_V_3_i_fu_1059_p3 = ((sel_tmp4_reg_1199_pp0_iter2_reg[0:0] === 1'b1) ? 32'd0 : acc_val_3_V_fu_991_p4);

assign acc_val_V_4_i_fu_1052_p3 = ((sel_tmp4_reg_1199_pp0_iter2_reg[0:0] === 1'b1) ? 32'd0 : acc_val_4_V_fu_1013_p4);

assign acc_val_V_5_i_fu_1045_p3 = ((sel_tmp4_reg_1199_pp0_iter2_reg[0:0] === 1'b1) ? 32'd0 : acc_val_5_V_fu_1035_p4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((sel_tmp7_reg_1195_pp0_iter2_reg == 1'd0) & (tensor_val_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((tensor_y_val_V_empty_n == 1'b0) & (ap_predicate_op46_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((sel_tmp7_reg_1195_pp0_iter2_reg == 1'd0) & (tensor_val_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((tensor_y_val_V_empty_n == 1'b0) & (ap_predicate_op46_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((sel_tmp7_reg_1195_pp0_iter2_reg == 1'd0) & (tensor_val_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((tensor_y_val_V_empty_n == 1'b0) & (ap_predicate_op46_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((tensor_y_val_V_empty_n == 1'b0) & (ap_predicate_op46_read_state3 == 1'b1));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter3 = ((sel_tmp7_reg_1195_pp0_iter2_reg == 1'd0) & (tensor_val_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_105 = ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_191 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_1_reg_190 = 'bx;

assign ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_2_reg_201 = 'bx;

assign ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_3_reg_212 = 'bx;

assign ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_4_reg_223 = 'bx;

assign ap_phi_reg_pp0_iter0_buf_val_0_val_V_2_s_reg_179 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_val_5_V_3_reg_234 = 'bx;

always @ (*) begin
    ap_predicate_op46_read_state3 = ((tmp_1_i_reg_1191 == 1'd1) & (exitcond_flatten_reg_1182 == 1'd0));
end

assign c_fu_355_p2 = (c_i_mid2_fu_263_p3 + 4'd1);

assign c_i_mid2_fu_263_p3 = ((exitcond7_i2_fu_257_p2[0:0] === 1'b1) ? 4'd0 : c_i_reg_168);

assign exitcond7_i2_fu_257_p2 = ((c_i_reg_168 == 4'd11) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_245_p2 = ((indvar_flatten_reg_157 == 6'd55) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_251_p2 = (indvar_flatten_reg_157 + 6'd1);

assign p_Val2_3_0_1_i_fu_513_p0 = OP1_V_0_1_cast_i_fu_509_p0;

assign p_Val2_3_0_1_i_fu_513_p2 = ($signed(p_Val2_3_0_1_i_fu_513_p0) * $signed('h2982A));

assign p_Val2_3_0_2_i_fu_523_p0 = OP1_V_0_2_cast_i_fu_519_p0;

assign p_Val2_3_0_2_i_fu_523_p2 = ($signed(p_Val2_3_0_2_i_fu_523_p0) * $signed('h2982A));

assign p_Val2_3_0_3_i_fu_533_p0 = OP1_V_0_3_cast_i_fu_529_p0;

assign p_Val2_3_0_3_i_fu_533_p2 = ($signed(p_Val2_3_0_3_i_fu_533_p0) * $signed('h2982A));

assign p_Val2_3_0_4_i_fu_543_p0 = OP1_V_0_4_cast_i_fu_539_p0;

assign p_Val2_3_0_4_i_fu_543_p2 = ($signed(p_Val2_3_0_4_i_fu_543_p0) * $signed('h2982A));

assign p_Val2_3_0_5_i_fu_553_p0 = OP1_V_0_5_cast_i_fu_549_p0;

assign p_Val2_3_0_5_i_fu_553_p2 = ($signed(p_Val2_3_0_5_i_fu_553_p0) * $signed('h2982A));

assign p_Val2_3_0_i_fu_503_p0 = OP1_V_0_cast_i_fu_499_p0;

assign p_Val2_3_0_i_fu_503_p2 = ($signed(p_Val2_3_0_i_fu_503_p0) * $signed('h2982A));

assign p_Val2_3_1_1_i_fu_597_p0 = OP1_V_1_1_cast_i_fu_593_p0;

assign p_Val2_3_1_1_i_fu_597_p2 = ($signed(p_Val2_3_1_1_i_fu_597_p0) * $signed('h2CF76));

assign p_Val2_3_1_2_i_fu_631_p0 = OP1_V_1_2_cast_i_fu_627_p0;

assign p_Val2_3_1_2_i_fu_631_p2 = ($signed(p_Val2_3_1_2_i_fu_631_p0) * $signed('h2CF76));

assign p_Val2_3_1_3_i_fu_665_p0 = OP1_V_1_3_cast_i_fu_661_p0;

assign p_Val2_3_1_3_i_fu_665_p2 = ($signed(p_Val2_3_1_3_i_fu_665_p0) * $signed('h2CF76));

assign p_Val2_3_1_4_i_fu_699_p0 = OP1_V_1_4_cast_i_fu_695_p0;

assign p_Val2_3_1_4_i_fu_699_p2 = ($signed(p_Val2_3_1_4_i_fu_699_p0) * $signed('h2CF76));

assign p_Val2_3_1_5_i_fu_733_p0 = OP1_V_1_5_cast_i_fu_729_p0;

assign p_Val2_3_1_5_i_fu_733_p2 = ($signed(p_Val2_3_1_5_i_fu_733_p0) * $signed('h2CF76));

assign p_Val2_3_1_i_fu_563_p0 = OP1_V_1_cast_i_fu_559_p0;

assign p_Val2_3_1_i_fu_563_p2 = ($signed(p_Val2_3_1_i_fu_563_p0) * $signed('h2CF76));

assign p_Val2_3_2_1_i_fu_787_p0 = ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_3_reg_212;

assign p_Val2_3_2_1_i_fu_787_p2 = ($signed(p_Val2_3_2_1_i_fu_787_p0) * $signed('h2982A));

assign p_Val2_3_2_2_i_fu_807_p0 = ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_2_reg_201;

assign p_Val2_3_2_2_i_fu_807_p2 = ($signed(p_Val2_3_2_2_i_fu_807_p0) * $signed('h2982A));

assign p_Val2_3_2_3_i_fu_827_p0 = ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_1_reg_190;

assign p_Val2_3_2_3_i_fu_827_p2 = ($signed(p_Val2_3_2_3_i_fu_827_p0) * $signed('h2982A));

assign p_Val2_3_2_4_i_fu_847_p0 = ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_s_reg_179;

assign p_Val2_3_2_4_i_fu_847_p2 = ($signed(p_Val2_3_2_4_i_fu_847_p0) * $signed('h2982A));

assign p_Val2_3_2_5_i_fu_867_p0 = ap_phi_reg_pp0_iter2_tmp_val_5_V_3_reg_234;

assign p_Val2_3_2_5_i_fu_867_p2 = ($signed(p_Val2_3_2_5_i_fu_867_p0) * $signed('h2982A));

assign p_Val2_3_2_i_fu_767_p0 = ap_phi_reg_pp0_iter2_buf_val_0_val_V_2_4_reg_223;

assign p_Val2_3_2_i_fu_767_p2 = ($signed(p_Val2_3_2_i_fu_767_p0) * $signed('h2982A));

assign p_Val2_4_1_1_i_fu_621_p2 = (p_Val2_3_1_1_i_fu_597_p2 + tmp_50_1_1_i_fu_613_p3);

assign p_Val2_4_1_2_i_fu_655_p2 = (p_Val2_3_1_2_i_fu_631_p2 + tmp_50_1_2_i_fu_647_p3);

assign p_Val2_4_1_3_i_fu_689_p2 = (p_Val2_3_1_3_i_fu_665_p2 + tmp_50_1_3_i_fu_681_p3);

assign p_Val2_4_1_4_i_fu_723_p2 = (p_Val2_3_1_4_i_fu_699_p2 + tmp_50_1_4_i_fu_715_p3);

assign p_Val2_4_1_5_i_fu_757_p2 = (p_Val2_3_1_5_i_fu_733_p2 + tmp_50_1_5_i_fu_749_p3);

assign p_Val2_4_1_i_fu_587_p2 = (p_Val2_3_1_i_fu_563_p2 + tmp_50_1_i_fu_579_p3);

assign p_Val2_4_2_1_i_fu_942_p2 = (p_Val2_3_2_1_i_reg_1254 + tmp_50_2_1_i_fu_935_p3);

assign p_Val2_4_2_2_i_fu_964_p2 = (p_Val2_3_2_2_i_reg_1264 + tmp_50_2_2_i_fu_957_p3);

assign p_Val2_4_2_3_i_fu_986_p2 = (p_Val2_3_2_3_i_reg_1274 + tmp_50_2_3_i_fu_979_p3);

assign p_Val2_4_2_4_i_fu_1008_p2 = (p_Val2_3_2_4_i_reg_1284 + tmp_50_2_4_i_fu_1001_p3);

assign p_Val2_4_2_5_i_fu_1030_p2 = (p_Val2_3_2_5_i_reg_1294 + tmp_50_2_5_i_fu_1023_p3);

assign p_Val2_4_2_i_fu_920_p2 = (p_Val2_3_2_i_reg_1244 + tmp_50_2_i_fu_913_p3);

assign sel_tmp1_fu_283_p2 = ((c_i_mid2_fu_263_p3 == 4'd14) ? 1'b1 : 1'b0);

assign sel_tmp2_fu_289_p2 = ((c_i_mid2_fu_263_p3 == 4'd13) ? 1'b1 : 1'b0);

assign sel_tmp3_fu_295_p2 = ((c_i_mid2_fu_263_p3 == 4'd12) ? 1'b1 : 1'b0);

assign sel_tmp4_fu_349_p2 = (tmp6_fu_343_p2 | tmp4_fu_325_p2);

assign sel_tmp5_fu_301_p2 = ((c_i_mid2_fu_263_p3 == 4'd10) ? 1'b1 : 1'b0);

assign sel_tmp6_fu_307_p2 = ((c_i_mid2_fu_263_p3 == 4'd1) ? 1'b1 : 1'b0);

assign sel_tmp7_fu_313_p2 = ((c_i_mid2_fu_263_p3 == 4'd0) ? 1'b1 : 1'b0);

assign sel_tmp_fu_277_p2 = ((c_i_mid2_fu_263_p3 == 4'd15) ? 1'b1 : 1'b0);

assign tensor_val_V_din = {{{{{{acc_val_V_5_i_fu_1045_p3}, {acc_val_V_4_i_fu_1052_p3}}, {acc_val_V_3_i_fu_1059_p3}}, {acc_val_V_2_i_fu_1066_p3}}, {acc_val_V_1_i_fu_1073_p3}}, {acc_val_V_0_i_fu_1080_p3}};

assign tmp4_fu_325_p2 = (tmp5_fu_319_p2 | sel_tmp5_fu_301_p2);

assign tmp5_fu_319_p2 = (sel_tmp6_fu_307_p2 | sel_tmp3_fu_295_p2);

assign tmp6_fu_343_p2 = (tmp8_fu_337_p2 | tmp7_fu_331_p2);

assign tmp7_fu_331_p2 = (sel_tmp_fu_277_p2 | sel_tmp2_fu_289_p2);

assign tmp8_fu_337_p2 = (sel_tmp7_fu_313_p2 | sel_tmp1_fu_283_p2);

assign tmp_12_fu_637_p4 = {{p_Val2_3_0_2_i_fu_523_p2[50:19]}};

assign tmp_13_fu_671_p4 = {{p_Val2_3_0_3_i_fu_533_p2[50:19]}};

assign tmp_14_fu_705_p4 = {{p_Val2_3_0_4_i_fu_543_p2[50:19]}};

assign tmp_15_fu_739_p4 = {{p_Val2_3_0_5_i_fu_553_p2[50:19]}};

assign tmp_1_i_fu_271_p2 = ((c_i_mid2_fu_263_p3 < 4'd10) ? 1'b1 : 1'b0);

assign tmp_50_1_1_i_fu_613_p3 = {{tmp_s_fu_603_p4}, {19'd0}};

assign tmp_50_1_2_i_fu_647_p3 = {{tmp_12_fu_637_p4}, {19'd0}};

assign tmp_50_1_3_i_fu_681_p3 = {{tmp_13_fu_671_p4}, {19'd0}};

assign tmp_50_1_4_i_fu_715_p3 = {{tmp_14_fu_705_p4}, {19'd0}};

assign tmp_50_1_5_i_fu_749_p3 = {{tmp_15_fu_739_p4}, {19'd0}};

assign tmp_50_1_i_fu_579_p3 = {{tmp_fu_569_p4}, {19'd0}};

assign tmp_50_2_1_i_fu_935_p3 = {{tmp_17_reg_1259}, {19'd0}};

assign tmp_50_2_2_i_fu_957_p3 = {{tmp_18_reg_1269}, {19'd0}};

assign tmp_50_2_3_i_fu_979_p3 = {{tmp_19_reg_1279}, {19'd0}};

assign tmp_50_2_4_i_fu_1001_p3 = {{tmp_20_reg_1289}, {19'd0}};

assign tmp_50_2_5_i_fu_1023_p3 = {{tmp_21_reg_1299}, {19'd0}};

assign tmp_50_2_i_fu_913_p3 = {{tmp_16_reg_1249}, {19'd0}};

assign tmp_fu_569_p4 = {{p_Val2_3_0_i_fu_503_p2[50:19]}};

assign tmp_s_fu_603_p4 = {{p_Val2_3_0_1_i_fu_513_p2[50:19]}};

assign tmp_val_0_V_2_fu_361_p1 = tensor_y_val_V_dout[31:0];

always @ (posedge ap_clk) begin
    p_Val2_3_2_i_reg_1244[0] <= 1'b0;
    p_Val2_3_2_1_i_reg_1254[0] <= 1'b0;
    p_Val2_3_2_2_i_reg_1264[0] <= 1'b0;
    p_Val2_3_2_3_i_reg_1274[0] <= 1'b0;
    p_Val2_3_2_4_i_reg_1284[0] <= 1'b0;
    p_Val2_3_2_5_i_reg_1294[0] <= 1'b0;
end

endmodule //tensor_weight_x
