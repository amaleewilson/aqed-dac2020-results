// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gradient_weight_y (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        gradient_x_V_dout,
        gradient_x_V_empty_n,
        gradient_x_V_read,
        gradient_y_V_dout,
        gradient_y_V_empty_n,
        gradient_y_V_read,
        gradient_z_V_dout,
        gradient_z_V_empty_n,
        gradient_z_V_read,
        y_filtered_x_V_din,
        y_filtered_x_V_full_n,
        y_filtered_x_V_write,
        y_filtered_y_V_din,
        y_filtered_y_V_full_n,
        y_filtered_y_V_write,
        y_filtered_z_V_din,
        y_filtered_z_V_full_n,
        y_filtered_z_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state4 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] gradient_x_V_dout;
input   gradient_x_V_empty_n;
output   gradient_x_V_read;
input  [31:0] gradient_y_V_dout;
input   gradient_y_V_empty_n;
output   gradient_y_V_read;
input  [31:0] gradient_z_V_dout;
input   gradient_z_V_empty_n;
output   gradient_z_V_read;
output  [0:0] y_filtered_x_V_din;
input   y_filtered_x_V_full_n;
output   y_filtered_x_V_write;
output  [0:0] y_filtered_y_V_din;
input   y_filtered_y_V_full_n;
output   y_filtered_y_V_write;
output  [0:0] y_filtered_z_V_din;
input   y_filtered_z_V_full_n;
output   y_filtered_z_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg gradient_x_V_read;
reg gradient_y_V_read;
reg gradient_z_V_read;
reg y_filtered_x_V_write;
reg y_filtered_y_V_write;
reg y_filtered_z_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    gradient_x_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten_reg_650;
reg   [0:0] tmp_i_mid2_reg_659;
reg    gradient_y_V_blk_n;
reg    gradient_z_V_blk_n;
reg    y_filtered_x_V_blk_n;
reg   [0:0] tmp_47_i_mid2_reg_663;
reg    y_filtered_y_V_blk_n;
reg    y_filtered_z_V_blk_n;
reg   [6:0] indvar_flatten_reg_473;
reg   [3:0] r_i_reg_484;
reg   [3:0] col_assign_reg_495;
wire   [0:0] exitcond_flatten_fu_545_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_predicate_op119_read_state3;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [6:0] indvar_flatten_next_fu_551_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_i_mid2_fu_589_p3;
wire   [0:0] tmp_47_i_mid2_fu_609_p3;
wire   [3:0] r_i_mid2_fu_617_p3;
wire   [63:0] tmp_50_i_fu_625_p1;
reg   [63:0] tmp_50_i_reg_672;
reg   [3:0] buf_val_2_x_V_addr_reg_679;
reg   [3:0] buf_val_2_y_V_addr_reg_685;
reg   [3:0] buf_val_2_z_V_addr_reg_691;
reg   [3:0] buf_val_3_x_V_addr_reg_697;
reg   [3:0] buf_val_3_y_V_addr_reg_703;
reg   [3:0] buf_val_3_z_V_addr_reg_709;
reg   [3:0] buf_val_4_x_V_addr_reg_715;
reg   [3:0] buf_val_4_y_V_addr_reg_721;
reg   [3:0] buf_val_4_z_V_addr_reg_727;
reg   [3:0] buf_val_5_x_V_addr_reg_733;
reg   [3:0] buf_val_5_y_V_addr_reg_739;
reg   [3:0] buf_val_5_z_V_addr_reg_745;
reg   [3:0] buf_val_6_x_V_addr_reg_751;
reg   [3:0] buf_val_6_y_V_addr_reg_757;
reg   [3:0] buf_val_6_z_V_addr_reg_763;
wire   [3:0] c_fu_644_p2;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire   [3:0] buf_val_1_x_V_address0;
reg    buf_val_1_x_V_ce0;
reg    buf_val_1_x_V_we0;
wire   [3:0] buf_val_2_x_V_address0;
reg    buf_val_2_x_V_ce0;
wire   [31:0] buf_val_2_x_V_q0;
reg    buf_val_2_x_V_ce1;
reg    buf_val_2_x_V_we1;
wire   [3:0] buf_val_3_x_V_address0;
reg    buf_val_3_x_V_ce0;
wire   [31:0] buf_val_3_x_V_q0;
reg    buf_val_3_x_V_ce1;
reg    buf_val_3_x_V_we1;
wire   [3:0] buf_val_4_x_V_address0;
reg    buf_val_4_x_V_ce0;
wire   [31:0] buf_val_4_x_V_q0;
reg    buf_val_4_x_V_ce1;
reg    buf_val_4_x_V_we1;
wire   [3:0] buf_val_5_x_V_address0;
reg    buf_val_5_x_V_ce0;
wire   [31:0] buf_val_5_x_V_q0;
reg    buf_val_5_x_V_ce1;
reg    buf_val_5_x_V_we1;
wire   [3:0] buf_val_6_x_V_address0;
reg    buf_val_6_x_V_ce0;
wire   [31:0] buf_val_6_x_V_q0;
reg    buf_val_6_x_V_ce1;
reg    buf_val_6_x_V_we1;
wire   [3:0] buf_val_1_y_V_address0;
reg    buf_val_1_y_V_ce0;
reg    buf_val_1_y_V_we0;
wire   [3:0] buf_val_2_y_V_address0;
reg    buf_val_2_y_V_ce0;
wire   [31:0] buf_val_2_y_V_q0;
reg    buf_val_2_y_V_ce1;
reg    buf_val_2_y_V_we1;
wire   [3:0] buf_val_3_y_V_address0;
reg    buf_val_3_y_V_ce0;
wire   [31:0] buf_val_3_y_V_q0;
reg    buf_val_3_y_V_ce1;
reg    buf_val_3_y_V_we1;
wire   [3:0] buf_val_4_y_V_address0;
reg    buf_val_4_y_V_ce0;
wire   [31:0] buf_val_4_y_V_q0;
reg    buf_val_4_y_V_ce1;
reg    buf_val_4_y_V_we1;
wire   [3:0] buf_val_5_y_V_address0;
reg    buf_val_5_y_V_ce0;
wire   [31:0] buf_val_5_y_V_q0;
reg    buf_val_5_y_V_ce1;
reg    buf_val_5_y_V_we1;
wire   [3:0] buf_val_6_y_V_address0;
reg    buf_val_6_y_V_ce0;
wire   [31:0] buf_val_6_y_V_q0;
reg    buf_val_6_y_V_ce1;
reg    buf_val_6_y_V_we1;
wire   [3:0] buf_val_1_z_V_address0;
reg    buf_val_1_z_V_ce0;
reg    buf_val_1_z_V_we0;
wire   [3:0] buf_val_2_z_V_address0;
reg    buf_val_2_z_V_ce0;
wire   [31:0] buf_val_2_z_V_q0;
reg    buf_val_2_z_V_ce1;
reg    buf_val_2_z_V_we1;
wire   [3:0] buf_val_3_z_V_address0;
reg    buf_val_3_z_V_ce0;
wire   [31:0] buf_val_3_z_V_q0;
reg    buf_val_3_z_V_ce1;
reg    buf_val_3_z_V_we1;
wire   [3:0] buf_val_4_z_V_address0;
reg    buf_val_4_z_V_ce0;
wire   [31:0] buf_val_4_z_V_q0;
reg    buf_val_4_z_V_ce1;
reg    buf_val_4_z_V_we1;
wire   [3:0] buf_val_5_z_V_address0;
reg    buf_val_5_z_V_ce0;
wire   [31:0] buf_val_5_z_V_q0;
reg    buf_val_5_z_V_ce1;
reg    buf_val_5_z_V_we1;
wire   [3:0] buf_val_6_z_V_address0;
reg    buf_val_6_z_V_ce0;
wire   [31:0] buf_val_6_z_V_q0;
reg    buf_val_6_z_V_ce1;
reg    buf_val_6_z_V_we1;
reg   [31:0] ap_phi_mux_storemerge3_phi_fu_510_p4;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge3_reg_506;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge3_reg_506;
reg   [31:0] ap_phi_mux_storemerge2_phi_fu_523_p4;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge2_reg_519;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge2_reg_519;
reg   [31:0] ap_phi_mux_storemerge_phi_fu_536_p4;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge_reg_532;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge_reg_532;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] exitcond1_i_fu_557_p2;
wire   [3:0] r6_fu_571_p2;
wire   [0:0] tmp_i_mid1_fu_577_p2;
wire   [0:0] tmp_i8_fu_583_p2;
wire   [0:0] tmp_47_i_mid1_fu_597_p2;
wire   [0:0] tmp_47_i7_fu_603_p2;
wire   [3:0] col_assign_mid2_fu_563_p3;
wire    ap_CS_fsm_state4;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_137;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

gradient_weight_yg8j #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
buf_val_1_x_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_1_x_V_address0),
    .ce0(buf_val_1_x_V_ce0),
    .we0(buf_val_1_x_V_we0),
    .d0(buf_val_2_x_V_q0)
);

gradient_weight_yhbi #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
buf_val_2_x_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_2_x_V_address0),
    .ce0(buf_val_2_x_V_ce0),
    .q0(buf_val_2_x_V_q0),
    .address1(buf_val_2_x_V_addr_reg_679),
    .ce1(buf_val_2_x_V_ce1),
    .we1(buf_val_2_x_V_we1),
    .d1(buf_val_3_x_V_q0)
);

gradient_weight_yhbi #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
buf_val_3_x_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_3_x_V_address0),
    .ce0(buf_val_3_x_V_ce0),
    .q0(buf_val_3_x_V_q0),
    .address1(buf_val_3_x_V_addr_reg_697),
    .ce1(buf_val_3_x_V_ce1),
    .we1(buf_val_3_x_V_we1),
    .d1(buf_val_4_x_V_q0)
);

gradient_weight_yhbi #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
buf_val_4_x_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_4_x_V_address0),
    .ce0(buf_val_4_x_V_ce0),
    .q0(buf_val_4_x_V_q0),
    .address1(buf_val_4_x_V_addr_reg_715),
    .ce1(buf_val_4_x_V_ce1),
    .we1(buf_val_4_x_V_we1),
    .d1(buf_val_5_x_V_q0)
);

gradient_weight_yhbi #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
buf_val_5_x_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_5_x_V_address0),
    .ce0(buf_val_5_x_V_ce0),
    .q0(buf_val_5_x_V_q0),
    .address1(buf_val_5_x_V_addr_reg_733),
    .ce1(buf_val_5_x_V_ce1),
    .we1(buf_val_5_x_V_we1),
    .d1(buf_val_6_x_V_q0)
);

gradient_weight_yhbi #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
buf_val_6_x_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_6_x_V_address0),
    .ce0(buf_val_6_x_V_ce0),
    .q0(buf_val_6_x_V_q0),
    .address1(buf_val_6_x_V_addr_reg_751),
    .ce1(buf_val_6_x_V_ce1),
    .we1(buf_val_6_x_V_we1),
    .d1(ap_phi_mux_storemerge3_phi_fu_510_p4)
);

gradient_weight_yg8j #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
buf_val_1_y_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_1_y_V_address0),
    .ce0(buf_val_1_y_V_ce0),
    .we0(buf_val_1_y_V_we0),
    .d0(buf_val_2_y_V_q0)
);

gradient_weight_yhbi #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
buf_val_2_y_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_2_y_V_address0),
    .ce0(buf_val_2_y_V_ce0),
    .q0(buf_val_2_y_V_q0),
    .address1(buf_val_2_y_V_addr_reg_685),
    .ce1(buf_val_2_y_V_ce1),
    .we1(buf_val_2_y_V_we1),
    .d1(buf_val_3_y_V_q0)
);

gradient_weight_yhbi #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
buf_val_3_y_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_3_y_V_address0),
    .ce0(buf_val_3_y_V_ce0),
    .q0(buf_val_3_y_V_q0),
    .address1(buf_val_3_y_V_addr_reg_703),
    .ce1(buf_val_3_y_V_ce1),
    .we1(buf_val_3_y_V_we1),
    .d1(buf_val_4_y_V_q0)
);

gradient_weight_yhbi #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
buf_val_4_y_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_4_y_V_address0),
    .ce0(buf_val_4_y_V_ce0),
    .q0(buf_val_4_y_V_q0),
    .address1(buf_val_4_y_V_addr_reg_721),
    .ce1(buf_val_4_y_V_ce1),
    .we1(buf_val_4_y_V_we1),
    .d1(buf_val_5_y_V_q0)
);

gradient_weight_yhbi #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
buf_val_5_y_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_5_y_V_address0),
    .ce0(buf_val_5_y_V_ce0),
    .q0(buf_val_5_y_V_q0),
    .address1(buf_val_5_y_V_addr_reg_739),
    .ce1(buf_val_5_y_V_ce1),
    .we1(buf_val_5_y_V_we1),
    .d1(buf_val_6_y_V_q0)
);

gradient_weight_yhbi #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
buf_val_6_y_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_6_y_V_address0),
    .ce0(buf_val_6_y_V_ce0),
    .q0(buf_val_6_y_V_q0),
    .address1(buf_val_6_y_V_addr_reg_757),
    .ce1(buf_val_6_y_V_ce1),
    .we1(buf_val_6_y_V_we1),
    .d1(ap_phi_mux_storemerge2_phi_fu_523_p4)
);

gradient_weight_yg8j #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
buf_val_1_z_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_1_z_V_address0),
    .ce0(buf_val_1_z_V_ce0),
    .we0(buf_val_1_z_V_we0),
    .d0(buf_val_2_z_V_q0)
);

gradient_weight_yhbi #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
buf_val_2_z_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_2_z_V_address0),
    .ce0(buf_val_2_z_V_ce0),
    .q0(buf_val_2_z_V_q0),
    .address1(buf_val_2_z_V_addr_reg_691),
    .ce1(buf_val_2_z_V_ce1),
    .we1(buf_val_2_z_V_we1),
    .d1(buf_val_3_z_V_q0)
);

gradient_weight_yhbi #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
buf_val_3_z_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_3_z_V_address0),
    .ce0(buf_val_3_z_V_ce0),
    .q0(buf_val_3_z_V_q0),
    .address1(buf_val_3_z_V_addr_reg_709),
    .ce1(buf_val_3_z_V_ce1),
    .we1(buf_val_3_z_V_we1),
    .d1(buf_val_4_z_V_q0)
);

gradient_weight_yhbi #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
buf_val_4_z_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_4_z_V_address0),
    .ce0(buf_val_4_z_V_ce0),
    .q0(buf_val_4_z_V_q0),
    .address1(buf_val_4_z_V_addr_reg_727),
    .ce1(buf_val_4_z_V_ce1),
    .we1(buf_val_4_z_V_we1),
    .d1(buf_val_5_z_V_q0)
);

gradient_weight_yhbi #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
buf_val_5_z_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_5_z_V_address0),
    .ce0(buf_val_5_z_V_ce0),
    .q0(buf_val_5_z_V_q0),
    .address1(buf_val_5_z_V_addr_reg_745),
    .ce1(buf_val_5_z_V_ce1),
    .we1(buf_val_5_z_V_we1),
    .d1(buf_val_6_z_V_q0)
);

gradient_weight_yhbi #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
buf_val_6_z_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_6_z_V_address0),
    .ce0(buf_val_6_z_V_ce0),
    .q0(buf_val_6_z_V_q0),
    .address1(buf_val_6_z_V_addr_reg_763),
    .ce1(buf_val_6_z_V_ce1),
    .we1(buf_val_6_z_V_we1),
    .d1(ap_phi_mux_storemerge_phi_fu_536_p4)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_137)) begin
        if (((tmp_i_mid2_fu_589_p3 == 1'd0) & (exitcond_flatten_fu_545_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_storemerge2_reg_519 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_storemerge2_reg_519 <= ap_phi_reg_pp0_iter0_storemerge2_reg_519;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_137)) begin
        if (((tmp_i_mid2_fu_589_p3 == 1'd0) & (exitcond_flatten_fu_545_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_storemerge3_reg_506 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_storemerge3_reg_506 <= ap_phi_reg_pp0_iter0_storemerge3_reg_506;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_137)) begin
        if (((tmp_i_mid2_fu_589_p3 == 1'd0) & (exitcond_flatten_fu_545_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_storemerge_reg_532 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_storemerge_reg_532 <= ap_phi_reg_pp0_iter0_storemerge_reg_532;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_545_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_assign_reg_495 <= c_fu_644_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        col_assign_reg_495 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_545_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_473 <= indvar_flatten_next_fu_551_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_473 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_545_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_i_reg_484 <= r_i_mid2_fu_617_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        r_i_reg_484 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_545_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_2_x_V_addr_reg_679 <= tmp_50_i_fu_625_p1;
        buf_val_2_y_V_addr_reg_685 <= tmp_50_i_fu_625_p1;
        buf_val_2_z_V_addr_reg_691 <= tmp_50_i_fu_625_p1;
        buf_val_3_x_V_addr_reg_697 <= tmp_50_i_fu_625_p1;
        buf_val_3_y_V_addr_reg_703 <= tmp_50_i_fu_625_p1;
        buf_val_3_z_V_addr_reg_709 <= tmp_50_i_fu_625_p1;
        buf_val_4_x_V_addr_reg_715 <= tmp_50_i_fu_625_p1;
        buf_val_4_y_V_addr_reg_721 <= tmp_50_i_fu_625_p1;
        buf_val_4_z_V_addr_reg_727 <= tmp_50_i_fu_625_p1;
        buf_val_5_x_V_addr_reg_733 <= tmp_50_i_fu_625_p1;
        buf_val_5_y_V_addr_reg_739 <= tmp_50_i_fu_625_p1;
        buf_val_5_z_V_addr_reg_745 <= tmp_50_i_fu_625_p1;
        buf_val_6_x_V_addr_reg_751 <= tmp_50_i_fu_625_p1;
        buf_val_6_y_V_addr_reg_757 <= tmp_50_i_fu_625_p1;
        buf_val_6_z_V_addr_reg_763 <= tmp_50_i_fu_625_p1;
        tmp_47_i_mid2_reg_663 <= tmp_47_i_mid2_fu_609_p3;
        tmp_50_i_reg_672[3 : 0] <= tmp_50_i_fu_625_p1[3 : 0];
        tmp_i_mid2_reg_659 <= tmp_i_mid2_fu_589_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten_reg_650 <= exitcond_flatten_fu_545_p2;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_545_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_i_mid2_reg_659 == 1'd1) & (exitcond_flatten_reg_650 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_storemerge2_phi_fu_523_p4 = gradient_y_V_dout;
    end else begin
        ap_phi_mux_storemerge2_phi_fu_523_p4 = ap_phi_reg_pp0_iter1_storemerge2_reg_519;
    end
end

always @ (*) begin
    if (((tmp_i_mid2_reg_659 == 1'd1) & (exitcond_flatten_reg_650 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_storemerge3_phi_fu_510_p4 = gradient_x_V_dout;
    end else begin
        ap_phi_mux_storemerge3_phi_fu_510_p4 = ap_phi_reg_pp0_iter1_storemerge3_reg_506;
    end
end

always @ (*) begin
    if (((tmp_i_mid2_reg_659 == 1'd1) & (exitcond_flatten_reg_650 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_storemerge_phi_fu_536_p4 = gradient_z_V_dout;
    end else begin
        ap_phi_mux_storemerge_phi_fu_536_p4 = ap_phi_reg_pp0_iter1_storemerge_reg_532;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_1_x_V_ce0 = 1'b1;
    end else begin
        buf_val_1_x_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_650 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_1_x_V_we0 = 1'b1;
    end else begin
        buf_val_1_x_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_1_y_V_ce0 = 1'b1;
    end else begin
        buf_val_1_y_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_650 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_1_y_V_we0 = 1'b1;
    end else begin
        buf_val_1_y_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_1_z_V_ce0 = 1'b1;
    end else begin
        buf_val_1_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_650 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_1_z_V_we0 = 1'b1;
    end else begin
        buf_val_1_z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_2_x_V_ce0 = 1'b1;
    end else begin
        buf_val_2_x_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_2_x_V_ce1 = 1'b1;
    end else begin
        buf_val_2_x_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_650 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_2_x_V_we1 = 1'b1;
    end else begin
        buf_val_2_x_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_2_y_V_ce0 = 1'b1;
    end else begin
        buf_val_2_y_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_2_y_V_ce1 = 1'b1;
    end else begin
        buf_val_2_y_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_650 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_2_y_V_we1 = 1'b1;
    end else begin
        buf_val_2_y_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_2_z_V_ce0 = 1'b1;
    end else begin
        buf_val_2_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_2_z_V_ce1 = 1'b1;
    end else begin
        buf_val_2_z_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_650 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_2_z_V_we1 = 1'b1;
    end else begin
        buf_val_2_z_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_3_x_V_ce0 = 1'b1;
    end else begin
        buf_val_3_x_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_3_x_V_ce1 = 1'b1;
    end else begin
        buf_val_3_x_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_650 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_3_x_V_we1 = 1'b1;
    end else begin
        buf_val_3_x_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_3_y_V_ce0 = 1'b1;
    end else begin
        buf_val_3_y_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_3_y_V_ce1 = 1'b1;
    end else begin
        buf_val_3_y_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_650 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_3_y_V_we1 = 1'b1;
    end else begin
        buf_val_3_y_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_3_z_V_ce0 = 1'b1;
    end else begin
        buf_val_3_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_3_z_V_ce1 = 1'b1;
    end else begin
        buf_val_3_z_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_650 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_3_z_V_we1 = 1'b1;
    end else begin
        buf_val_3_z_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_4_x_V_ce0 = 1'b1;
    end else begin
        buf_val_4_x_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_4_x_V_ce1 = 1'b1;
    end else begin
        buf_val_4_x_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_650 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_4_x_V_we1 = 1'b1;
    end else begin
        buf_val_4_x_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_4_y_V_ce0 = 1'b1;
    end else begin
        buf_val_4_y_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_4_y_V_ce1 = 1'b1;
    end else begin
        buf_val_4_y_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_650 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_4_y_V_we1 = 1'b1;
    end else begin
        buf_val_4_y_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_4_z_V_ce0 = 1'b1;
    end else begin
        buf_val_4_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_4_z_V_ce1 = 1'b1;
    end else begin
        buf_val_4_z_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_650 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_4_z_V_we1 = 1'b1;
    end else begin
        buf_val_4_z_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_5_x_V_ce0 = 1'b1;
    end else begin
        buf_val_5_x_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_5_x_V_ce1 = 1'b1;
    end else begin
        buf_val_5_x_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_650 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_5_x_V_we1 = 1'b1;
    end else begin
        buf_val_5_x_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_5_y_V_ce0 = 1'b1;
    end else begin
        buf_val_5_y_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_5_y_V_ce1 = 1'b1;
    end else begin
        buf_val_5_y_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_650 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_5_y_V_we1 = 1'b1;
    end else begin
        buf_val_5_y_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_5_z_V_ce0 = 1'b1;
    end else begin
        buf_val_5_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_5_z_V_ce1 = 1'b1;
    end else begin
        buf_val_5_z_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_650 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_5_z_V_we1 = 1'b1;
    end else begin
        buf_val_5_z_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_6_x_V_ce0 = 1'b1;
    end else begin
        buf_val_6_x_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_6_x_V_ce1 = 1'b1;
    end else begin
        buf_val_6_x_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_6_x_V_we1 = 1'b1;
    end else begin
        buf_val_6_x_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_6_y_V_ce0 = 1'b1;
    end else begin
        buf_val_6_y_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_6_y_V_ce1 = 1'b1;
    end else begin
        buf_val_6_y_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_6_y_V_we1 = 1'b1;
    end else begin
        buf_val_6_y_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_6_z_V_ce0 = 1'b1;
    end else begin
        buf_val_6_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_6_z_V_ce1 = 1'b1;
    end else begin
        buf_val_6_z_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_6_z_V_we1 = 1'b1;
    end else begin
        buf_val_6_z_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_i_mid2_reg_659 == 1'd1) & (exitcond_flatten_reg_650 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gradient_x_V_blk_n = gradient_x_V_empty_n;
    end else begin
        gradient_x_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op119_read_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gradient_x_V_read = 1'b1;
    end else begin
        gradient_x_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_i_mid2_reg_659 == 1'd1) & (exitcond_flatten_reg_650 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gradient_y_V_blk_n = gradient_y_V_empty_n;
    end else begin
        gradient_y_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op119_read_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gradient_y_V_read = 1'b1;
    end else begin
        gradient_y_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_i_mid2_reg_659 == 1'd1) & (exitcond_flatten_reg_650 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gradient_z_V_blk_n = gradient_z_V_empty_n;
    end else begin
        gradient_z_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op119_read_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gradient_z_V_read = 1'b1;
    end else begin
        gradient_z_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_47_i_mid2_reg_663 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_filtered_x_V_blk_n = y_filtered_x_V_full_n;
    end else begin
        y_filtered_x_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_47_i_mid2_reg_663 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        y_filtered_x_V_write = 1'b1;
    end else begin
        y_filtered_x_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_47_i_mid2_reg_663 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_filtered_y_V_blk_n = y_filtered_y_V_full_n;
    end else begin
        y_filtered_y_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_47_i_mid2_reg_663 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        y_filtered_y_V_write = 1'b1;
    end else begin
        y_filtered_y_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_47_i_mid2_reg_663 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_filtered_z_V_blk_n = y_filtered_z_V_full_n;
    end else begin
        y_filtered_z_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_47_i_mid2_reg_663 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        y_filtered_z_V_write = 1'b1;
    end else begin
        y_filtered_z_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((exitcond_flatten_fu_545_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((exitcond_flatten_fu_545_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_47_i_mid2_reg_663 == 1'd1) & (y_filtered_z_V_full_n == 1'b0)) | ((tmp_47_i_mid2_reg_663 == 1'd1) & (y_filtered_y_V_full_n == 1'b0)) | ((tmp_47_i_mid2_reg_663 == 1'd1) & (y_filtered_x_V_full_n == 1'b0)) | ((gradient_z_V_empty_n == 1'b0) & (ap_predicate_op119_read_state3 == 1'b1)) | ((gradient_y_V_empty_n == 1'b0) & (ap_predicate_op119_read_state3 == 1'b1)) | ((gradient_x_V_empty_n == 1'b0) & (ap_predicate_op119_read_state3 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_47_i_mid2_reg_663 == 1'd1) & (y_filtered_z_V_full_n == 1'b0)) | ((tmp_47_i_mid2_reg_663 == 1'd1) & (y_filtered_y_V_full_n == 1'b0)) | ((tmp_47_i_mid2_reg_663 == 1'd1) & (y_filtered_x_V_full_n == 1'b0)) | ((gradient_z_V_empty_n == 1'b0) & (ap_predicate_op119_read_state3 == 1'b1)) | ((gradient_y_V_empty_n == 1'b0) & (ap_predicate_op119_read_state3 == 1'b1)) | ((gradient_x_V_empty_n == 1'b0) & (ap_predicate_op119_read_state3 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_47_i_mid2_reg_663 == 1'd1) & (y_filtered_z_V_full_n == 1'b0)) | ((tmp_47_i_mid2_reg_663 == 1'd1) & (y_filtered_y_V_full_n == 1'b0)) | ((tmp_47_i_mid2_reg_663 == 1'd1) & (y_filtered_x_V_full_n == 1'b0)) | ((gradient_z_V_empty_n == 1'b0) & (ap_predicate_op119_read_state3 == 1'b1)) | ((gradient_y_V_empty_n == 1'b0) & (ap_predicate_op119_read_state3 == 1'b1)) | ((gradient_x_V_empty_n == 1'b0) & (ap_predicate_op119_read_state3 == 1'b1))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((tmp_47_i_mid2_reg_663 == 1'd1) & (y_filtered_z_V_full_n == 1'b0)) | ((tmp_47_i_mid2_reg_663 == 1'd1) & (y_filtered_y_V_full_n == 1'b0)) | ((tmp_47_i_mid2_reg_663 == 1'd1) & (y_filtered_x_V_full_n == 1'b0)) | ((gradient_z_V_empty_n == 1'b0) & (ap_predicate_op119_read_state3 == 1'b1)) | ((gradient_y_V_empty_n == 1'b0) & (ap_predicate_op119_read_state3 == 1'b1)) | ((gradient_x_V_empty_n == 1'b0) & (ap_predicate_op119_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_condition_137 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_storemerge2_reg_519 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge3_reg_506 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge_reg_532 = 'bx;

always @ (*) begin
    ap_predicate_op119_read_state3 = ((tmp_i_mid2_reg_659 == 1'd1) & (exitcond_flatten_reg_650 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign buf_val_1_x_V_address0 = tmp_50_i_reg_672;

assign buf_val_1_y_V_address0 = tmp_50_i_reg_672;

assign buf_val_1_z_V_address0 = tmp_50_i_reg_672;

assign buf_val_2_x_V_address0 = tmp_50_i_fu_625_p1;

assign buf_val_2_y_V_address0 = tmp_50_i_fu_625_p1;

assign buf_val_2_z_V_address0 = tmp_50_i_fu_625_p1;

assign buf_val_3_x_V_address0 = tmp_50_i_fu_625_p1;

assign buf_val_3_y_V_address0 = tmp_50_i_fu_625_p1;

assign buf_val_3_z_V_address0 = tmp_50_i_fu_625_p1;

assign buf_val_4_x_V_address0 = tmp_50_i_fu_625_p1;

assign buf_val_4_y_V_address0 = tmp_50_i_fu_625_p1;

assign buf_val_4_z_V_address0 = tmp_50_i_fu_625_p1;

assign buf_val_5_x_V_address0 = tmp_50_i_fu_625_p1;

assign buf_val_5_y_V_address0 = tmp_50_i_fu_625_p1;

assign buf_val_5_z_V_address0 = tmp_50_i_fu_625_p1;

assign buf_val_6_x_V_address0 = tmp_50_i_fu_625_p1;

assign buf_val_6_y_V_address0 = tmp_50_i_fu_625_p1;

assign buf_val_6_z_V_address0 = tmp_50_i_fu_625_p1;

assign c_fu_644_p2 = (col_assign_mid2_fu_563_p3 + 4'd1);

assign col_assign_mid2_fu_563_p3 = ((exitcond1_i_fu_557_p2[0:0] === 1'b1) ? 4'd0 : col_assign_reg_495);

assign exitcond1_i_fu_557_p2 = ((col_assign_reg_495 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_545_p2 = ((indvar_flatten_reg_473 == 7'd80) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_551_p2 = (indvar_flatten_reg_473 + 7'd1);

assign r6_fu_571_p2 = (r_i_reg_484 + 4'd1);

assign r_i_mid2_fu_617_p3 = ((exitcond1_i_fu_557_p2[0:0] === 1'b1) ? r6_fu_571_p2 : r_i_reg_484);

assign start_out = real_start;

assign tmp_47_i7_fu_603_p2 = ((r_i_reg_484 > 4'd2) ? 1'b1 : 1'b0);

assign tmp_47_i_mid1_fu_597_p2 = ((r6_fu_571_p2 > 4'd2) ? 1'b1 : 1'b0);

assign tmp_47_i_mid2_fu_609_p3 = ((exitcond1_i_fu_557_p2[0:0] === 1'b1) ? tmp_47_i_mid1_fu_597_p2 : tmp_47_i7_fu_603_p2);

assign tmp_50_i_fu_625_p1 = col_assign_mid2_fu_563_p3;

assign tmp_i8_fu_583_p2 = ((r_i_reg_484 < 4'd5) ? 1'b1 : 1'b0);

assign tmp_i_mid1_fu_577_p2 = ((r6_fu_571_p2 < 4'd5) ? 1'b1 : 1'b0);

assign tmp_i_mid2_fu_589_p3 = ((exitcond1_i_fu_557_p2[0:0] === 1'b1) ? tmp_i_mid1_fu_577_p2 : tmp_i8_fu_583_p2);

assign y_filtered_x_V_din = 1'd0;

assign y_filtered_y_V_din = 1'd0;

assign y_filtered_z_V_din = 1'd0;

always @ (posedge ap_clk) begin
    tmp_50_i_reg_672[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //gradient_weight_y
