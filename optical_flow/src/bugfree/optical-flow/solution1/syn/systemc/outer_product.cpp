// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "outer_product.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic outer_product::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic outer_product::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> outer_product::ap_ST_fsm_state1 = "1";
const sc_lv<3> outer_product::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> outer_product::ap_ST_fsm_state5 = "100";
const bool outer_product::ap_const_boolean_1 = true;
const sc_lv<32> outer_product::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> outer_product::ap_const_lv32_1 = "1";
const bool outer_product::ap_const_boolean_0 = false;
const sc_lv<1> outer_product::ap_const_lv1_0 = "0";
const sc_lv<1> outer_product::ap_const_lv1_1 = "1";
const sc_lv<6> outer_product::ap_const_lv6_0 = "000000";
const sc_lv<6> outer_product::ap_const_lv6_32 = "110010";
const sc_lv<6> outer_product::ap_const_lv6_1 = "1";
const sc_lv<32> outer_product::ap_const_lv32_E = "1110";
const sc_lv<32> outer_product::ap_const_lv32_1F = "11111";
const sc_lv<32> outer_product::ap_const_lv32_5 = "101";
const sc_lv<32> outer_product::ap_const_lv32_23 = "100011";
const sc_lv<32> outer_product::ap_const_lv32_2 = "10";

outer_product::outer_product(sc_module_name name) : sc_module(name), mVcdFile(0) {
    optical_flow_mul_yd2_U39 = new optical_flow_mul_yd2<1,1,18,18,36>("optical_flow_mul_yd2_U39");
    optical_flow_mul_yd2_U39->din0(p_Val2_3_fu_235_p0);
    optical_flow_mul_yd2_U39->din1(p_Val2_3_fu_235_p1);
    optical_flow_mul_yd2_U39->dout(p_Val2_3_fu_235_p2);
    optical_flow_mul_yd2_U40 = new optical_flow_mul_yd2<1,1,18,18,36>("optical_flow_mul_yd2_U40");
    optical_flow_mul_yd2_U40->din0(p_Val2_4_fu_242_p0);
    optical_flow_mul_yd2_U40->din1(p_Val2_4_fu_242_p1);
    optical_flow_mul_yd2_U40->dout(p_Val2_4_fu_242_p2);
    optical_flow_mul_yd2_U41 = new optical_flow_mul_yd2<1,1,18,18,36>("optical_flow_mul_yd2_U41");
    optical_flow_mul_yd2_U41->din0(p_Val2_5_fu_249_p0);
    optical_flow_mul_yd2_U41->din1(p_Val2_5_fu_249_p1);
    optical_flow_mul_yd2_U41->dout(p_Val2_5_fu_249_p2);
    optical_flow_mul_yd2_U42 = new optical_flow_mul_yd2<1,1,18,18,36>("optical_flow_mul_yd2_U42");
    optical_flow_mul_yd2_U42->din0(p_Val2_6_fu_256_p0);
    optical_flow_mul_yd2_U42->din1(p_Val2_6_fu_256_p1);
    optical_flow_mul_yd2_U42->dout(p_Val2_6_fu_256_p2);
    optical_flow_mul_yd2_U43 = new optical_flow_mul_yd2<1,1,18,18,36>("optical_flow_mul_yd2_U43");
    optical_flow_mul_yd2_U43->din0(p_Val2_7_fu_263_p0);
    optical_flow_mul_yd2_U43->din1(p_Val2_7_fu_263_p1);
    optical_flow_mul_yd2_U43->dout(p_Val2_7_fu_263_p2);
    optical_flow_mul_yd2_U44 = new optical_flow_mul_yd2<1,1,18,18,36>("optical_flow_mul_yd2_U44");
    optical_flow_mul_yd2_U44->din0(p_Val2_8_fu_270_p0);
    optical_flow_mul_yd2_U44->din1(p_Val2_8_fu_270_p1);
    optical_flow_mul_yd2_U44->dout(p_Val2_8_fu_270_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_OP1_V_1_cast_i_fu_151_p1);
    sensitive << ( tmp_40_i_fu_118_p4 );

    SC_METHOD(thread_OP1_V_2_cast_i_fu_164_p1);
    sensitive << ( tmp_42_i_fu_128_p4 );

    SC_METHOD(thread_OP1_V_cast_i_fu_138_p1);
    sensitive << ( tmp_38_i_fu_108_p4 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( filtered_gradient_x_s_empty_n );
    sensitive << ( filtered_gradient_y_s_empty_n );
    sensitive << ( filtered_gradient_z_s_empty_n );
    sensitive << ( out_product_val_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_277 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_277_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( filtered_gradient_x_s_empty_n );
    sensitive << ( filtered_gradient_y_s_empty_n );
    sensitive << ( filtered_gradient_z_s_empty_n );
    sensitive << ( out_product_val_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_277 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_277_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( filtered_gradient_x_s_empty_n );
    sensitive << ( filtered_gradient_y_s_empty_n );
    sensitive << ( filtered_gradient_z_s_empty_n );
    sensitive << ( out_product_val_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_277 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_277_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( filtered_gradient_x_s_empty_n );
    sensitive << ( filtered_gradient_y_s_empty_n );
    sensitive << ( filtered_gradient_z_s_empty_n );
    sensitive << ( exitcond_flatten_reg_277 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);
    sensitive << ( out_product_val_V_full_n );
    sensitive << ( exitcond_flatten_reg_277_pp0_iter1_reg );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_96_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_exitcond_flatten_fu_96_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_85 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_filtered_gradient_x_s_blk_n);
    sensitive << ( filtered_gradient_x_s_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_277 );

    SC_METHOD(thread_filtered_gradient_x_s_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_277 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_filtered_gradient_y_s_blk_n);
    sensitive << ( filtered_gradient_y_s_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_277 );

    SC_METHOD(thread_filtered_gradient_y_s_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_277 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_filtered_gradient_z_s_blk_n);
    sensitive << ( filtered_gradient_z_s_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_277 );

    SC_METHOD(thread_filtered_gradient_z_s_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_277 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_indvar_flatten_next_fu_102_p2);
    sensitive << ( indvar_flatten_reg_85 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_out_product_val_V_blk_n);
    sensitive << ( out_product_val_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_277_pp0_iter1_reg );

    SC_METHOD(thread_out_product_val_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_277_pp0_iter1_reg );
    sensitive << ( tmp_10_reg_311 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( tmp_9_fu_216_p1 );
    sensitive << ( tmp_3_fu_213_p1 );
    sensitive << ( tmp_8_fu_210_p1 );
    sensitive << ( tmp_5_fu_207_p1 );
    sensitive << ( tmp_2_fu_204_p1 );

    SC_METHOD(thread_out_product_val_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_reg_277_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_p_Val2_3_fu_235_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( OP1_V_cast_i_fu_138_p1 );

    SC_METHOD(thread_p_Val2_3_fu_235_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( OP1_V_cast_i_fu_138_p1 );

    SC_METHOD(thread_p_Val2_4_fu_242_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( OP1_V_1_cast_i_fu_151_p1 );

    SC_METHOD(thread_p_Val2_4_fu_242_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( OP1_V_1_cast_i_fu_151_p1 );

    SC_METHOD(thread_p_Val2_5_fu_249_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( OP1_V_2_cast_i_fu_164_p1 );

    SC_METHOD(thread_p_Val2_5_fu_249_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( OP1_V_2_cast_i_fu_164_p1 );

    SC_METHOD(thread_p_Val2_6_fu_256_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( OP1_V_cast_i_fu_138_p1 );

    SC_METHOD(thread_p_Val2_6_fu_256_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( OP1_V_1_cast_i_fu_151_p1 );

    SC_METHOD(thread_p_Val2_7_fu_263_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( OP1_V_cast_i_fu_138_p1 );

    SC_METHOD(thread_p_Val2_7_fu_263_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( OP1_V_2_cast_i_fu_164_p1 );

    SC_METHOD(thread_p_Val2_8_fu_270_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( OP1_V_1_cast_i_fu_151_p1 );

    SC_METHOD(thread_p_Val2_8_fu_270_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( OP1_V_2_cast_i_fu_164_p1 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp_2_fu_204_p1);
    sensitive << ( tmp_1_reg_286 );

    SC_METHOD(thread_tmp_38_i_fu_108_p4);
    sensitive << ( filtered_gradient_x_s_dout );

    SC_METHOD(thread_tmp_3_fu_213_p1);
    sensitive << ( tmp_s_reg_301 );

    SC_METHOD(thread_tmp_40_i_fu_118_p4);
    sensitive << ( filtered_gradient_y_s_dout );

    SC_METHOD(thread_tmp_42_i_fu_128_p4);
    sensitive << ( filtered_gradient_z_s_dout );

    SC_METHOD(thread_tmp_5_fu_207_p1);
    sensitive << ( tmp_4_reg_291 );

    SC_METHOD(thread_tmp_8_fu_210_p1);
    sensitive << ( tmp_7_reg_296 );

    SC_METHOD(thread_tmp_9_fu_216_p1);
    sensitive << ( tmp_6_reg_306 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_fu_96_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "outer_product_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, filtered_gradient_x_s_dout, "(port)filtered_gradient_x_s_dout");
    sc_trace(mVcdFile, filtered_gradient_x_s_empty_n, "(port)filtered_gradient_x_s_empty_n");
    sc_trace(mVcdFile, filtered_gradient_x_s_read, "(port)filtered_gradient_x_s_read");
    sc_trace(mVcdFile, filtered_gradient_y_s_dout, "(port)filtered_gradient_y_s_dout");
    sc_trace(mVcdFile, filtered_gradient_y_s_empty_n, "(port)filtered_gradient_y_s_empty_n");
    sc_trace(mVcdFile, filtered_gradient_y_s_read, "(port)filtered_gradient_y_s_read");
    sc_trace(mVcdFile, filtered_gradient_z_s_dout, "(port)filtered_gradient_z_s_dout");
    sc_trace(mVcdFile, filtered_gradient_z_s_empty_n, "(port)filtered_gradient_z_s_empty_n");
    sc_trace(mVcdFile, filtered_gradient_z_s_read, "(port)filtered_gradient_z_s_read");
    sc_trace(mVcdFile, out_product_val_V_din, "(port)out_product_val_V_din");
    sc_trace(mVcdFile, out_product_val_V_full_n, "(port)out_product_val_V_full_n");
    sc_trace(mVcdFile, out_product_val_V_write, "(port)out_product_val_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, filtered_gradient_x_s_blk_n, "filtered_gradient_x_s_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_flatten_reg_277, "exitcond_flatten_reg_277");
    sc_trace(mVcdFile, filtered_gradient_y_s_blk_n, "filtered_gradient_y_s_blk_n");
    sc_trace(mVcdFile, filtered_gradient_z_s_blk_n, "filtered_gradient_z_s_blk_n");
    sc_trace(mVcdFile, out_product_val_V_blk_n, "out_product_val_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, exitcond_flatten_reg_277_pp0_iter1_reg, "exitcond_flatten_reg_277_pp0_iter1_reg");
    sc_trace(mVcdFile, indvar_flatten_reg_85, "indvar_flatten_reg_85");
    sc_trace(mVcdFile, exitcond_flatten_fu_96_p2, "exitcond_flatten_fu_96_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, indvar_flatten_next_fu_102_p2, "indvar_flatten_next_fu_102_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_1_reg_286, "tmp_1_reg_286");
    sc_trace(mVcdFile, tmp_4_reg_291, "tmp_4_reg_291");
    sc_trace(mVcdFile, tmp_7_reg_296, "tmp_7_reg_296");
    sc_trace(mVcdFile, tmp_s_reg_301, "tmp_s_reg_301");
    sc_trace(mVcdFile, tmp_6_reg_306, "tmp_6_reg_306");
    sc_trace(mVcdFile, tmp_10_reg_311, "tmp_10_reg_311");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_38_i_fu_108_p4, "tmp_38_i_fu_108_p4");
    sc_trace(mVcdFile, p_Val2_3_fu_235_p2, "p_Val2_3_fu_235_p2");
    sc_trace(mVcdFile, tmp_40_i_fu_118_p4, "tmp_40_i_fu_118_p4");
    sc_trace(mVcdFile, p_Val2_4_fu_242_p2, "p_Val2_4_fu_242_p2");
    sc_trace(mVcdFile, tmp_42_i_fu_128_p4, "tmp_42_i_fu_128_p4");
    sc_trace(mVcdFile, p_Val2_5_fu_249_p2, "p_Val2_5_fu_249_p2");
    sc_trace(mVcdFile, p_Val2_6_fu_256_p2, "p_Val2_6_fu_256_p2");
    sc_trace(mVcdFile, p_Val2_7_fu_263_p2, "p_Val2_7_fu_263_p2");
    sc_trace(mVcdFile, p_Val2_8_fu_270_p2, "p_Val2_8_fu_270_p2");
    sc_trace(mVcdFile, tmp_9_fu_216_p1, "tmp_9_fu_216_p1");
    sc_trace(mVcdFile, tmp_3_fu_213_p1, "tmp_3_fu_213_p1");
    sc_trace(mVcdFile, tmp_8_fu_210_p1, "tmp_8_fu_210_p1");
    sc_trace(mVcdFile, tmp_5_fu_207_p1, "tmp_5_fu_207_p1");
    sc_trace(mVcdFile, tmp_2_fu_204_p1, "tmp_2_fu_204_p1");
    sc_trace(mVcdFile, p_Val2_3_fu_235_p0, "p_Val2_3_fu_235_p0");
    sc_trace(mVcdFile, OP1_V_cast_i_fu_138_p1, "OP1_V_cast_i_fu_138_p1");
    sc_trace(mVcdFile, p_Val2_3_fu_235_p1, "p_Val2_3_fu_235_p1");
    sc_trace(mVcdFile, p_Val2_4_fu_242_p0, "p_Val2_4_fu_242_p0");
    sc_trace(mVcdFile, OP1_V_1_cast_i_fu_151_p1, "OP1_V_1_cast_i_fu_151_p1");
    sc_trace(mVcdFile, p_Val2_4_fu_242_p1, "p_Val2_4_fu_242_p1");
    sc_trace(mVcdFile, p_Val2_5_fu_249_p0, "p_Val2_5_fu_249_p0");
    sc_trace(mVcdFile, OP1_V_2_cast_i_fu_164_p1, "OP1_V_2_cast_i_fu_164_p1");
    sc_trace(mVcdFile, p_Val2_5_fu_249_p1, "p_Val2_5_fu_249_p1");
    sc_trace(mVcdFile, p_Val2_6_fu_256_p0, "p_Val2_6_fu_256_p0");
    sc_trace(mVcdFile, p_Val2_6_fu_256_p1, "p_Val2_6_fu_256_p1");
    sc_trace(mVcdFile, p_Val2_7_fu_263_p0, "p_Val2_7_fu_263_p0");
    sc_trace(mVcdFile, p_Val2_7_fu_263_p1, "p_Val2_7_fu_263_p1");
    sc_trace(mVcdFile, p_Val2_8_fu_270_p0, "p_Val2_8_fu_270_p0");
    sc_trace(mVcdFile, p_Val2_8_fu_270_p1, "p_Val2_8_fu_270_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

outer_product::~outer_product() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete optical_flow_mul_yd2_U39;
    delete optical_flow_mul_yd2_U40;
    delete optical_flow_mul_yd2_U41;
    delete optical_flow_mul_yd2_U42;
    delete optical_flow_mul_yd2_U43;
    delete optical_flow_mul_yd2_U44;
}

void outer_product::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()) && 
             esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((!(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((!(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_96_p2.read()))) {
        indvar_flatten_reg_85 = indvar_flatten_next_fu_102_p2.read();
    } else if ((!(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        indvar_flatten_reg_85 = ap_const_lv6_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten_reg_277 = exitcond_flatten_fu_96_p2.read();
        exitcond_flatten_reg_277_pp0_iter1_reg = exitcond_flatten_reg_277.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_277.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_10_reg_311 = p_Val2_8_fu_270_p2.read().range(35, 5);
        tmp_1_reg_286 = p_Val2_3_fu_235_p2.read().range(35, 5);
        tmp_4_reg_291 = p_Val2_4_fu_242_p2.read().range(35, 5);
        tmp_6_reg_306 = p_Val2_7_fu_263_p2.read().range(35, 5);
        tmp_7_reg_296 = p_Val2_5_fu_249_p2.read().range(35, 5);
        tmp_s_reg_301 = p_Val2_6_fu_256_p2.read().range(35, 5);
    }
}

void outer_product::thread_OP1_V_1_cast_i_fu_151_p1() {
    OP1_V_1_cast_i_fu_151_p1 = esl_sext<36,18>(tmp_40_i_fu_118_p4.read());
}

void outer_product::thread_OP1_V_2_cast_i_fu_164_p1() {
    OP1_V_2_cast_i_fu_164_p1 = esl_sext<36,18>(tmp_42_i_fu_128_p4.read());
}

void outer_product::thread_OP1_V_cast_i_fu_138_p1() {
    OP1_V_cast_i_fu_138_p1 = esl_sext<36,18>(tmp_38_i_fu_108_p4.read());
}

void outer_product::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void outer_product::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void outer_product::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[2];
}

void outer_product::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void outer_product::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(exitcond_flatten_reg_277.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, filtered_gradient_x_s_empty_n.read())) || 
   (esl_seteq<1,1,1>(exitcond_flatten_reg_277.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, filtered_gradient_y_s_empty_n.read())) || 
   (esl_seteq<1,1,1>(exitcond_flatten_reg_277.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, filtered_gradient_z_s_empty_n.read())))) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_277_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_product_val_V_full_n.read())));
}

void outer_product::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(exitcond_flatten_reg_277.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, filtered_gradient_x_s_empty_n.read())) || 
   (esl_seteq<1,1,1>(exitcond_flatten_reg_277.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, filtered_gradient_y_s_empty_n.read())) || 
   (esl_seteq<1,1,1>(exitcond_flatten_reg_277.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, filtered_gradient_z_s_empty_n.read())))) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_277_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_product_val_V_full_n.read())));
}

void outer_product::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(exitcond_flatten_reg_277.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, filtered_gradient_x_s_empty_n.read())) || 
   (esl_seteq<1,1,1>(exitcond_flatten_reg_277.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, filtered_gradient_y_s_empty_n.read())) || 
   (esl_seteq<1,1,1>(exitcond_flatten_reg_277.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, filtered_gradient_z_s_empty_n.read())))) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_277_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_product_val_V_full_n.read())));
}

void outer_product::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void outer_product::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void outer_product::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(exitcond_flatten_reg_277.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, filtered_gradient_x_s_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_flatten_reg_277.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, filtered_gradient_y_s_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_flatten_reg_277.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, filtered_gradient_z_s_empty_n.read())));
}

void outer_product::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_277_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_product_val_V_full_n.read()));
}

void outer_product::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_96_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void outer_product::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void outer_product::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void outer_product::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void outer_product::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void outer_product::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void outer_product::thread_exitcond_flatten_fu_96_p2() {
    exitcond_flatten_fu_96_p2 = (!indvar_flatten_reg_85.read().is_01() || !ap_const_lv6_32.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_85.read() == ap_const_lv6_32);
}

void outer_product::thread_filtered_gradient_x_s_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_277.read(), ap_const_lv1_0))) {
        filtered_gradient_x_s_blk_n = filtered_gradient_x_s_empty_n.read();
    } else {
        filtered_gradient_x_s_blk_n = ap_const_logic_1;
    }
}

void outer_product::thread_filtered_gradient_x_s_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_277.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        filtered_gradient_x_s_read = ap_const_logic_1;
    } else {
        filtered_gradient_x_s_read = ap_const_logic_0;
    }
}

void outer_product::thread_filtered_gradient_y_s_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_277.read(), ap_const_lv1_0))) {
        filtered_gradient_y_s_blk_n = filtered_gradient_y_s_empty_n.read();
    } else {
        filtered_gradient_y_s_blk_n = ap_const_logic_1;
    }
}

void outer_product::thread_filtered_gradient_y_s_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_277.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        filtered_gradient_y_s_read = ap_const_logic_1;
    } else {
        filtered_gradient_y_s_read = ap_const_logic_0;
    }
}

void outer_product::thread_filtered_gradient_z_s_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_277.read(), ap_const_lv1_0))) {
        filtered_gradient_z_s_blk_n = filtered_gradient_z_s_empty_n.read();
    } else {
        filtered_gradient_z_s_blk_n = ap_const_logic_1;
    }
}

void outer_product::thread_filtered_gradient_z_s_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_277.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        filtered_gradient_z_s_read = ap_const_logic_1;
    } else {
        filtered_gradient_z_s_read = ap_const_logic_0;
    }
}

void outer_product::thread_indvar_flatten_next_fu_102_p2() {
    indvar_flatten_next_fu_102_p2 = (!indvar_flatten_reg_85.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(indvar_flatten_reg_85.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void outer_product::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void outer_product::thread_out_product_val_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_277_pp0_iter1_reg.read()))) {
        out_product_val_V_blk_n = out_product_val_V_full_n.read();
    } else {
        out_product_val_V_blk_n = ap_const_logic_1;
    }
}

void outer_product::thread_out_product_val_V_din() {
    out_product_val_V_din = esl_concat<159,32>(esl_concat<127,32>(esl_concat<95,32>(esl_concat<63,32>(esl_concat<31,32>(tmp_10_reg_311.read(), tmp_9_fu_216_p1.read()), tmp_3_fu_213_p1.read()), tmp_8_fu_210_p1.read()), tmp_5_fu_207_p1.read()), tmp_2_fu_204_p1.read());
}

void outer_product::thread_out_product_val_V_write() {
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_reg_277_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_product_val_V_write = ap_const_logic_1;
    } else {
        out_product_val_V_write = ap_const_logic_0;
    }
}

void outer_product::thread_p_Val2_3_fu_235_p0() {
    p_Val2_3_fu_235_p0 =  (sc_lv<18>) (OP1_V_cast_i_fu_138_p1.read());
}

void outer_product::thread_p_Val2_3_fu_235_p1() {
    p_Val2_3_fu_235_p1 =  (sc_lv<18>) (OP1_V_cast_i_fu_138_p1.read());
}

void outer_product::thread_p_Val2_4_fu_242_p0() {
    p_Val2_4_fu_242_p0 =  (sc_lv<18>) (OP1_V_1_cast_i_fu_151_p1.read());
}

void outer_product::thread_p_Val2_4_fu_242_p1() {
    p_Val2_4_fu_242_p1 =  (sc_lv<18>) (OP1_V_1_cast_i_fu_151_p1.read());
}

void outer_product::thread_p_Val2_5_fu_249_p0() {
    p_Val2_5_fu_249_p0 =  (sc_lv<18>) (OP1_V_2_cast_i_fu_164_p1.read());
}

void outer_product::thread_p_Val2_5_fu_249_p1() {
    p_Val2_5_fu_249_p1 =  (sc_lv<18>) (OP1_V_2_cast_i_fu_164_p1.read());
}

void outer_product::thread_p_Val2_6_fu_256_p0() {
    p_Val2_6_fu_256_p0 =  (sc_lv<18>) (OP1_V_cast_i_fu_138_p1.read());
}

void outer_product::thread_p_Val2_6_fu_256_p1() {
    p_Val2_6_fu_256_p1 =  (sc_lv<18>) (OP1_V_1_cast_i_fu_151_p1.read());
}

void outer_product::thread_p_Val2_7_fu_263_p0() {
    p_Val2_7_fu_263_p0 =  (sc_lv<18>) (OP1_V_cast_i_fu_138_p1.read());
}

void outer_product::thread_p_Val2_7_fu_263_p1() {
    p_Val2_7_fu_263_p1 =  (sc_lv<18>) (OP1_V_2_cast_i_fu_164_p1.read());
}

void outer_product::thread_p_Val2_8_fu_270_p0() {
    p_Val2_8_fu_270_p0 =  (sc_lv<18>) (OP1_V_1_cast_i_fu_151_p1.read());
}

void outer_product::thread_p_Val2_8_fu_270_p1() {
    p_Val2_8_fu_270_p1 =  (sc_lv<18>) (OP1_V_2_cast_i_fu_164_p1.read());
}

void outer_product::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void outer_product::thread_start_out() {
    start_out = real_start.read();
}

void outer_product::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void outer_product::thread_tmp_2_fu_204_p1() {
    tmp_2_fu_204_p1 = esl_sext<32,31>(tmp_1_reg_286.read());
}

void outer_product::thread_tmp_38_i_fu_108_p4() {
    tmp_38_i_fu_108_p4 = filtered_gradient_x_s_dout.read().range(31, 14);
}

void outer_product::thread_tmp_3_fu_213_p1() {
    tmp_3_fu_213_p1 = esl_sext<32,31>(tmp_s_reg_301.read());
}

void outer_product::thread_tmp_40_i_fu_118_p4() {
    tmp_40_i_fu_118_p4 = filtered_gradient_y_s_dout.read().range(31, 14);
}

void outer_product::thread_tmp_42_i_fu_128_p4() {
    tmp_42_i_fu_128_p4 = filtered_gradient_z_s_dout.read().range(31, 14);
}

void outer_product::thread_tmp_5_fu_207_p1() {
    tmp_5_fu_207_p1 = esl_sext<32,31>(tmp_4_reg_291.read());
}

void outer_product::thread_tmp_8_fu_210_p1() {
    tmp_8_fu_210_p1 = esl_sext<32,31>(tmp_7_reg_296.read());
}

void outer_product::thread_tmp_9_fu_216_p1() {
    tmp_9_fu_216_p1 = esl_sext<32,31>(tmp_6_reg_306.read());
}

void outer_product::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(exitcond_flatten_fu_96_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) && !(esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) || (esl_seteq<1,1,1>(exitcond_flatten_fu_96_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

