// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gradient_weight_x (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        y_filtered_x_V_dout,
        y_filtered_x_V_empty_n,
        y_filtered_x_V_read,
        y_filtered_y_V_dout,
        y_filtered_y_V_empty_n,
        y_filtered_y_V_read,
        y_filtered_z_V_dout,
        y_filtered_z_V_empty_n,
        y_filtered_z_V_read,
        filtered_gradient_x_s_din,
        filtered_gradient_x_s_full_n,
        filtered_gradient_x_s_write,
        filtered_gradient_y_s_din,
        filtered_gradient_y_s_full_n,
        filtered_gradient_y_s_write,
        filtered_gradient_z_s_din,
        filtered_gradient_z_s_full_n,
        filtered_gradient_z_s_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state5 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [0:0] y_filtered_x_V_dout;
input   y_filtered_x_V_empty_n;
output   y_filtered_x_V_read;
input  [0:0] y_filtered_y_V_dout;
input   y_filtered_y_V_empty_n;
output   y_filtered_y_V_read;
input  [0:0] y_filtered_z_V_dout;
input   y_filtered_z_V_empty_n;
output   y_filtered_z_V_read;
output  [31:0] filtered_gradient_x_s_din;
input   filtered_gradient_x_s_full_n;
output   filtered_gradient_x_s_write;
output  [31:0] filtered_gradient_y_s_din;
input   filtered_gradient_y_s_full_n;
output   filtered_gradient_y_s_write;
output  [31:0] filtered_gradient_z_s_din;
input   filtered_gradient_z_s_full_n;
output   filtered_gradient_z_s_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg y_filtered_x_V_read;
reg y_filtered_y_V_read;
reg y_filtered_z_V_read;
reg[31:0] filtered_gradient_x_s_din;
reg filtered_gradient_x_s_write;
reg[31:0] filtered_gradient_y_s_din;
reg filtered_gradient_y_s_write;
reg[31:0] filtered_gradient_z_s_din;
reg filtered_gradient_z_s_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    y_filtered_x_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_flatten_reg_1070;
reg   [0:0] tmp_53_i_reg_1079;
reg    y_filtered_y_V_blk_n;
reg    y_filtered_z_V_blk_n;
reg    filtered_gradient_x_s_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] tmp_85_reg_1083;
reg   [0:0] tmp_85_reg_1083_pp0_iter1_reg;
reg   [0:0] tmp_57_i_reg_1087;
reg   [0:0] tmp_57_i_reg_1087_pp0_iter1_reg;
reg    filtered_gradient_y_s_blk_n;
reg    filtered_gradient_z_s_blk_n;
reg   [6:0] indvar_flatten_reg_200;
reg   [3:0] c_i_reg_211;
wire   [0:0] exitcond_flatten_fu_258_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_predicate_op90_read_state3;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_predicate_op165_write_state4;
reg    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [6:0] indvar_flatten_next_fu_264_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_53_i_fu_284_p2;
wire   [0:0] tmp_85_fu_410_p2;
wire   [0:0] tmp_57_i_fu_416_p2;
wire   [3:0] c_fu_422_p2;
reg   [31:0] acc_x_V_5_i_reg_1096;
reg   [31:0] acc_y_V_5_i_reg_1101;
reg   [31:0] acc_z_V_5_i_reg_1106;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter1_state3;
reg   [0:0] ap_phi_mux_buf_val_0_y_V_6_phi_fu_226_p4;
reg   [0:0] ap_phi_reg_pp0_iter1_buf_val_0_y_V_6_reg_222;
wire   [0:0] ap_phi_reg_pp0_iter0_buf_val_0_y_V_6_reg_222;
reg   [0:0] ap_phi_mux_buf_val_0_x_V_6_phi_fu_238_p4;
reg   [0:0] ap_phi_reg_pp0_iter1_buf_val_0_x_V_6_reg_234;
wire   [0:0] ap_phi_reg_pp0_iter0_buf_val_0_x_V_6_reg_234;
reg   [0:0] ap_phi_mux_tmp_z_V_phi_fu_250_p4;
reg   [0:0] ap_phi_reg_pp0_iter1_tmp_z_V_reg_246;
wire   [0:0] ap_phi_reg_pp0_iter0_tmp_z_V_reg_246;
reg    ap_block_pp0_stage0_01001;
reg   [0:0] buf_val_0_x_V_1_fu_98;
reg   [0:0] buf_val_0_x_V_2_fu_102;
reg   [0:0] buf_val_0_x_V_3_fu_106;
reg   [0:0] buf_val_0_x_V_4_fu_110;
reg   [0:0] buf_val_0_x_V_5_fu_114;
reg   [0:0] buf_val_0_y_V_1_fu_118;
reg   [0:0] buf_val_0_y_V_2_fu_122;
reg   [0:0] buf_val_0_y_V_3_fu_126;
reg   [0:0] buf_val_0_y_V_4_fu_130;
reg   [0:0] buf_val_0_y_V_5_fu_134;
reg   [0:0] buf_val_0_z_V_1_fu_138;
reg   [0:0] buf_val_0_z_V_2_fu_142;
reg   [0:0] buf_val_0_z_V_3_fu_146;
reg   [0:0] buf_val_0_z_V_4_fu_150;
reg   [0:0] buf_val_0_z_V_5_fu_154;
wire   [0:0] exitcond2_i2_fu_270_p2;
wire   [3:0] c_i_mid2_fu_276_p3;
wire   [0:0] tmp_66_fu_296_p2;
wire   [0:0] tmp_fu_290_p2;
wire   [0:0] tmp_68_fu_308_p2;
wire   [0:0] tmp_67_fu_302_p2;
wire   [0:0] tmp_70_fu_320_p2;
wire   [0:0] tmp_69_fu_314_p2;
wire   [0:0] tmp_72_fu_332_p2;
wire   [0:0] tmp_71_fu_326_p2;
wire   [0:0] tmp_74_fu_344_p2;
wire   [0:0] tmp_73_fu_338_p2;
wire   [0:0] tmp_76_fu_356_p2;
wire   [0:0] tmp_75_fu_350_p2;
wire   [0:0] tmp_78_fu_368_p2;
wire   [0:0] tmp_77_fu_362_p2;
wire   [0:0] tmp_80_fu_380_p2;
wire   [0:0] tmp_79_fu_374_p2;
wire   [0:0] tmp_82_fu_392_p2;
wire   [0:0] tmp_81_fu_386_p2;
wire   [0:0] tmp_84_fu_404_p2;
wire   [0:0] tmp_83_fu_398_p2;
wire   [30:0] tmp_86_fu_557_p3;
wire   [49:0] tmp_87_fu_565_p3;
wire  signed [50:0] tmp_200_2_i_fu_573_p1;
wire   [50:0] tmp_20123_2_cast_i_fu_577_p3;
wire   [30:0] tmp_88_fu_591_p3;
wire   [49:0] tmp_89_fu_599_p3;
wire  signed [50:0] tmp_205_2_i_fu_607_p1;
wire   [50:0] tmp_20624_2_cast_i_fu_611_p3;
wire   [30:0] tmp_90_fu_625_p3;
wire   [49:0] tmp_91_fu_633_p3;
wire  signed [50:0] tmp_210_2_i_fu_641_p1;
wire   [50:0] tmp_21125_2_cast_i_fu_645_p3;
wire   [50:0] p_Val2_35_2_i_fu_585_p2;
wire   [31:0] tmp_s_fu_667_p4;
wire   [50:0] tmp_92_fu_659_p3;
wire   [50:0] tmp_200_3_i_fu_677_p3;
wire   [50:0] p_Val2_38_2_i_fu_619_p2;
wire   [31:0] tmp_35_fu_699_p4;
wire   [50:0] tmp_93_fu_691_p3;
wire   [50:0] tmp_205_3_i_fu_709_p3;
wire   [50:0] p_Val2_41_2_i_fu_653_p2;
wire   [31:0] tmp_36_fu_731_p4;
wire   [50:0] tmp_94_fu_723_p3;
wire   [50:0] tmp_210_3_i_fu_741_p3;
wire   [50:0] p_Val2_35_3_i_fu_685_p2;
wire   [31:0] tmp_37_fu_755_p4;
wire   [50:0] tmp_200_4_i_fu_765_p3;
wire   [50:0] tmp_20123_4_cast_i_fu_773_p3;
wire   [50:0] p_Val2_38_3_i_fu_717_p2;
wire   [31:0] tmp_38_fu_787_p4;
wire   [50:0] tmp_205_4_i_fu_797_p3;
wire   [50:0] tmp_20624_4_cast_i_fu_805_p3;
wire   [50:0] p_Val2_41_3_i_fu_749_p2;
wire   [31:0] tmp_39_fu_819_p4;
wire   [50:0] tmp_210_4_i_fu_829_p3;
wire   [50:0] tmp_21125_4_cast_i_fu_837_p3;
wire   [50:0] p_Val2_35_4_i_fu_781_p2;
wire   [31:0] tmp_40_fu_851_p4;
wire   [50:0] tmp_200_5_i_fu_861_p3;
wire   [50:0] tmp_20123_5_cast_i_fu_869_p3;
wire   [50:0] p_Val2_35_5_i_fu_877_p2;
wire   [50:0] p_Val2_38_4_i_fu_813_p2;
wire   [31:0] tmp_41_fu_893_p4;
wire   [50:0] tmp_205_5_i_fu_903_p3;
wire   [50:0] tmp_20624_5_cast_i_fu_911_p3;
wire   [50:0] p_Val2_38_5_i_fu_919_p2;
wire   [50:0] p_Val2_41_4_i_fu_845_p2;
wire   [31:0] tmp_42_fu_935_p4;
wire   [50:0] tmp_210_5_i_fu_945_p3;
wire   [50:0] tmp_21125_5_cast_i_fu_953_p3;
wire   [50:0] p_Val2_41_5_i_fu_961_p2;
wire    ap_CS_fsm_state5;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_158;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond_flatten_fu_258_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_condition_pp0_exit_iter1_state3) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter1_state3) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_158)) begin
        if (((tmp_53_i_fu_284_p2 == 1'd0) & (exitcond_flatten_fu_258_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_buf_val_0_x_V_6_reg_234 <= 1'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_val_0_x_V_6_reg_234 <= ap_phi_reg_pp0_iter0_buf_val_0_x_V_6_reg_234;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_158)) begin
        if (((tmp_53_i_fu_284_p2 == 1'd0) & (exitcond_flatten_fu_258_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_buf_val_0_y_V_6_reg_222 <= 1'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_val_0_y_V_6_reg_222 <= ap_phi_reg_pp0_iter0_buf_val_0_y_V_6_reg_222;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_158)) begin
        if (((tmp_53_i_fu_284_p2 == 1'd0) & (exitcond_flatten_fu_258_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_z_V_reg_246 <= 1'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_z_V_reg_246 <= ap_phi_reg_pp0_iter0_tmp_z_V_reg_246;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_258_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_i_reg_211 <= c_fu_422_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        c_i_reg_211 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_258_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_200 <= indvar_flatten_next_fu_264_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_200 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_85_reg_1083 == 1'd0) & (exitcond_flatten_reg_1070 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_x_V_5_i_reg_1096 <= {{p_Val2_35_5_i_fu_877_p2[50:19]}};
        acc_y_V_5_i_reg_1101 <= {{p_Val2_38_5_i_fu_919_p2[50:19]}};
        acc_z_V_5_i_reg_1106 <= {{p_Val2_41_5_i_fu_961_p2[50:19]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_0_x_V_1_fu_98 <= buf_val_0_x_V_2_fu_102;
        buf_val_0_x_V_2_fu_102 <= buf_val_0_x_V_3_fu_106;
        buf_val_0_x_V_3_fu_106 <= buf_val_0_x_V_4_fu_110;
        buf_val_0_x_V_4_fu_110 <= buf_val_0_x_V_5_fu_114;
        buf_val_0_y_V_1_fu_118 <= buf_val_0_y_V_2_fu_122;
        buf_val_0_y_V_2_fu_122 <= buf_val_0_y_V_3_fu_126;
        buf_val_0_y_V_3_fu_126 <= buf_val_0_y_V_4_fu_130;
        buf_val_0_y_V_4_fu_130 <= buf_val_0_y_V_5_fu_134;
        buf_val_0_z_V_1_fu_138 <= buf_val_0_z_V_2_fu_142;
        buf_val_0_z_V_2_fu_142 <= buf_val_0_z_V_3_fu_146;
        buf_val_0_z_V_3_fu_146 <= buf_val_0_z_V_4_fu_150;
        buf_val_0_z_V_4_fu_150 <= buf_val_0_z_V_5_fu_154;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1070 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_0_x_V_5_fu_114 <= ap_phi_mux_buf_val_0_x_V_6_phi_fu_238_p4;
        buf_val_0_y_V_5_fu_134 <= ap_phi_mux_buf_val_0_y_V_6_phi_fu_226_p4;
        buf_val_0_z_V_5_fu_154 <= ap_phi_mux_tmp_z_V_phi_fu_250_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten_reg_1070 <= exitcond_flatten_fu_258_p2;
        tmp_57_i_reg_1087_pp0_iter1_reg <= tmp_57_i_reg_1087;
        tmp_85_reg_1083_pp0_iter1_reg <= tmp_85_reg_1083;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_258_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_53_i_reg_1079 <= tmp_53_i_fu_284_p2;
        tmp_85_reg_1083 <= tmp_85_fu_410_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_85_fu_410_p2 == 1'd1) & (exitcond_flatten_fu_258_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_57_i_reg_1087 <= tmp_57_i_fu_416_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_53_i_reg_1079 == 1'd1) & (exitcond_flatten_reg_1070 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_buf_val_0_x_V_6_phi_fu_238_p4 = y_filtered_x_V_dout;
    end else begin
        ap_phi_mux_buf_val_0_x_V_6_phi_fu_238_p4 = ap_phi_reg_pp0_iter1_buf_val_0_x_V_6_reg_234;
    end
end

always @ (*) begin
    if (((tmp_53_i_reg_1079 == 1'd1) & (exitcond_flatten_reg_1070 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_buf_val_0_y_V_6_phi_fu_226_p4 = y_filtered_y_V_dout;
    end else begin
        ap_phi_mux_buf_val_0_y_V_6_phi_fu_226_p4 = ap_phi_reg_pp0_iter1_buf_val_0_y_V_6_reg_222;
    end
end

always @ (*) begin
    if (((tmp_53_i_reg_1079 == 1'd1) & (exitcond_flatten_reg_1070 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_tmp_z_V_phi_fu_250_p4 = y_filtered_z_V_dout;
    end else begin
        ap_phi_mux_tmp_z_V_phi_fu_250_p4 = ap_phi_reg_pp0_iter1_tmp_z_V_reg_246;
    end
end

always @ (*) begin
    if ((((tmp_57_i_reg_1087_pp0_iter1_reg == 1'd1) & (tmp_85_reg_1083_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_85_reg_1083_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        filtered_gradient_x_s_blk_n = filtered_gradient_x_s_full_n;
    end else begin
        filtered_gradient_x_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op165_write_state4 == 1'b1)) begin
            filtered_gradient_x_s_din = 32'd0;
        end else if ((tmp_85_reg_1083_pp0_iter1_reg == 1'd0)) begin
            filtered_gradient_x_s_din = acc_x_V_5_i_reg_1096;
        end else begin
            filtered_gradient_x_s_din = 'bx;
        end
    end else begin
        filtered_gradient_x_s_din = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_85_reg_1083_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op165_write_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        filtered_gradient_x_s_write = 1'b1;
    end else begin
        filtered_gradient_x_s_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_57_i_reg_1087_pp0_iter1_reg == 1'd1) & (tmp_85_reg_1083_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_85_reg_1083_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        filtered_gradient_y_s_blk_n = filtered_gradient_y_s_full_n;
    end else begin
        filtered_gradient_y_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op165_write_state4 == 1'b1)) begin
            filtered_gradient_y_s_din = 32'd0;
        end else if ((tmp_85_reg_1083_pp0_iter1_reg == 1'd0)) begin
            filtered_gradient_y_s_din = acc_y_V_5_i_reg_1101;
        end else begin
            filtered_gradient_y_s_din = 'bx;
        end
    end else begin
        filtered_gradient_y_s_din = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_85_reg_1083_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op165_write_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        filtered_gradient_y_s_write = 1'b1;
    end else begin
        filtered_gradient_y_s_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_57_i_reg_1087_pp0_iter1_reg == 1'd1) & (tmp_85_reg_1083_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_85_reg_1083_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        filtered_gradient_z_s_blk_n = filtered_gradient_z_s_full_n;
    end else begin
        filtered_gradient_z_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op165_write_state4 == 1'b1)) begin
            filtered_gradient_z_s_din = 32'd0;
        end else if ((tmp_85_reg_1083_pp0_iter1_reg == 1'd0)) begin
            filtered_gradient_z_s_din = acc_z_V_5_i_reg_1106;
        end else begin
            filtered_gradient_z_s_din = 'bx;
        end
    end else begin
        filtered_gradient_z_s_din = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_85_reg_1083_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op165_write_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        filtered_gradient_z_s_write = 1'b1;
    end else begin
        filtered_gradient_z_s_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_53_i_reg_1079 == 1'd1) & (exitcond_flatten_reg_1070 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_filtered_x_V_blk_n = y_filtered_x_V_empty_n;
    end else begin
        y_filtered_x_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op90_read_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        y_filtered_x_V_read = 1'b1;
    end else begin
        y_filtered_x_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_53_i_reg_1079 == 1'd1) & (exitcond_flatten_reg_1070 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_filtered_y_V_blk_n = y_filtered_y_V_empty_n;
    end else begin
        y_filtered_y_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op90_read_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        y_filtered_y_V_read = 1'b1;
    end else begin
        y_filtered_y_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_53_i_reg_1079 == 1'd1) & (exitcond_flatten_reg_1070 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_filtered_z_V_blk_n = y_filtered_z_V_empty_n;
    end else begin
        y_filtered_z_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op90_read_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        y_filtered_z_V_read = 1'b1;
    end else begin
        y_filtered_z_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (((tmp_85_reg_1083_pp0_iter1_reg == 1'd0) & (filtered_gradient_z_s_full_n == 1'b0)) | ((tmp_85_reg_1083_pp0_iter1_reg == 1'd0) & (filtered_gradient_y_s_full_n == 1'b0)) | ((tmp_85_reg_1083_pp0_iter1_reg == 1'd0) & (filtered_gradient_x_s_full_n == 1'b0)) | ((filtered_gradient_z_s_full_n == 1'b0) & (ap_predicate_op165_write_state4 == 1'b1)) | ((filtered_gradient_y_s_full_n == 1'b0) & (ap_predicate_op165_write_state4 == 1'b1)) | ((filtered_gradient_x_s_full_n == 1'b0) & (ap_predicate_op165_write_state4 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((y_filtered_z_V_empty_n == 1'b0) & (ap_predicate_op90_read_state3 == 1'b1)) | ((y_filtered_y_V_empty_n == 1'b0) & (ap_predicate_op90_read_state3 == 1'b1)) | ((y_filtered_x_V_empty_n == 1'b0) & (ap_predicate_op90_read_state3 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (((tmp_85_reg_1083_pp0_iter1_reg == 1'd0) & (filtered_gradient_z_s_full_n == 1'b0)) | ((tmp_85_reg_1083_pp0_iter1_reg == 1'd0) & (filtered_gradient_y_s_full_n == 1'b0)) | ((tmp_85_reg_1083_pp0_iter1_reg == 1'd0) & (filtered_gradient_x_s_full_n == 1'b0)) | ((filtered_gradient_z_s_full_n == 1'b0) & (ap_predicate_op165_write_state4 == 1'b1)) | ((filtered_gradient_y_s_full_n == 1'b0) & (ap_predicate_op165_write_state4 == 1'b1)) | ((filtered_gradient_x_s_full_n == 1'b0) & (ap_predicate_op165_write_state4 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((y_filtered_z_V_empty_n == 1'b0) & (ap_predicate_op90_read_state3 == 1'b1)) | ((y_filtered_y_V_empty_n == 1'b0) & (ap_predicate_op90_read_state3 == 1'b1)) | ((y_filtered_x_V_empty_n == 1'b0) & (ap_predicate_op90_read_state3 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter2 == 1'b1) & (((tmp_85_reg_1083_pp0_iter1_reg == 1'd0) & (filtered_gradient_z_s_full_n == 1'b0)) | ((tmp_85_reg_1083_pp0_iter1_reg == 1'd0) & (filtered_gradient_y_s_full_n == 1'b0)) | ((tmp_85_reg_1083_pp0_iter1_reg == 1'd0) & (filtered_gradient_x_s_full_n == 1'b0)) | ((filtered_gradient_z_s_full_n == 1'b0) & (ap_predicate_op165_write_state4 == 1'b1)) | ((filtered_gradient_y_s_full_n == 1'b0) & (ap_predicate_op165_write_state4 == 1'b1)) | ((filtered_gradient_x_s_full_n == 1'b0) & (ap_predicate_op165_write_state4 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((y_filtered_z_V_empty_n == 1'b0) & (ap_predicate_op90_read_state3 == 1'b1)) | ((y_filtered_y_V_empty_n == 1'b0) & (ap_predicate_op90_read_state3 == 1'b1)) | ((y_filtered_x_V_empty_n == 1'b0) & (ap_predicate_op90_read_state3 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((y_filtered_z_V_empty_n == 1'b0) & (ap_predicate_op90_read_state3 == 1'b1)) | ((y_filtered_y_V_empty_n == 1'b0) & (ap_predicate_op90_read_state3 == 1'b1)) | ((y_filtered_x_V_empty_n == 1'b0) & (ap_predicate_op90_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = (((tmp_85_reg_1083_pp0_iter1_reg == 1'd0) & (filtered_gradient_z_s_full_n == 1'b0)) | ((tmp_85_reg_1083_pp0_iter1_reg == 1'd0) & (filtered_gradient_y_s_full_n == 1'b0)) | ((tmp_85_reg_1083_pp0_iter1_reg == 1'd0) & (filtered_gradient_x_s_full_n == 1'b0)) | ((filtered_gradient_z_s_full_n == 1'b0) & (ap_predicate_op165_write_state4 == 1'b1)) | ((filtered_gradient_y_s_full_n == 1'b0) & (ap_predicate_op165_write_state4 == 1'b1)) | ((filtered_gradient_x_s_full_n == 1'b0) & (ap_predicate_op165_write_state4 == 1'b1)));
end

always @ (*) begin
    ap_condition_158 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_buf_val_0_x_V_6_reg_234 = 'bx;

assign ap_phi_reg_pp0_iter0_buf_val_0_y_V_6_reg_222 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_z_V_reg_246 = 'bx;

always @ (*) begin
    ap_predicate_op165_write_state4 = ((tmp_57_i_reg_1087_pp0_iter1_reg == 1'd1) & (tmp_85_reg_1083_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op90_read_state3 = ((tmp_53_i_reg_1079 == 1'd1) & (exitcond_flatten_reg_1070 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign c_fu_422_p2 = (c_i_mid2_fu_276_p3 + 4'd1);

assign c_i_mid2_fu_276_p3 = ((exitcond2_i2_fu_270_p2[0:0] === 1'b1) ? 4'd0 : c_i_reg_211);

assign exitcond2_i2_fu_270_p2 = ((c_i_reg_211 == 4'd13) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_258_p2 = ((indvar_flatten_reg_200 == 7'd65) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_264_p2 = (indvar_flatten_reg_200 + 7'd1);

assign p_Val2_35_2_i_fu_585_p2 = ($signed(tmp_200_2_i_fu_573_p1) + $signed(tmp_20123_2_cast_i_fu_577_p3));

assign p_Val2_35_3_i_fu_685_p2 = (tmp_92_fu_659_p3 + tmp_200_3_i_fu_677_p3);

assign p_Val2_35_4_i_fu_781_p2 = (tmp_200_4_i_fu_765_p3 + tmp_20123_4_cast_i_fu_773_p3);

assign p_Val2_35_5_i_fu_877_p2 = (tmp_200_5_i_fu_861_p3 + tmp_20123_5_cast_i_fu_869_p3);

assign p_Val2_38_2_i_fu_619_p2 = ($signed(tmp_205_2_i_fu_607_p1) + $signed(tmp_20624_2_cast_i_fu_611_p3));

assign p_Val2_38_3_i_fu_717_p2 = (tmp_93_fu_691_p3 + tmp_205_3_i_fu_709_p3);

assign p_Val2_38_4_i_fu_813_p2 = (tmp_205_4_i_fu_797_p3 + tmp_20624_4_cast_i_fu_805_p3);

assign p_Val2_38_5_i_fu_919_p2 = (tmp_205_5_i_fu_903_p3 + tmp_20624_5_cast_i_fu_911_p3);

assign p_Val2_41_2_i_fu_653_p2 = ($signed(tmp_210_2_i_fu_641_p1) + $signed(tmp_21125_2_cast_i_fu_645_p3));

assign p_Val2_41_3_i_fu_749_p2 = (tmp_94_fu_723_p3 + tmp_210_3_i_fu_741_p3);

assign p_Val2_41_4_i_fu_845_p2 = (tmp_210_4_i_fu_829_p3 + tmp_21125_4_cast_i_fu_837_p3);

assign p_Val2_41_5_i_fu_961_p2 = (tmp_210_5_i_fu_945_p3 + tmp_21125_5_cast_i_fu_953_p3);

assign start_out = real_start;

assign tmp_200_2_i_fu_573_p1 = $signed(tmp_87_fu_565_p3);

assign tmp_200_3_i_fu_677_p3 = {{tmp_s_fu_667_p4}, {19'd0}};

assign tmp_200_4_i_fu_765_p3 = {{tmp_37_fu_755_p4}, {19'd0}};

assign tmp_200_5_i_fu_861_p3 = {{tmp_40_fu_851_p4}, {19'd0}};

assign tmp_20123_2_cast_i_fu_577_p3 = ((buf_val_0_x_V_2_fu_102[0:0] === 1'b1) ? 51'd97989 : 51'd0);

assign tmp_20123_4_cast_i_fu_773_p3 = ((buf_val_0_x_V_4_fu_110[0:0] === 1'b1) ? 51'd97989 : 51'd0);

assign tmp_20123_5_cast_i_fu_869_p3 = ((buf_val_0_x_V_5_fu_114[0:0] === 1'b1) ? 51'd69730 : 51'd0);

assign tmp_205_2_i_fu_607_p1 = $signed(tmp_89_fu_599_p3);

assign tmp_205_3_i_fu_709_p3 = {{tmp_35_fu_699_p4}, {19'd0}};

assign tmp_205_4_i_fu_797_p3 = {{tmp_38_fu_787_p4}, {19'd0}};

assign tmp_205_5_i_fu_903_p3 = {{tmp_41_fu_893_p4}, {19'd0}};

assign tmp_20624_2_cast_i_fu_611_p3 = ((buf_val_0_y_V_2_fu_122[0:0] === 1'b1) ? 51'd97989 : 51'd0);

assign tmp_20624_4_cast_i_fu_805_p3 = ((buf_val_0_y_V_4_fu_130[0:0] === 1'b1) ? 51'd97989 : 51'd0);

assign tmp_20624_5_cast_i_fu_911_p3 = ((buf_val_0_y_V_5_fu_134[0:0] === 1'b1) ? 51'd69730 : 51'd0);

assign tmp_210_2_i_fu_641_p1 = $signed(tmp_91_fu_633_p3);

assign tmp_210_3_i_fu_741_p3 = {{tmp_36_fu_731_p4}, {19'd0}};

assign tmp_210_4_i_fu_829_p3 = {{tmp_39_fu_819_p4}, {19'd0}};

assign tmp_210_5_i_fu_945_p3 = {{tmp_42_fu_935_p4}, {19'd0}};

assign tmp_21125_2_cast_i_fu_645_p3 = ((buf_val_0_z_V_2_fu_142[0:0] === 1'b1) ? 51'd97989 : 51'd0);

assign tmp_21125_4_cast_i_fu_837_p3 = ((buf_val_0_z_V_4_fu_150[0:0] === 1'b1) ? 51'd97989 : 51'd0);

assign tmp_21125_5_cast_i_fu_953_p3 = ((buf_val_0_z_V_5_fu_154[0:0] === 1'b1) ? 51'd69730 : 51'd0);

assign tmp_35_fu_699_p4 = {{p_Val2_38_2_i_fu_619_p2[50:19]}};

assign tmp_36_fu_731_p4 = {{p_Val2_41_2_i_fu_653_p2[50:19]}};

assign tmp_37_fu_755_p4 = {{p_Val2_35_3_i_fu_685_p2[50:19]}};

assign tmp_38_fu_787_p4 = {{p_Val2_38_3_i_fu_717_p2[50:19]}};

assign tmp_39_fu_819_p4 = {{p_Val2_41_3_i_fu_749_p2[50:19]}};

assign tmp_40_fu_851_p4 = {{p_Val2_35_4_i_fu_781_p2[50:19]}};

assign tmp_41_fu_893_p4 = {{p_Val2_38_4_i_fu_813_p2[50:19]}};

assign tmp_42_fu_935_p4 = {{p_Val2_41_4_i_fu_845_p2[50:19]}};

assign tmp_53_i_fu_284_p2 = ((c_i_mid2_fu_276_p3 < 4'd10) ? 1'b1 : 1'b0);

assign tmp_57_i_fu_416_p2 = ((c_i_mid2_fu_276_p3 > 4'd2) ? 1'b1 : 1'b0);

assign tmp_66_fu_296_p2 = ((c_i_mid2_fu_276_p3 == 4'd14) ? 1'b1 : 1'b0);

assign tmp_67_fu_302_p2 = (tmp_fu_290_p2 | tmp_66_fu_296_p2);

assign tmp_68_fu_308_p2 = ((c_i_mid2_fu_276_p3 == 4'd12) ? 1'b1 : 1'b0);

assign tmp_69_fu_314_p2 = (tmp_68_fu_308_p2 | tmp_67_fu_302_p2);

assign tmp_70_fu_320_p2 = ((c_i_mid2_fu_276_p3 == 4'd11) ? 1'b1 : 1'b0);

assign tmp_71_fu_326_p2 = (tmp_70_fu_320_p2 | tmp_69_fu_314_p2);

assign tmp_72_fu_332_p2 = ((c_i_mid2_fu_276_p3 == 4'd10) ? 1'b1 : 1'b0);

assign tmp_73_fu_338_p2 = (tmp_72_fu_332_p2 | tmp_71_fu_326_p2);

assign tmp_74_fu_344_p2 = ((c_i_mid2_fu_276_p3 == 4'd5) ? 1'b1 : 1'b0);

assign tmp_75_fu_350_p2 = (tmp_74_fu_344_p2 | tmp_73_fu_338_p2);

assign tmp_76_fu_356_p2 = ((c_i_mid2_fu_276_p3 == 4'd4) ? 1'b1 : 1'b0);

assign tmp_77_fu_362_p2 = (tmp_76_fu_356_p2 | tmp_75_fu_350_p2);

assign tmp_78_fu_368_p2 = ((c_i_mid2_fu_276_p3 == 4'd3) ? 1'b1 : 1'b0);

assign tmp_79_fu_374_p2 = (tmp_78_fu_368_p2 | tmp_77_fu_362_p2);

assign tmp_80_fu_380_p2 = ((c_i_mid2_fu_276_p3 == 4'd2) ? 1'b1 : 1'b0);

assign tmp_81_fu_386_p2 = (tmp_80_fu_380_p2 | tmp_79_fu_374_p2);

assign tmp_82_fu_392_p2 = ((c_i_mid2_fu_276_p3 == 4'd1) ? 1'b1 : 1'b0);

assign tmp_83_fu_398_p2 = (tmp_82_fu_392_p2 | tmp_81_fu_386_p2);

assign tmp_84_fu_404_p2 = ((c_i_mid2_fu_276_p3 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_85_fu_410_p2 = (tmp_84_fu_404_p2 | tmp_83_fu_398_p2);

assign tmp_86_fu_557_p3 = ((buf_val_0_x_V_1_fu_98[0:0] === 1'b1) ? 31'd0 : 31'd0);

assign tmp_87_fu_565_p3 = {{tmp_86_fu_557_p3}, {19'd0}};

assign tmp_88_fu_591_p3 = ((buf_val_0_y_V_1_fu_118[0:0] === 1'b1) ? 31'd0 : 31'd0);

assign tmp_89_fu_599_p3 = {{tmp_88_fu_591_p3}, {19'd0}};

assign tmp_90_fu_625_p3 = ((buf_val_0_z_V_1_fu_138[0:0] === 1'b1) ? 31'd0 : 31'd0);

assign tmp_91_fu_633_p3 = {{tmp_90_fu_625_p3}, {19'd0}};

assign tmp_92_fu_659_p3 = ((buf_val_0_x_V_3_fu_106[0:0] === 1'b1) ? 51'd152200 : 51'd0);

assign tmp_93_fu_691_p3 = ((buf_val_0_y_V_3_fu_126[0:0] === 1'b1) ? 51'd152200 : 51'd0);

assign tmp_94_fu_723_p3 = ((buf_val_0_z_V_3_fu_146[0:0] === 1'b1) ? 51'd152200 : 51'd0);

assign tmp_fu_290_p2 = ((c_i_mid2_fu_276_p3 == 4'd15) ? 1'b1 : 1'b0);

assign tmp_s_fu_667_p4 = {{p_Val2_35_2_i_fu_585_p2[50:19]}};

endmodule //gradient_weight_x
