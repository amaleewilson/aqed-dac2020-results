## Abstracted GSM design from CHStone benchmark suite - bugfree version

The additional files for  Cadence Jaspergold are:

   1. _jasper.tcl_ : contains the tcl file that may be sourced to run BMC on the design.
   2. _gsm.flist_ : contains the list of verilog files read by the formal tool


To run with Cadence Jaspergold:

1) Launch the jaspergold GUI: "jaspergold"

2) In the command window, source the tcl file: "source jasper.tcl"

BMC analysis bound should exceed the counterexample length of the version
with the bug (65 cycles).

### Assertion

The assertion to evaluate the Functional Consistency (FC) check can be found in
aqed_top.v, line 549.

### RTL Edits

  The verilog generated by Vivado had to be slightly modified to work with Jaspergold.
  Changes to files are shown in the *.diff files, e.g. aqed_top.v.diff contains the edits 
  made to aqed_top.v.

  1. **aqed_top.v, aqed_in.v, aqed_out.v** : Reset conditions inside *always* blocks were
     inserted for the all the _state\_*\_V_ reg variables. _state\_orig\_in\_V_ and 
     _state\_dup\_in\_V_ in **aqed_top.v** are reset to _'hFFFF_ and all other variables 
     are reset to 0. _o2_qed_check_V_reg*_ and _o2_qed_done_V_reg*_ in **aqed_top.v** 
     also need to be reset to 0.
  2. **Autocorrelation_bbkb.v** : *Jaspergold* does not use the *.dat initialization files
     for memories. As a result, it was necessary to hardcode the values of this ROM.
  3. **aqed_top_bmc_in.v, Quantization_and_dEe.v, ** : In these memory modules, 
    *Vivado* updates the same register in two different *always* blocks. *JasperGold* 
     cannot resolve this multi-driver conflict and treats the register as a free net. 
     To remove this multi-driver conflict, the two blocks were combined and blocking 
     assignments were used instead of non-blocking ones.
