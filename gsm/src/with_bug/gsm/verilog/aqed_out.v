// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module aqed_out (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        acc_out_offset,
        state_orig_issued,
        state_orig_in,
        state_orig_done,
        state_orig_done_ap_vld,
        state_dup_in,
        state_dup_issued,
        bmc_in_address0,
        bmc_in_ce0,
        bmc_in_q0,
        bmc_in_address1,
        bmc_in_ce1,
        bmc_in_q1,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [3:0] acc_out_offset;
input  [0:0] state_orig_issued;
input  [15:0] state_orig_in;
output  [0:0] state_orig_done;
output   state_orig_done_ap_vld;
input  [15:0] state_dup_in;
input  [0:0] state_dup_issued;
output  [4:0] bmc_in_address0;
output   bmc_in_ce0;
input  [15:0] bmc_in_q0;
output  [4:0] bmc_in_address1;
output   bmc_in_ce1;
input  [15:0] bmc_in_q1;
output  [0:0] ap_return_0;
output  [0:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[0:0] state_orig_done;
reg state_orig_done_ap_vld;
reg[4:0] bmc_in_address0;
reg bmc_in_ce0;
reg[4:0] bmc_in_address1;
reg bmc_in_ce1;
reg[0:0] ap_return_0;
reg[0:0] ap_return_1;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] state_out_count;
reg   [3:0] state_acc_out1_index;
reg   [0:0] state_qed_done;
reg   [0:0] state_qed_check;
wire   [0:0] state_orig_issued_lo_load_fu_273_p1;
reg   [15:0] state_out_count_load_reg_794;
wire   [0:0] brmerge_fu_351_p2;
reg   [0:0] brmerge_reg_814;
reg   [15:0] bmc_in_load_reg_823;
wire    ap_CS_fsm_state2;
reg   [15:0] bmc_in_load_1_reg_828;
reg   [15:0] bmc_in_load_2_reg_843;
wire    ap_CS_fsm_state3;
reg   [15:0] bmc_in_load_3_reg_848;
reg   [15:0] bmc_in_load_4_reg_863;
wire    ap_CS_fsm_state4;
reg   [15:0] bmc_in_load_5_reg_868;
wire   [4:0] acc_out_offset_cast2_fu_408_p1;
reg   [4:0] acc_out_offset_cast2_reg_873;
reg   [15:0] bmc_in_load_6_reg_889;
wire    ap_CS_fsm_state5;
reg   [15:0] bmc_in_load_7_reg_894;
wire   [4:0] load_index_cast_fu_457_p1;
reg   [4:0] load_index_cast_reg_909;
wire    ap_CS_fsm_state6;
reg   [15:0] bmc_in_load_8_reg_931;
reg   [15:0] bmc_in_load_9_reg_936;
wire    ap_CS_fsm_state7;
wire   [0:0] tmp_2_fu_497_p2;
reg   [0:0] tmp_2_reg_951;
wire   [0:0] tmp_3_fu_502_p2;
reg   [0:0] tmp_3_reg_956;
wire    ap_CS_fsm_state8;
wire   [0:0] tmp_4_fu_541_p2;
reg   [0:0] tmp_4_reg_971;
wire   [0:0] tmp_5_fu_546_p2;
reg   [0:0] tmp_5_reg_976;
wire    ap_CS_fsm_state9;
wire   [0:0] tmp_7_fu_604_p2;
reg   [0:0] tmp_7_reg_991;
wire   [0:0] tmp1_fu_623_p2;
reg   [0:0] tmp1_reg_996;
wire    ap_CS_fsm_state10;
wire   [0:0] tmp_8_fu_677_p2;
reg   [0:0] tmp_8_reg_1011;
wire   [0:0] tmp_9_fu_682_p2;
reg   [0:0] tmp_9_reg_1016;
wire   [0:0] tmp_13_fu_729_p2;
reg   [0:0] tmp_13_reg_1021;
wire    ap_CS_fsm_state11;
reg   [0:0] state_qed_done_flag_reg_239;
reg   [0:0] state_qed_done_loc_reg_255;
wire   [63:0] acc_out_offset_cast1_fu_268_p1;
wire   [63:0] sum_cast_fu_363_p1;
wire   [63:0] sum2_cast_fu_373_p1;
wire   [63:0] sum4_cast_fu_383_p1;
wire   [63:0] sum6_cast_fu_393_p1;
wire   [63:0] sum8_cast_fu_403_p1;
wire   [63:0] sum1_cast_fu_417_p1;
wire   [63:0] sum3_cast_fu_428_p1;
wire   [63:0] sum5_cast_fu_438_p1;
wire   [63:0] sum7_cast_fu_448_p1;
wire   [63:0] gepindex2_cast_fu_461_p1;
wire   [63:0] gepindex293_cast_fu_472_p1;
wire   [63:0] gepindex2102_cast_fu_482_p1;
wire   [63:0] gepindex2111_cast_fu_492_p1;
wire   [63:0] gepindex2120_cast_fu_512_p1;
wire   [63:0] gepindex2129_cast_fu_536_p1;
wire   [63:0] gepindex2138_cast_fu_570_p1;
wire   [63:0] gepindex2147_cast_fu_594_p1;
wire   [63:0] gepindex2156_cast_fu_648_p1;
wire   [63:0] gepindex2165_cast_fu_672_p1;
wire   [15:0] tmp_14_fu_733_p2;
wire   [0:0] tmp_s_fu_309_p2;
wire    ap_CS_fsm_state12;
wire   [0:0] p_state_qed_done_flag_fu_744_p2;
wire   [0:0] tmp_12_fu_718_p2;
wire   [0:0] rev_fu_297_p2;
wire   [0:0] ult_fu_291_p2;
wire   [0:0] tmp_1_fu_333_p2;
wire   [0:0] or_cond_fu_339_p2;
wire   [0:0] or_cond_not_fu_345_p2;
wire   [3:0] sum_fu_357_p2;
wire   [3:0] sum2_fu_368_p2;
wire   [3:0] sum4_fu_378_p2;
wire   [3:0] sum6_fu_388_p2;
wire   [3:0] sum8_fu_398_p2;
wire   [4:0] sum1_fu_411_p2;
wire   [4:0] sum3_fu_422_p2;
wire   [4:0] sum5_fu_433_p2;
wire   [4:0] sum7_fu_443_p2;
wire   [4:0] mem_index_gep1_fu_466_p2;
wire   [4:0] mem_index_gep2_fu_477_p2;
wire   [4:0] mem_index_gep3_fu_487_p2;
wire   [4:0] mem_index_gep4_fu_507_p2;
wire   [4:0] mem_index_gep5_fu_517_p2;
wire   [0:0] addrCmp_fu_522_p2;
wire   [4:0] gepindex_fu_528_p3;
wire   [4:0] mem_index_gep6_fu_551_p2;
wire   [0:0] addrCmp1_fu_556_p2;
wire   [4:0] gepindex1_fu_562_p3;
wire   [4:0] mem_index_gep7_fu_575_p2;
wire   [0:0] addrCmp2_fu_580_p2;
wire   [4:0] gepindex2_fu_586_p3;
wire   [0:0] tmp_6_fu_599_p2;
wire   [0:0] tmp4_fu_613_p2;
wire   [0:0] tmp3_fu_618_p2;
wire   [0:0] tmp2_fu_609_p2;
wire   [4:0] mem_index_gep8_fu_629_p2;
wire   [0:0] addrCmp3_fu_634_p2;
wire   [4:0] gepindex3_fu_640_p3;
wire   [4:0] mem_index_gep9_fu_653_p2;
wire   [0:0] addrCmp4_fu_658_p2;
wire   [4:0] gepindex4_fu_664_p3;
wire   [0:0] tmp_10_fu_687_p2;
wire   [0:0] tmp_11_fu_692_p2;
wire   [0:0] tmp8_fu_701_p2;
wire   [0:0] tmp7_fu_707_p2;
wire   [0:0] tmp6_fu_697_p2;
wire   [0:0] tmp5_fu_712_p2;
wire   [0:0] o2_qed_done_fu_749_p2;
reg   [0:0] ap_return_0_preg;
reg   [0:0] ap_return_1_preg;
reg   [11:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 state_out_count = 16'd0;
#0 state_acc_out1_index = 4'd0;
#0 state_qed_done = 1'd0;
#0 state_qed_check = 1'd0;
#0 ap_return_0_preg = 1'd0;
#0 ap_return_1_preg = 1'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_return_0_preg <= o2_qed_done_fu_749_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_return_1_preg <= state_qed_check;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((brmerge_fu_351_p2 == 1'd1) & (state_orig_issued_lo_load_fu_273_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((state_orig_issued_lo_load_fu_273_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        state_qed_done_flag_reg_239 <= 1'd0;
    end else if (((state_orig_issued_lo_load_fu_273_p1 == 1'd1) & (brmerge_reg_814 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        state_qed_done_flag_reg_239 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((((brmerge_fu_351_p2 == 1'd1) & (state_orig_issued_lo_load_fu_273_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((state_orig_issued_lo_load_fu_273_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        state_qed_done_loc_reg_255 <= state_qed_done;
    end else if (((state_orig_issued_lo_load_fu_273_p1 == 1'd1) & (brmerge_reg_814 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        state_qed_done_loc_reg_255 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        acc_out_offset_cast2_reg_873[3 : 0] <= acc_out_offset_cast2_fu_408_p1[3 : 0];
        bmc_in_load_4_reg_863 <= bmc_in_q0;
        bmc_in_load_5_reg_868 <= bmc_in_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bmc_in_load_1_reg_828 <= bmc_in_q1;
        bmc_in_load_reg_823 <= bmc_in_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bmc_in_load_2_reg_843 <= bmc_in_q0;
        bmc_in_load_3_reg_848 <= bmc_in_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        bmc_in_load_6_reg_889 <= bmc_in_q0;
        bmc_in_load_7_reg_894 <= bmc_in_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        bmc_in_load_8_reg_931 <= bmc_in_q0;
        bmc_in_load_9_reg_936 <= bmc_in_q1;
        load_index_cast_reg_909[3 : 0] <= load_index_cast_fu_457_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((state_orig_issued_lo_load_fu_273_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        brmerge_reg_814 <= brmerge_fu_351_p2;
    end
end

always @ (posedge ap_clk) begin
     if(ap_rst) begin
	state_acc_out1_index <= 0;
    end else   if (((tmp_s_fu_309_p2 == 1'd1) & (state_orig_issued_lo_load_fu_273_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        state_acc_out1_index <= acc_out_offset;
    end
end

always @ (posedge ap_clk) begin
     if(ap_rst) begin
	state_out_count <= 0;
    end else   if ((1'b1 == ap_CS_fsm_state11)) begin
        state_out_count <= tmp_14_fu_733_p2;
        tmp_13_reg_1021 <= tmp_13_fu_729_p2;
    end
end

always @ (posedge ap_clk) begin
   if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        state_out_count_load_reg_794 <= state_out_count;
    end
end

always @ (posedge ap_clk) begin
     if(ap_rst) begin
	state_qed_check <= 0;
    end else   if (((state_orig_issued_lo_load_fu_273_p1 == 1'd1) & (brmerge_reg_814 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        state_qed_check <= tmp_12_fu_718_p2;
    end
end

always @ (posedge ap_clk) begin
     if(ap_rst) begin
	state_qed_done <= 0;
    end else   if (((p_state_qed_done_flag_fu_744_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        state_qed_done <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp1_reg_996 <= tmp1_fu_623_p2;
        tmp_7_reg_991 <= tmp_7_fu_604_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_2_reg_951 <= tmp_2_fu_497_p2;
        tmp_3_reg_956 <= tmp_3_fu_502_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_4_reg_971 <= tmp_4_fu_541_p2;
        tmp_5_reg_976 <= tmp_5_fu_546_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_8_reg_1011 <= tmp_8_fu_677_p2;
        tmp_9_reg_1016 <= tmp_9_fu_682_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_return_0 = o2_qed_done_fu_749_p2;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_return_1 = state_qed_check;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        bmc_in_address0 = gepindex2156_cast_fu_648_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        bmc_in_address0 = gepindex2138_cast_fu_570_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        bmc_in_address0 = gepindex2120_cast_fu_512_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        bmc_in_address0 = gepindex2102_cast_fu_482_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        bmc_in_address0 = gepindex2_cast_fu_461_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        bmc_in_address0 = sum5_cast_fu_438_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        bmc_in_address0 = sum1_cast_fu_417_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        bmc_in_address0 = sum6_cast_fu_393_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        bmc_in_address0 = sum2_cast_fu_373_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        bmc_in_address0 = acc_out_offset_cast1_fu_268_p1;
    end else begin
        bmc_in_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        bmc_in_address1 = gepindex2165_cast_fu_672_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        bmc_in_address1 = gepindex2147_cast_fu_594_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        bmc_in_address1 = gepindex2129_cast_fu_536_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        bmc_in_address1 = gepindex2111_cast_fu_492_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        bmc_in_address1 = gepindex293_cast_fu_472_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        bmc_in_address1 = sum7_cast_fu_448_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        bmc_in_address1 = sum3_cast_fu_428_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        bmc_in_address1 = sum8_cast_fu_403_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        bmc_in_address1 = sum4_cast_fu_383_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        bmc_in_address1 = sum_cast_fu_363_p1;
    end else begin
        bmc_in_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        bmc_in_ce0 = 1'b1;
    end else begin
        bmc_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        bmc_in_ce1 = 1'b1;
    end else begin
        bmc_in_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        if ((state_orig_issued_lo_load_fu_273_p1 == 1'd1)) begin
            state_orig_done = rev_fu_297_p2;
        end else if ((state_orig_issued_lo_load_fu_273_p1 == 1'd0)) begin
            state_orig_done = 1'd0;
        end else begin
            state_orig_done = 'bx;
        end
    end else begin
        state_orig_done = 'bx;
    end
end

always @ (*) begin
    if ((((state_orig_issued_lo_load_fu_273_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((state_orig_issued_lo_load_fu_273_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        state_orig_done_ap_vld = 1'b1;
    end else begin
        state_orig_done_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((state_orig_issued_lo_load_fu_273_p1 == 1'd1) & (brmerge_fu_351_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & ((brmerge_fu_351_p2 == 1'd1) | (state_orig_issued_lo_load_fu_273_p1 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_out_offset_cast1_fu_268_p1 = acc_out_offset;

assign acc_out_offset_cast2_fu_408_p1 = acc_out_offset;

assign addrCmp1_fu_556_p2 = ((mem_index_gep6_fu_551_p2 > 5'd19) ? 1'b1 : 1'b0);

assign addrCmp2_fu_580_p2 = ((mem_index_gep7_fu_575_p2 > 5'd19) ? 1'b1 : 1'b0);

assign addrCmp3_fu_634_p2 = ((mem_index_gep8_fu_629_p2 > 5'd19) ? 1'b1 : 1'b0);

assign addrCmp4_fu_658_p2 = ((mem_index_gep9_fu_653_p2 > 5'd19) ? 1'b1 : 1'b0);

assign addrCmp_fu_522_p2 = ((mem_index_gep5_fu_517_p2 > 5'd19) ? 1'b1 : 1'b0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign brmerge_fu_351_p2 = (state_qed_done | or_cond_not_fu_345_p2);

assign gepindex1_fu_562_p3 = ((addrCmp1_fu_556_p2[0:0] === 1'b1) ? 5'd19 : mem_index_gep6_fu_551_p2);

assign gepindex2102_cast_fu_482_p1 = mem_index_gep2_fu_477_p2;

assign gepindex2111_cast_fu_492_p1 = mem_index_gep3_fu_487_p2;

assign gepindex2120_cast_fu_512_p1 = mem_index_gep4_fu_507_p2;

assign gepindex2129_cast_fu_536_p1 = gepindex_fu_528_p3;

assign gepindex2138_cast_fu_570_p1 = gepindex1_fu_562_p3;

assign gepindex2147_cast_fu_594_p1 = gepindex2_fu_586_p3;

assign gepindex2156_cast_fu_648_p1 = gepindex3_fu_640_p3;

assign gepindex2165_cast_fu_672_p1 = gepindex4_fu_664_p3;

assign gepindex293_cast_fu_472_p1 = mem_index_gep1_fu_466_p2;

assign gepindex2_cast_fu_461_p1 = state_acc_out1_index;

assign gepindex2_fu_586_p3 = ((addrCmp2_fu_580_p2[0:0] === 1'b1) ? 5'd19 : mem_index_gep7_fu_575_p2);

assign gepindex3_fu_640_p3 = ((addrCmp3_fu_634_p2[0:0] === 1'b1) ? 5'd19 : mem_index_gep8_fu_629_p2);

assign gepindex4_fu_664_p3 = ((addrCmp4_fu_658_p2[0:0] === 1'b1) ? 5'd19 : mem_index_gep9_fu_653_p2);

assign gepindex_fu_528_p3 = ((addrCmp_fu_522_p2[0:0] === 1'b1) ? 5'd19 : mem_index_gep5_fu_517_p2);

assign load_index_cast_fu_457_p1 = state_acc_out1_index;

assign mem_index_gep1_fu_466_p2 = (load_index_cast_fu_457_p1 + 5'd1);

assign mem_index_gep2_fu_477_p2 = (load_index_cast_reg_909 + 5'd2);

assign mem_index_gep3_fu_487_p2 = (load_index_cast_reg_909 + 5'd3);

assign mem_index_gep4_fu_507_p2 = (load_index_cast_reg_909 + 5'd4);

assign mem_index_gep5_fu_517_p2 = (load_index_cast_reg_909 + 5'd5);

assign mem_index_gep6_fu_551_p2 = (load_index_cast_reg_909 + 5'd6);

assign mem_index_gep7_fu_575_p2 = (load_index_cast_reg_909 + 5'd7);

assign mem_index_gep8_fu_629_p2 = (load_index_cast_reg_909 + 5'd8);

assign mem_index_gep9_fu_653_p2 = (load_index_cast_reg_909 + 5'd9);

assign o2_qed_done_fu_749_p2 = (tmp_13_reg_1021 | state_qed_done_loc_reg_255);

assign or_cond_fu_339_p2 = (tmp_1_fu_333_p2 & state_dup_issued);

assign or_cond_not_fu_345_p2 = (or_cond_fu_339_p2 ^ 1'd1);

assign p_state_qed_done_flag_fu_744_p2 = (tmp_13_reg_1021 | state_qed_done_flag_reg_239);

assign rev_fu_297_p2 = (ult_fu_291_p2 ^ 1'd1);

assign state_orig_issued_lo_load_fu_273_p1 = state_orig_issued;

assign sum1_cast_fu_417_p1 = sum1_fu_411_p2;

assign sum1_fu_411_p2 = (acc_out_offset_cast2_fu_408_p1 + 5'd6);

assign sum2_cast_fu_373_p1 = sum2_fu_368_p2;

assign sum2_fu_368_p2 = (acc_out_offset + 4'd2);

assign sum3_cast_fu_428_p1 = sum3_fu_422_p2;

assign sum3_fu_422_p2 = (acc_out_offset_cast2_fu_408_p1 + 5'd7);

assign sum4_cast_fu_383_p1 = sum4_fu_378_p2;

assign sum4_fu_378_p2 = (acc_out_offset + 4'd3);

assign sum5_cast_fu_438_p1 = sum5_fu_433_p2;

assign sum5_fu_433_p2 = (acc_out_offset_cast2_reg_873 + 5'd8);

assign sum6_cast_fu_393_p1 = sum6_fu_388_p2;

assign sum6_fu_388_p2 = (acc_out_offset + 4'd4);

assign sum7_cast_fu_448_p1 = sum7_fu_443_p2;

assign sum7_fu_443_p2 = (acc_out_offset_cast2_reg_873 + 5'd9);

assign sum8_cast_fu_403_p1 = sum8_fu_398_p2;

assign sum8_fu_398_p2 = (acc_out_offset + 4'd5);

assign sum_cast_fu_363_p1 = sum_fu_357_p2;

assign sum_fu_357_p2 = (acc_out_offset + 4'd1);

assign tmp1_fu_623_p2 = (tmp3_fu_618_p2 & tmp2_fu_609_p2);

assign tmp2_fu_609_p2 = (tmp_3_reg_956 & tmp_2_reg_951);

assign tmp3_fu_618_p2 = (tmp_4_reg_971 & tmp4_fu_613_p2);

assign tmp4_fu_613_p2 = (tmp_6_fu_599_p2 & tmp_5_reg_976);

assign tmp5_fu_712_p2 = (tmp7_fu_707_p2 & tmp6_fu_697_p2);

assign tmp6_fu_697_p2 = (tmp_8_reg_1011 & tmp_7_reg_991);

assign tmp7_fu_707_p2 = (tmp_9_reg_1016 & tmp8_fu_701_p2);

assign tmp8_fu_701_p2 = (tmp_11_fu_692_p2 & tmp_10_fu_687_p2);

assign tmp_10_fu_687_p2 = ((bmc_in_q0 == bmc_in_load_8_reg_931) ? 1'b1 : 1'b0);

assign tmp_11_fu_692_p2 = ((bmc_in_q1 == bmc_in_load_9_reg_936) ? 1'b1 : 1'b0);

assign tmp_12_fu_718_p2 = (tmp5_fu_712_p2 & tmp1_reg_996);

assign tmp_13_fu_729_p2 = ((state_out_count_load_reg_794 > state_dup_in) ? 1'b1 : 1'b0);

assign tmp_14_fu_733_p2 = (state_out_count_load_reg_794 + 16'd1);

assign tmp_1_fu_333_p2 = ((state_out_count == state_dup_in) ? 1'b1 : 1'b0);

assign tmp_2_fu_497_p2 = ((bmc_in_q0 == bmc_in_load_reg_823) ? 1'b1 : 1'b0);

assign tmp_3_fu_502_p2 = ((bmc_in_q1 == bmc_in_load_1_reg_828) ? 1'b1 : 1'b0);

assign tmp_4_fu_541_p2 = ((bmc_in_q0 == bmc_in_load_2_reg_843) ? 1'b1 : 1'b0);

assign tmp_5_fu_546_p2 = ((bmc_in_q1 == bmc_in_load_3_reg_848) ? 1'b1 : 1'b0);

assign tmp_6_fu_599_p2 = ((bmc_in_q0 == bmc_in_load_4_reg_863) ? 1'b1 : 1'b0);

assign tmp_7_fu_604_p2 = ((bmc_in_q1 == bmc_in_load_5_reg_868) ? 1'b1 : 1'b0);

assign tmp_8_fu_677_p2 = ((bmc_in_q0 == bmc_in_load_6_reg_889) ? 1'b1 : 1'b0);

assign tmp_9_fu_682_p2 = ((bmc_in_q1 == bmc_in_load_7_reg_894) ? 1'b1 : 1'b0);

assign tmp_s_fu_309_p2 = ((state_out_count == state_orig_in) ? 1'b1 : 1'b0);

assign ult_fu_291_p2 = ((state_out_count < state_orig_in) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    acc_out_offset_cast2_reg_873[4] <= 1'b0;
    load_index_cast_reg_909[4] <= 1'b0;
end

endmodule //aqed_out
