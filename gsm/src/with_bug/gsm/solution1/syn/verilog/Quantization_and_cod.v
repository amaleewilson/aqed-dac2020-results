// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Quantization_and_cod (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        LAR_offset
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [3:0] LAR_offset;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] LARc_out_address0;
reg    LARc_out_ce0;
reg    LARc_out_we0;
reg   [7:0] LARc_out_d0;
wire   [7:0] LARc_out_q0;
reg   [3:0] LARc_out_address1;
reg    LARc_out_ce1;
reg    LARc_out_we1;
reg   [7:0] LARc_out_d1;
wire   [7:0] LARc_out_q1;
reg  signed [7:0] reg_253;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state5;
reg  signed [7:0] reg_257;
reg   [3:0] LARc_out_addr_reg_1080;
reg   [3:0] LARc_out_addr_1_reg_1085;
reg   [3:0] LARc_out_addr_2_reg_1090;
reg   [3:0] LARc_out_addr_3_reg_1095;
reg   [7:0] LARc_out_load_2_reg_1100;
wire    ap_CS_fsm_state3;
reg   [7:0] LARc_out_load_3_reg_1106;
reg   [3:0] LARc_out_addr_4_reg_1112;
reg   [3:0] LARc_out_addr_5_reg_1117;
reg  signed [7:0] LARc_out_load_4_reg_1122;
wire    ap_CS_fsm_state4;
reg   [7:0] LARc_out_load_5_reg_1127;
reg   [3:0] LARc_out_addr_6_reg_1133;
reg   [3:0] LARc_out_addr_7_reg_1138;
wire    grp_gsm_add_fu_197_ap_ready;
reg   [15:0] grp_gsm_add_fu_197_a;
reg   [12:0] grp_gsm_add_fu_197_b;
wire   [15:0] grp_gsm_add_fu_197_ap_return;
wire    grp_gsm_add_fu_204_ap_ready;
wire   [15:0] grp_gsm_add_fu_204_ap_return;
wire    grp_gsm_add_fu_212_ap_ready;
reg   [15:0] grp_gsm_add_fu_212_a;
reg   [12:0] grp_gsm_add_fu_212_b;
wire   [15:0] grp_gsm_add_fu_212_ap_return;
wire    grp_gsm_add_fu_219_ap_ready;
wire   [15:0] grp_gsm_add_fu_219_ap_return;
wire  signed [15:0] temp_fu_377_p1;
wire  signed [15:0] temp_6_fu_575_p1;
wire    ap_CS_fsm_state6;
wire  signed [15:0] temp_12_fu_745_p1;
wire    ap_CS_fsm_state7;
wire  signed [15:0] temp_18_fu_916_p1;
wire    ap_CS_fsm_state8;
wire  signed [15:0] temp_3_fu_477_p1;
wire  signed [15:0] temp_9_fu_673_p1;
wire  signed [15:0] temp_15_fu_843_p1;
wire  signed [15:0] temp_21_fu_989_p1;
wire   [63:0] LAR_offset_cast1_fu_261_p1;
wire   [63:0] sum_cast_fu_272_p1;
wire   [63:0] sum2_cast_fu_282_p1;
wire   [63:0] sum4_cast_fu_292_p1;
wire   [63:0] sum6_cast_fu_302_p1;
wire   [63:0] sum8_cast_fu_312_p1;
wire   [63:0] sum3_cast_fu_322_p1;
wire   [63:0] sum5_cast_fu_332_p1;
wire   [7:0] tmp_11_fu_428_p3;
wire   [7:0] tmp_21_fu_528_p3;
wire   [7:0] tmp_28_fu_626_p3;
wire   [7:0] tmp_37_fu_724_p3;
wire   [7:0] tmp_43_fu_796_p3;
wire   [7:0] tmp_51_fu_894_p3;
wire   [7:0] tmp_57_fu_967_p3;
wire   [7:0] tmp_63_fu_1040_p3;
wire   [3:0] sum_fu_266_p2;
wire   [3:0] sum2_fu_277_p2;
wire   [3:0] sum4_fu_287_p2;
wire   [3:0] sum6_fu_297_p2;
wire   [3:0] sum8_fu_307_p2;
wire   [3:0] sum3_fu_317_p2;
wire   [3:0] sum5_fu_327_p2;
wire   [21:0] tmp_fu_337_p3;
wire   [19:0] tmp_1_fu_349_p3;
wire  signed [22:0] p_shl1_cast_fu_357_p1;
wire  signed [22:0] p_shl9_cast_fu_345_p1;
wire   [22:0] tmp_28_i_fu_361_p2;
wire   [7:0] tmp_13_fu_367_p4;
wire  signed [6:0] grp_fu_233_p4;
wire   [1:0] tmp_17_fu_386_p4;
wire  signed [7:0] temp_3_cast_fu_382_p1;
wire   [0:0] icmp_fu_396_p2;
wire   [0:0] tmp_9_fu_402_p2;
wire   [0:0] tmp_3_fu_422_p2;
wire   [7:0] tmp_13_cast_fu_414_p3;
wire   [7:0] tmp_s_fu_408_p2;
wire   [21:0] tmp_2_fu_437_p3;
wire   [19:0] tmp_7_fu_449_p3;
wire  signed [22:0] p_shl8_cast_fu_457_p1;
wire  signed [22:0] p_shl7_cast_fu_445_p1;
wire   [22:0] tmp_28_i2_fu_461_p2;
wire   [7:0] tmp_22_fu_467_p4;
wire  signed [6:0] grp_fu_243_p4;
wire   [1:0] tmp_26_fu_486_p4;
wire  signed [7:0] temp_7_cast_fu_482_p1;
wire   [0:0] icmp1_fu_496_p2;
wire   [0:0] tmp_15_fu_502_p2;
wire   [0:0] tmp_4_fu_522_p2;
wire   [7:0] tmp_22_cast_fu_514_p3;
wire   [7:0] tmp_19_fu_508_p2;
wire   [21:0] tmp_23_fu_537_p3;
wire   [19:0] tmp_24_fu_548_p3;
wire  signed [22:0] p_shl6_cast_fu_555_p1;
wire  signed [22:0] p_shl5_cast_fu_544_p1;
wire   [22:0] tmp_28_i6_fu_559_p2;
wire   [7:0] tmp_29_fu_565_p4;
wire   [2:0] tmp_33_fu_584_p4;
wire  signed [7:0] temp_11_cast_fu_580_p1;
wire   [0:0] icmp2_fu_594_p2;
wire   [0:0] tmp_25_fu_600_p2;
wire   [0:0] tmp_5_fu_620_p2;
wire   [7:0] tmp_29_cast_fu_612_p3;
wire   [7:0] tmp_27_fu_606_p2;
wire   [21:0] tmp_30_fu_635_p3;
wire   [19:0] tmp_31_fu_646_p3;
wire  signed [22:0] p_shl4_cast_fu_653_p1;
wire  signed [22:0] p_shl3_cast_fu_642_p1;
wire   [22:0] tmp_28_i1_fu_657_p2;
wire   [7:0] tmp_36_fu_663_p4;
wire   [2:0] tmp_39_fu_682_p4;
wire  signed [7:0] temp_15_cast_fu_678_p1;
wire   [0:0] icmp3_fu_692_p2;
wire   [0:0] tmp_32_fu_698_p2;
wire   [0:0] tmp_35_fu_718_p2;
wire   [7:0] tmp_36_cast_fu_710_p3;
wire   [7:0] tmp_34_fu_704_p2;
wire  signed [22:0] tmp_28_i3_fu_1049_p2;
wire   [7:0] tmp_42_fu_736_p4;
wire   [3:0] tmp_47_fu_754_p4;
wire  signed [7:0] temp_19_cast_fu_750_p1;
wire   [0:0] icmp4_fu_764_p2;
wire   [0:0] tmp_38_fu_770_p2;
wire   [0:0] tmp_41_fu_790_p2;
wire   [7:0] tmp_42_cast_fu_782_p3;
wire   [7:0] tmp_40_fu_776_p2;
wire   [21:0] tmp_44_fu_805_p3;
wire   [17:0] tmp_45_fu_816_p3;
wire  signed [22:0] p_shl_cast_fu_812_p1;
wire  signed [22:0] p_shl2_cast_fu_823_p1;
wire   [22:0] tmp_28_i4_fu_827_p2;
wire   [7:0] tmp_50_fu_833_p4;
wire   [3:0] tmp_53_fu_852_p4;
wire  signed [7:0] temp_23_cast_fu_848_p1;
wire   [0:0] icmp5_fu_862_p2;
wire   [0:0] tmp_46_fu_868_p2;
wire   [0:0] tmp_49_fu_888_p2;
wire   [7:0] tmp_50_cast_fu_880_p3;
wire   [7:0] tmp_48_fu_874_p2;
wire  signed [22:0] tmp_28_i5_fu_1056_p2;
wire   [7:0] tmp_56_fu_907_p4;
wire   [4:0] tmp_59_fu_925_p4;
wire  signed [7:0] temp_27_cast_fu_921_p1;
wire   [0:0] icmp6_fu_935_p2;
wire   [0:0] tmp_52_fu_941_p2;
wire   [0:0] tmp_55_fu_961_p2;
wire   [7:0] tmp_56_cast_fu_953_p3;
wire   [7:0] tmp_54_fu_947_p2;
wire  signed [22:0] tmp_28_i7_fu_1063_p2;
wire   [7:0] tmp_62_fu_980_p4;
wire   [4:0] tmp_65_fu_998_p4;
wire  signed [7:0] temp_31_cast_fu_994_p1;
wire   [0:0] icmp7_fu_1008_p2;
wire   [0:0] tmp_58_fu_1014_p2;
wire   [0:0] tmp_61_fu_1034_p2;
wire   [7:0] tmp_62_cast_fu_1026_p3;
wire   [7:0] tmp_60_fu_1020_p2;
wire   [14:0] tmp_28_i3_fu_1049_p0;
wire   [14:0] tmp_28_i5_fu_1056_p0;
wire   [14:0] tmp_28_i7_fu_1063_p0;
reg   [7:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
end

Quantization_and_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
LARc_out_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LARc_out_address0),
    .ce0(LARc_out_ce0),
    .we0(LARc_out_we0),
    .d0(LARc_out_d0),
    .q0(LARc_out_q0),
    .address1(LARc_out_address1),
    .ce1(LARc_out_ce1),
    .we1(LARc_out_we1),
    .d1(LARc_out_d1),
    .q1(LARc_out_q1)
);

gsm_add grp_gsm_add_fu_197(
    .ap_ready(grp_gsm_add_fu_197_ap_ready),
    .a(grp_gsm_add_fu_197_a),
    .b(grp_gsm_add_fu_197_b),
    .ap_return(grp_gsm_add_fu_197_ap_return)
);

gsm_add grp_gsm_add_fu_204(
    .ap_ready(grp_gsm_add_fu_204_ap_ready),
    .a(grp_gsm_add_fu_197_ap_return),
    .b(13'd256),
    .ap_return(grp_gsm_add_fu_204_ap_return)
);

gsm_add grp_gsm_add_fu_212(
    .ap_ready(grp_gsm_add_fu_212_ap_ready),
    .a(grp_gsm_add_fu_212_a),
    .b(grp_gsm_add_fu_212_b),
    .ap_return(grp_gsm_add_fu_212_ap_return)
);

gsm_add grp_gsm_add_fu_219(
    .ap_ready(grp_gsm_add_fu_219_ap_ready),
    .a(grp_gsm_add_fu_212_ap_return),
    .b(13'd256),
    .ap_return(grp_gsm_add_fu_219_ap_return)
);

aqed_top_mul_mul_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 23 ))
aqed_top_mul_mul_eOg_U19(
    .din0(tmp_28_i3_fu_1049_p0),
    .din1(LARc_out_load_4_reg_1122),
    .dout(tmp_28_i3_fu_1049_p2)
);

aqed_top_mul_mul_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 23 ))
aqed_top_mul_mul_eOg_U20(
    .din0(tmp_28_i5_fu_1056_p0),
    .din1(reg_253),
    .dout(tmp_28_i5_fu_1056_p2)
);

aqed_top_mul_mul_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 23 ))
aqed_top_mul_mul_eOg_U21(
    .din0(tmp_28_i7_fu_1063_p0),
    .din1(reg_257),
    .dout(tmp_28_i7_fu_1063_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        LARc_out_addr_1_reg_1085 <= sum_cast_fu_272_p1;
        LARc_out_addr_reg_1080 <= LAR_offset_cast1_fu_261_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        LARc_out_addr_2_reg_1090 <= sum2_cast_fu_282_p1;
        LARc_out_addr_3_reg_1095 <= sum4_cast_fu_292_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        LARc_out_addr_4_reg_1112 <= sum6_cast_fu_302_p1;
        LARc_out_addr_5_reg_1117 <= sum8_cast_fu_312_p1;
        LARc_out_load_2_reg_1100 <= LARc_out_q0;
        LARc_out_load_3_reg_1106 <= LARc_out_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        LARc_out_addr_6_reg_1133 <= sum3_cast_fu_322_p1;
        LARc_out_addr_7_reg_1138 <= sum5_cast_fu_332_p1;
        LARc_out_load_4_reg_1122 <= LARc_out_q0;
        LARc_out_load_5_reg_1127 <= LARc_out_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_253 <= LARc_out_q0;
        reg_257 <= LARc_out_q1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        LARc_out_address0 = LARc_out_addr_6_reg_1133;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        LARc_out_address0 = LARc_out_addr_4_reg_1112;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        LARc_out_address0 = LARc_out_addr_2_reg_1090;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        LARc_out_address0 = LARc_out_addr_reg_1080;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        LARc_out_address0 = sum3_cast_fu_322_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        LARc_out_address0 = sum6_cast_fu_302_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        LARc_out_address0 = sum2_cast_fu_282_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        LARc_out_address0 = LAR_offset_cast1_fu_261_p1;
    end else begin
        LARc_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        LARc_out_address1 = LARc_out_addr_7_reg_1138;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        LARc_out_address1 = LARc_out_addr_5_reg_1117;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        LARc_out_address1 = LARc_out_addr_3_reg_1095;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        LARc_out_address1 = LARc_out_addr_1_reg_1085;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        LARc_out_address1 = sum5_cast_fu_332_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        LARc_out_address1 = sum8_cast_fu_312_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        LARc_out_address1 = sum4_cast_fu_292_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        LARc_out_address1 = sum_cast_fu_272_p1;
    end else begin
        LARc_out_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        LARc_out_ce0 = 1'b1;
    end else begin
        LARc_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        LARc_out_ce1 = 1'b1;
    end else begin
        LARc_out_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        LARc_out_d0 = tmp_57_fu_967_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        LARc_out_d0 = tmp_43_fu_796_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        LARc_out_d0 = tmp_28_fu_626_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        LARc_out_d0 = tmp_11_fu_428_p3;
    end else begin
        LARc_out_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        LARc_out_d1 = tmp_63_fu_1040_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        LARc_out_d1 = tmp_51_fu_894_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        LARc_out_d1 = tmp_37_fu_724_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        LARc_out_d1 = tmp_21_fu_528_p3;
    end else begin
        LARc_out_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        LARc_out_we0 = 1'b1;
    end else begin
        LARc_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        LARc_out_we1 = 1'b1;
    end else begin
        LARc_out_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_gsm_add_fu_197_a = temp_18_fu_916_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_gsm_add_fu_197_a = temp_12_fu_745_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_gsm_add_fu_197_a = temp_6_fu_575_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_gsm_add_fu_197_a = temp_fu_377_p1;
    end else begin
        grp_gsm_add_fu_197_a = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_gsm_add_fu_197_b = 13'd7851;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_gsm_add_fu_197_b = 13'd94;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_gsm_add_fu_197_b = 13'd2048;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_gsm_add_fu_197_b = 13'd0;
    end else begin
        grp_gsm_add_fu_197_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_gsm_add_fu_212_a = temp_21_fu_989_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_gsm_add_fu_212_a = temp_15_fu_843_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_gsm_add_fu_212_a = temp_9_fu_673_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_gsm_add_fu_212_a = temp_3_fu_477_p1;
    end else begin
        grp_gsm_add_fu_212_a = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_gsm_add_fu_212_b = 13'd7048;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_gsm_add_fu_212_b = 13'd6400;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_gsm_add_fu_212_b = 13'd5632;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_gsm_add_fu_212_b = 13'd0;
    end else begin
        grp_gsm_add_fu_212_b = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LAR_offset_cast1_fu_261_p1 = LAR_offset;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign grp_fu_233_p4 = {{grp_gsm_add_fu_204_ap_return[15:9]}};

assign grp_fu_243_p4 = {{grp_gsm_add_fu_219_ap_return[15:9]}};

assign icmp1_fu_496_p2 = ((tmp_26_fu_486_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp2_fu_594_p2 = (($signed(tmp_33_fu_584_p4) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign icmp3_fu_692_p2 = (($signed(tmp_39_fu_682_p4) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign icmp4_fu_764_p2 = (($signed(tmp_47_fu_754_p4) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign icmp5_fu_862_p2 = (($signed(tmp_53_fu_852_p4) > $signed(4'd0)) ? 1'b1 : 1'b0);

assign icmp6_fu_935_p2 = (($signed(tmp_59_fu_925_p4) > $signed(5'd0)) ? 1'b1 : 1'b0);

assign icmp7_fu_1008_p2 = (($signed(tmp_65_fu_998_p4) > $signed(5'd0)) ? 1'b1 : 1'b0);

assign icmp_fu_396_p2 = ((tmp_17_fu_386_p4 == 2'd1) ? 1'b1 : 1'b0);

assign p_shl1_cast_fu_357_p1 = $signed(tmp_1_fu_349_p3);

assign p_shl2_cast_fu_823_p1 = $signed(tmp_45_fu_816_p3);

assign p_shl3_cast_fu_642_p1 = $signed(tmp_30_fu_635_p3);

assign p_shl4_cast_fu_653_p1 = $signed(tmp_31_fu_646_p3);

assign p_shl5_cast_fu_544_p1 = $signed(tmp_23_fu_537_p3);

assign p_shl6_cast_fu_555_p1 = $signed(tmp_24_fu_548_p3);

assign p_shl7_cast_fu_445_p1 = $signed(tmp_2_fu_437_p3);

assign p_shl8_cast_fu_457_p1 = $signed(tmp_7_fu_449_p3);

assign p_shl9_cast_fu_345_p1 = $signed(tmp_fu_337_p3);

assign p_shl_cast_fu_812_p1 = $signed(tmp_44_fu_805_p3);

assign sum2_cast_fu_282_p1 = sum2_fu_277_p2;

assign sum2_fu_277_p2 = (4'd2 + LAR_offset);

assign sum3_cast_fu_322_p1 = sum3_fu_317_p2;

assign sum3_fu_317_p2 = (4'd6 + LAR_offset);

assign sum4_cast_fu_292_p1 = sum4_fu_287_p2;

assign sum4_fu_287_p2 = (4'd3 + LAR_offset);

assign sum5_cast_fu_332_p1 = sum5_fu_327_p2;

assign sum5_fu_327_p2 = (4'd7 + LAR_offset);

assign sum6_cast_fu_302_p1 = sum6_fu_297_p2;

assign sum6_fu_297_p2 = (4'd4 + LAR_offset);

assign sum8_cast_fu_312_p1 = sum8_fu_307_p2;

assign sum8_fu_307_p2 = (4'd5 + LAR_offset);

assign sum_cast_fu_272_p1 = sum_fu_266_p2;

assign sum_fu_266_p2 = (4'd1 + LAR_offset);

assign temp_11_cast_fu_580_p1 = grp_fu_233_p4;

assign temp_12_fu_745_p1 = $signed(tmp_42_fu_736_p4);

assign temp_15_cast_fu_678_p1 = grp_fu_243_p4;

assign temp_15_fu_843_p1 = $signed(tmp_50_fu_833_p4);

assign temp_18_fu_916_p1 = $signed(tmp_56_fu_907_p4);

assign temp_19_cast_fu_750_p1 = grp_fu_233_p4;

assign temp_21_fu_989_p1 = $signed(tmp_62_fu_980_p4);

assign temp_23_cast_fu_848_p1 = grp_fu_243_p4;

assign temp_27_cast_fu_921_p1 = grp_fu_233_p4;

assign temp_31_cast_fu_994_p1 = grp_fu_243_p4;

assign temp_3_cast_fu_382_p1 = grp_fu_233_p4;

assign temp_3_fu_477_p1 = $signed(tmp_22_fu_467_p4);

assign temp_6_fu_575_p1 = $signed(tmp_29_fu_565_p4);

assign temp_7_cast_fu_482_p1 = grp_fu_243_p4;

assign temp_9_fu_673_p1 = $signed(tmp_36_fu_663_p4);

assign temp_fu_377_p1 = $signed(tmp_13_fu_367_p4);

assign tmp_11_fu_428_p3 = ((tmp_3_fu_422_p2[0:0] === 1'b1) ? tmp_13_cast_fu_414_p3 : tmp_s_fu_408_p2);

assign tmp_13_cast_fu_414_p3 = ((icmp_fu_396_p2[0:0] === 1'b1) ? 8'd63 : 8'd0);

assign tmp_13_fu_367_p4 = {{tmp_28_i_fu_361_p2[22:15]}};

assign tmp_15_fu_502_p2 = (($signed(grp_fu_243_p4) < $signed(7'd96)) ? 1'b1 : 1'b0);

assign tmp_17_fu_386_p4 = {{grp_gsm_add_fu_204_ap_return[15:14]}};

assign tmp_19_fu_508_p2 = ($signed(8'd32) + $signed(temp_7_cast_fu_482_p1));

assign tmp_1_fu_349_p3 = {{reg_253}, {12'd0}};

assign tmp_21_fu_528_p3 = ((tmp_4_fu_522_p2[0:0] === 1'b1) ? tmp_22_cast_fu_514_p3 : tmp_19_fu_508_p2);

assign tmp_22_cast_fu_514_p3 = ((icmp1_fu_496_p2[0:0] === 1'b1) ? 8'd63 : 8'd0);

assign tmp_22_fu_467_p4 = {{tmp_28_i2_fu_461_p2[22:15]}};

assign tmp_23_fu_537_p3 = {{LARc_out_load_2_reg_1100}, {14'd0}};

assign tmp_24_fu_548_p3 = {{LARc_out_load_2_reg_1100}, {12'd0}};

assign tmp_25_fu_600_p2 = (($signed(grp_fu_233_p4) < $signed(7'd112)) ? 1'b1 : 1'b0);

assign tmp_26_fu_486_p4 = {{grp_gsm_add_fu_219_ap_return[15:14]}};

assign tmp_27_fu_606_p2 = ($signed(8'd16) + $signed(temp_11_cast_fu_580_p1));

assign tmp_28_fu_626_p3 = ((tmp_5_fu_620_p2[0:0] === 1'b1) ? tmp_29_cast_fu_612_p3 : tmp_27_fu_606_p2);

assign tmp_28_i1_fu_657_p2 = ($signed(p_shl4_cast_fu_653_p1) + $signed(p_shl3_cast_fu_642_p1));

assign tmp_28_i2_fu_461_p2 = ($signed(p_shl8_cast_fu_457_p1) + $signed(p_shl7_cast_fu_445_p1));

assign tmp_28_i3_fu_1049_p0 = 23'd13964;

assign tmp_28_i4_fu_827_p2 = ($signed(p_shl_cast_fu_812_p1) - $signed(p_shl2_cast_fu_823_p1));

assign tmp_28_i5_fu_1056_p0 = 23'd8534;

assign tmp_28_i6_fu_559_p2 = ($signed(p_shl6_cast_fu_555_p1) + $signed(p_shl5_cast_fu_544_p1));

assign tmp_28_i7_fu_1063_p0 = 23'd9036;

assign tmp_28_i_fu_361_p2 = ($signed(p_shl1_cast_fu_357_p1) + $signed(p_shl9_cast_fu_345_p1));

assign tmp_29_cast_fu_612_p3 = ((icmp2_fu_594_p2[0:0] === 1'b1) ? 8'd31 : 8'd0);

assign tmp_29_fu_565_p4 = {{tmp_28_i6_fu_559_p2[22:15]}};

assign tmp_2_fu_437_p3 = {{reg_257}, {14'd0}};

assign tmp_30_fu_635_p3 = {{LARc_out_load_3_reg_1106}, {14'd0}};

assign tmp_31_fu_646_p3 = {{LARc_out_load_3_reg_1106}, {12'd0}};

assign tmp_32_fu_698_p2 = (($signed(grp_fu_243_p4) < $signed(7'd112)) ? 1'b1 : 1'b0);

assign tmp_33_fu_584_p4 = {{grp_gsm_add_fu_204_ap_return[15:13]}};

assign tmp_34_fu_704_p2 = ($signed(8'd16) + $signed(temp_15_cast_fu_678_p1));

assign tmp_35_fu_718_p2 = (tmp_32_fu_698_p2 | icmp3_fu_692_p2);

assign tmp_36_cast_fu_710_p3 = ((icmp3_fu_692_p2[0:0] === 1'b1) ? 8'd31 : 8'd0);

assign tmp_36_fu_663_p4 = {{tmp_28_i1_fu_657_p2[22:15]}};

assign tmp_37_fu_724_p3 = ((tmp_35_fu_718_p2[0:0] === 1'b1) ? tmp_36_cast_fu_710_p3 : tmp_34_fu_704_p2);

assign tmp_38_fu_770_p2 = (($signed(grp_fu_233_p4) < $signed(7'd120)) ? 1'b1 : 1'b0);

assign tmp_39_fu_682_p4 = {{grp_gsm_add_fu_219_ap_return[15:13]}};

assign tmp_3_fu_422_p2 = (tmp_9_fu_402_p2 | icmp_fu_396_p2);

assign tmp_40_fu_776_p2 = ($signed(8'd8) + $signed(temp_19_cast_fu_750_p1));

assign tmp_41_fu_790_p2 = (tmp_38_fu_770_p2 | icmp4_fu_764_p2);

assign tmp_42_cast_fu_782_p3 = ((icmp4_fu_764_p2[0:0] === 1'b1) ? 8'd15 : 8'd0);

assign tmp_42_fu_736_p4 = {{tmp_28_i3_fu_1049_p2[22:15]}};

assign tmp_43_fu_796_p3 = ((tmp_41_fu_790_p2[0:0] === 1'b1) ? tmp_42_cast_fu_782_p3 : tmp_40_fu_776_p2);

assign tmp_44_fu_805_p3 = {{LARc_out_load_5_reg_1127}, {14'd0}};

assign tmp_45_fu_816_p3 = {{LARc_out_load_5_reg_1127}, {10'd0}};

assign tmp_46_fu_868_p2 = (($signed(grp_fu_243_p4) < $signed(7'd120)) ? 1'b1 : 1'b0);

assign tmp_47_fu_754_p4 = {{grp_gsm_add_fu_204_ap_return[15:12]}};

assign tmp_48_fu_874_p2 = ($signed(8'd8) + $signed(temp_23_cast_fu_848_p1));

assign tmp_49_fu_888_p2 = (tmp_46_fu_868_p2 | icmp5_fu_862_p2);

assign tmp_4_fu_522_p2 = (tmp_15_fu_502_p2 | icmp1_fu_496_p2);

assign tmp_50_cast_fu_880_p3 = ((icmp5_fu_862_p2[0:0] === 1'b1) ? 8'd15 : 8'd0);

assign tmp_50_fu_833_p4 = {{tmp_28_i4_fu_827_p2[22:15]}};

assign tmp_51_fu_894_p3 = ((tmp_49_fu_888_p2[0:0] === 1'b1) ? tmp_50_cast_fu_880_p3 : tmp_48_fu_874_p2);

assign tmp_52_fu_941_p2 = (($signed(grp_fu_233_p4) < $signed(7'd124)) ? 1'b1 : 1'b0);

assign tmp_53_fu_852_p4 = {{grp_gsm_add_fu_219_ap_return[15:12]}};

assign tmp_54_fu_947_p2 = ($signed(8'd4) + $signed(temp_27_cast_fu_921_p1));

assign tmp_55_fu_961_p2 = (tmp_52_fu_941_p2 | icmp6_fu_935_p2);

assign tmp_56_cast_fu_953_p3 = ((icmp6_fu_935_p2[0:0] === 1'b1) ? 8'd7 : 8'd0);

assign tmp_56_fu_907_p4 = {{tmp_28_i5_fu_1056_p2[22:15]}};

assign tmp_57_fu_967_p3 = ((tmp_55_fu_961_p2[0:0] === 1'b1) ? tmp_56_cast_fu_953_p3 : tmp_54_fu_947_p2);

assign tmp_58_fu_1014_p2 = (($signed(grp_fu_243_p4) < $signed(7'd124)) ? 1'b1 : 1'b0);

assign tmp_59_fu_925_p4 = {{grp_gsm_add_fu_204_ap_return[15:11]}};

assign tmp_5_fu_620_p2 = (tmp_25_fu_600_p2 | icmp2_fu_594_p2);

assign tmp_60_fu_1020_p2 = ($signed(8'd4) + $signed(temp_31_cast_fu_994_p1));

assign tmp_61_fu_1034_p2 = (tmp_58_fu_1014_p2 | icmp7_fu_1008_p2);

assign tmp_62_cast_fu_1026_p3 = ((icmp7_fu_1008_p2[0:0] === 1'b1) ? 8'd7 : 8'd0);

assign tmp_62_fu_980_p4 = {{tmp_28_i7_fu_1063_p2[22:15]}};

assign tmp_63_fu_1040_p3 = ((tmp_61_fu_1034_p2[0:0] === 1'b1) ? tmp_62_cast_fu_1026_p3 : tmp_60_fu_1020_p2);

assign tmp_65_fu_998_p4 = {{grp_gsm_add_fu_219_ap_return[15:11]}};

assign tmp_7_fu_449_p3 = {{reg_257}, {12'd0}};

assign tmp_9_fu_402_p2 = (($signed(grp_fu_233_p4) < $signed(7'd96)) ? 1'b1 : 1'b0);

assign tmp_fu_337_p3 = {{reg_253}, {14'd0}};

assign tmp_s_fu_408_p2 = ($signed(8'd32) + $signed(temp_3_cast_fu_382_p1));

endmodule //Quantization_and_cod
