// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _aqed_out_HH_
#define _aqed_out_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct aqed_out : public sc_module {
    // Port declarations 21
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<3> > acc_out_offset;
    sc_in< sc_lv<1> > state_orig_issued;
    sc_in< sc_lv<16> > state_orig_in;
    sc_out< sc_lv<1> > state_orig_done;
    sc_out< sc_logic > state_orig_done_ap_vld;
    sc_in< sc_lv<16> > state_dup_in;
    sc_in< sc_lv<1> > state_dup_issued;
    sc_out< sc_lv<3> > bmc_in_address0;
    sc_out< sc_logic > bmc_in_ce0;
    sc_in< sc_lv<16> > bmc_in_q0;
    sc_out< sc_lv<3> > bmc_in_address1;
    sc_out< sc_logic > bmc_in_ce1;
    sc_in< sc_lv<16> > bmc_in_q1;
    sc_out< sc_lv<1> > ap_return_0;
    sc_out< sc_lv<1> > ap_return_1;


    // Module declarations
    aqed_out(sc_module_name name);
    SC_HAS_PROCESS(aqed_out);

    ~aqed_out();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<16> > state_out_count;
    sc_signal< sc_lv<3> > state_acc_out1_index;
    sc_signal< sc_lv<1> > state_qed_done;
    sc_signal< sc_lv<1> > state_qed_check;
    sc_signal< sc_lv<1> > state_orig_issued_lo_load_fu_165_p1;
    sc_signal< sc_lv<16> > state_out_count_load_reg_476;
    sc_signal< sc_lv<1> > brmerge_fu_243_p2;
    sc_signal< sc_lv<1> > brmerge_reg_496;
    sc_signal< sc_lv<16> > bmc_in_load_reg_505;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<16> > bmc_in_load_1_reg_510;
    sc_signal< sc_lv<4> > load_index_cast_fu_284_p1;
    sc_signal< sc_lv<4> > load_index_cast_reg_525;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<16> > bmc_in_load_2_reg_541;
    sc_signal< sc_lv<16> > bmc_in_load_3_reg_546;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > tmp_6_fu_372_p2;
    sc_signal< sc_lv<1> > tmp_6_reg_561;
    sc_signal< sc_lv<1> > tmp_7_fu_377_p2;
    sc_signal< sc_lv<1> > tmp_7_reg_566;
    sc_signal< sc_lv<1> > tmp_2_fu_414_p2;
    sc_signal< sc_lv<1> > tmp_2_reg_571;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > state_qed_done_flag_reg_131;
    sc_signal< sc_lv<1> > state_qed_done_loc_reg_147;
    sc_signal< sc_lv<64> > acc_out_offset_cast1_fu_160_p1;
    sc_signal< sc_lv<64> > sum_cast_fu_255_p1;
    sc_signal< sc_lv<64> > sum2_cast_fu_265_p1;
    sc_signal< sc_lv<64> > sum4_cast_fu_275_p1;
    sc_signal< sc_lv<64> > gepindex2_cast_fu_288_p1;
    sc_signal< sc_lv<64> > gepindex239_cast_fu_315_p1;
    sc_signal< sc_lv<64> > gepindex248_cast_fu_341_p1;
    sc_signal< sc_lv<64> > gepindex257_cast_fu_367_p1;
    sc_signal< sc_lv<16> > tmp_3_fu_418_p2;
    sc_signal< sc_lv<1> > tmp_s_fu_201_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > p_state_qed_done_flag_fu_429_p2;
    sc_signal< sc_lv<1> > tmp_1_fu_402_p2;
    sc_signal< sc_lv<1> > rev_fu_189_p2;
    sc_signal< sc_lv<1> > ult_fu_183_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_225_p2;
    sc_signal< sc_lv<1> > or_cond_fu_231_p2;
    sc_signal< sc_lv<1> > or_cond_not_fu_237_p2;
    sc_signal< sc_lv<3> > sum_fu_249_p2;
    sc_signal< sc_lv<3> > sum2_fu_260_p2;
    sc_signal< sc_lv<3> > sum4_fu_270_p2;
    sc_signal< sc_lv<4> > mem_index_gep1_fu_293_p2;
    sc_signal< sc_lv<1> > tmp_fu_299_p3;
    sc_signal< sc_lv<4> > gepindex_fu_307_p3;
    sc_signal< sc_lv<4> > mem_index_gep2_fu_320_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_325_p3;
    sc_signal< sc_lv<4> > gepindex1_fu_333_p3;
    sc_signal< sc_lv<4> > mem_index_gep3_fu_346_p2;
    sc_signal< sc_lv<1> > tmp_10_fu_351_p3;
    sc_signal< sc_lv<4> > gepindex2_fu_359_p3;
    sc_signal< sc_lv<1> > tmp_8_fu_382_p2;
    sc_signal< sc_lv<1> > tmp_9_fu_387_p2;
    sc_signal< sc_lv<1> > tmp2_fu_396_p2;
    sc_signal< sc_lv<1> > tmp1_fu_392_p2;
    sc_signal< sc_lv<1> > o2_qed_done_fu_434_p2;
    sc_signal< sc_lv<1> > ap_return_0_preg;
    sc_signal< sc_lv<1> > ap_return_1_preg;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<16> ap_const_lv16_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_acc_out_offset_cast1_fu_160_p1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_bmc_in_address0();
    void thread_bmc_in_address1();
    void thread_bmc_in_ce0();
    void thread_bmc_in_ce1();
    void thread_brmerge_fu_243_p2();
    void thread_gepindex1_fu_333_p3();
    void thread_gepindex239_cast_fu_315_p1();
    void thread_gepindex248_cast_fu_341_p1();
    void thread_gepindex257_cast_fu_367_p1();
    void thread_gepindex2_cast_fu_288_p1();
    void thread_gepindex2_fu_359_p3();
    void thread_gepindex_fu_307_p3();
    void thread_load_index_cast_fu_284_p1();
    void thread_mem_index_gep1_fu_293_p2();
    void thread_mem_index_gep2_fu_320_p2();
    void thread_mem_index_gep3_fu_346_p2();
    void thread_o2_qed_done_fu_434_p2();
    void thread_or_cond_fu_231_p2();
    void thread_or_cond_not_fu_237_p2();
    void thread_p_state_qed_done_flag_fu_429_p2();
    void thread_rev_fu_189_p2();
    void thread_state_orig_done();
    void thread_state_orig_done_ap_vld();
    void thread_state_orig_issued_lo_load_fu_165_p1();
    void thread_sum2_cast_fu_265_p1();
    void thread_sum2_fu_260_p2();
    void thread_sum4_cast_fu_275_p1();
    void thread_sum4_fu_270_p2();
    void thread_sum_cast_fu_255_p1();
    void thread_sum_fu_249_p2();
    void thread_tmp1_fu_392_p2();
    void thread_tmp2_fu_396_p2();
    void thread_tmp_10_fu_351_p3();
    void thread_tmp_1_fu_402_p2();
    void thread_tmp_2_fu_414_p2();
    void thread_tmp_3_fu_418_p2();
    void thread_tmp_4_fu_325_p3();
    void thread_tmp_5_fu_225_p2();
    void thread_tmp_6_fu_372_p2();
    void thread_tmp_7_fu_377_p2();
    void thread_tmp_8_fu_382_p2();
    void thread_tmp_9_fu_387_p2();
    void thread_tmp_fu_299_p3();
    void thread_tmp_s_fu_201_p2();
    void thread_ult_fu_183_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
