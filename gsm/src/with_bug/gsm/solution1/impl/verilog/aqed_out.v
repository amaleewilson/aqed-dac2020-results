// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module aqed_out (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        acc_out_offset,
        state_orig_issued,
        state_orig_in,
        state_orig_done,
        state_orig_done_ap_vld,
        state_dup_in,
        state_dup_issued,
        bmc_in_address0,
        bmc_in_ce0,
        bmc_in_q0,
        bmc_in_address1,
        bmc_in_ce1,
        bmc_in_q1,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [2:0] acc_out_offset;
input  [0:0] state_orig_issued;
input  [15:0] state_orig_in;
output  [0:0] state_orig_done;
output   state_orig_done_ap_vld;
input  [15:0] state_dup_in;
input  [0:0] state_dup_issued;
output  [2:0] bmc_in_address0;
output   bmc_in_ce0;
input  [15:0] bmc_in_q0;
output  [2:0] bmc_in_address1;
output   bmc_in_ce1;
input  [15:0] bmc_in_q1;
output  [0:0] ap_return_0;
output  [0:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[0:0] state_orig_done;
reg state_orig_done_ap_vld;
reg[2:0] bmc_in_address0;
reg bmc_in_ce0;
reg[2:0] bmc_in_address1;
reg bmc_in_ce1;
reg[0:0] ap_return_0;
reg[0:0] ap_return_1;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] state_out_count;
reg   [2:0] state_acc_out1_index;
reg   [0:0] state_qed_done;
reg   [0:0] state_qed_check;
wire   [0:0] state_orig_issued_lo_load_fu_165_p1;
reg   [15:0] state_out_count_load_reg_476;
wire   [0:0] brmerge_fu_243_p2;
reg   [0:0] brmerge_reg_496;
reg   [15:0] bmc_in_load_reg_505;
wire    ap_CS_fsm_state2;
reg   [15:0] bmc_in_load_1_reg_510;
wire   [3:0] load_index_cast_fu_284_p1;
reg   [3:0] load_index_cast_reg_525;
wire    ap_CS_fsm_state3;
reg   [15:0] bmc_in_load_2_reg_541;
reg   [15:0] bmc_in_load_3_reg_546;
wire    ap_CS_fsm_state4;
wire   [0:0] tmp_6_fu_372_p2;
reg   [0:0] tmp_6_reg_561;
wire   [0:0] tmp_7_fu_377_p2;
reg   [0:0] tmp_7_reg_566;
wire   [0:0] tmp_2_fu_414_p2;
reg   [0:0] tmp_2_reg_571;
wire    ap_CS_fsm_state5;
reg   [0:0] state_qed_done_flag_reg_131;
reg   [0:0] state_qed_done_loc_reg_147;
wire   [63:0] acc_out_offset_cast1_fu_160_p1;
wire   [63:0] sum_cast_fu_255_p1;
wire   [63:0] sum2_cast_fu_265_p1;
wire   [63:0] sum4_cast_fu_275_p1;
wire   [63:0] gepindex2_cast_fu_288_p1;
wire   [63:0] gepindex239_cast_fu_315_p1;
wire   [63:0] gepindex248_cast_fu_341_p1;
wire   [63:0] gepindex257_cast_fu_367_p1;
wire   [15:0] tmp_3_fu_418_p2;
wire   [0:0] tmp_s_fu_201_p2;
wire    ap_CS_fsm_state6;
wire   [0:0] p_state_qed_done_flag_fu_429_p2;
wire   [0:0] tmp_1_fu_402_p2;
wire   [0:0] rev_fu_189_p2;
wire   [0:0] ult_fu_183_p2;
wire   [0:0] tmp_5_fu_225_p2;
wire   [0:0] or_cond_fu_231_p2;
wire   [0:0] or_cond_not_fu_237_p2;
wire   [2:0] sum_fu_249_p2;
wire   [2:0] sum2_fu_260_p2;
wire   [2:0] sum4_fu_270_p2;
wire   [3:0] mem_index_gep1_fu_293_p2;
wire   [0:0] tmp_fu_299_p3;
wire   [3:0] gepindex_fu_307_p3;
wire   [3:0] mem_index_gep2_fu_320_p2;
wire   [0:0] tmp_4_fu_325_p3;
wire   [3:0] gepindex1_fu_333_p3;
wire   [3:0] mem_index_gep3_fu_346_p2;
wire   [0:0] tmp_10_fu_351_p3;
wire   [3:0] gepindex2_fu_359_p3;
wire   [0:0] tmp_8_fu_382_p2;
wire   [0:0] tmp_9_fu_387_p2;
wire   [0:0] tmp2_fu_396_p2;
wire   [0:0] tmp1_fu_392_p2;
wire   [0:0] o2_qed_done_fu_434_p2;
reg   [0:0] ap_return_0_preg;
reg   [0:0] ap_return_1_preg;
reg   [5:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 state_out_count = 16'd0;
#0 state_acc_out1_index = 3'd0;
#0 state_qed_done = 1'd0;
#0 state_qed_check = 1'd0;
#0 ap_return_0_preg = 1'd0;
#0 ap_return_1_preg = 1'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_return_0_preg <= o2_qed_done_fu_434_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_return_1_preg <= state_qed_check;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((brmerge_fu_243_p2 == 1'd1) & (state_orig_issued_lo_load_fu_165_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((state_orig_issued_lo_load_fu_165_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        state_qed_done_flag_reg_131 <= 1'd0;
    end else if (((state_orig_issued_lo_load_fu_165_p1 == 1'd1) & (brmerge_reg_496 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        state_qed_done_flag_reg_131 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((((brmerge_fu_243_p2 == 1'd1) & (state_orig_issued_lo_load_fu_165_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((state_orig_issued_lo_load_fu_165_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        state_qed_done_loc_reg_147 <= state_qed_done;
    end else if (((state_orig_issued_lo_load_fu_165_p1 == 1'd1) & (brmerge_reg_496 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        state_qed_done_loc_reg_147 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bmc_in_load_1_reg_510 <= bmc_in_q1;
        bmc_in_load_reg_505 <= bmc_in_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bmc_in_load_2_reg_541 <= bmc_in_q0;
        bmc_in_load_3_reg_546 <= bmc_in_q1;
        load_index_cast_reg_525[2 : 0] <= load_index_cast_fu_284_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((state_orig_issued_lo_load_fu_165_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        brmerge_reg_496 <= brmerge_fu_243_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_201_p2 == 1'd1) & (state_orig_issued_lo_load_fu_165_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        state_acc_out1_index <= acc_out_offset;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        state_out_count <= tmp_3_fu_418_p2;
        tmp_2_reg_571 <= tmp_2_fu_414_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        state_out_count_load_reg_476 <= state_out_count;
    end
end

always @ (posedge ap_clk) begin
    if (((state_orig_issued_lo_load_fu_165_p1 == 1'd1) & (brmerge_reg_496 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        state_qed_check <= tmp_1_fu_402_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((p_state_qed_done_flag_fu_429_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        state_qed_done <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_6_reg_561 <= tmp_6_fu_372_p2;
        tmp_7_reg_566 <= tmp_7_fu_377_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_return_0 = o2_qed_done_fu_434_p2;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_return_1 = state_qed_check;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bmc_in_address0 = gepindex248_cast_fu_341_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        bmc_in_address0 = gepindex2_cast_fu_288_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        bmc_in_address0 = sum2_cast_fu_265_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        bmc_in_address0 = acc_out_offset_cast1_fu_160_p1;
    end else begin
        bmc_in_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bmc_in_address1 = gepindex257_cast_fu_367_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        bmc_in_address1 = gepindex239_cast_fu_315_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        bmc_in_address1 = sum4_cast_fu_275_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        bmc_in_address1 = sum_cast_fu_255_p1;
    end else begin
        bmc_in_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        bmc_in_ce0 = 1'b1;
    end else begin
        bmc_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        bmc_in_ce1 = 1'b1;
    end else begin
        bmc_in_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        if ((state_orig_issued_lo_load_fu_165_p1 == 1'd1)) begin
            state_orig_done = rev_fu_189_p2;
        end else if ((state_orig_issued_lo_load_fu_165_p1 == 1'd0)) begin
            state_orig_done = 1'd0;
        end else begin
            state_orig_done = 'bx;
        end
    end else begin
        state_orig_done = 'bx;
    end
end

always @ (*) begin
    if ((((state_orig_issued_lo_load_fu_165_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((state_orig_issued_lo_load_fu_165_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        state_orig_done_ap_vld = 1'b1;
    end else begin
        state_orig_done_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((state_orig_issued_lo_load_fu_165_p1 == 1'd1) & (brmerge_fu_243_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & ((brmerge_fu_243_p2 == 1'd1) | (state_orig_issued_lo_load_fu_165_p1 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_out_offset_cast1_fu_160_p1 = acc_out_offset;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign brmerge_fu_243_p2 = (state_qed_done | or_cond_not_fu_237_p2);

assign gepindex1_fu_333_p3 = ((tmp_4_fu_325_p3[0:0] === 1'b1) ? 4'd7 : mem_index_gep2_fu_320_p2);

assign gepindex239_cast_fu_315_p1 = gepindex_fu_307_p3;

assign gepindex248_cast_fu_341_p1 = gepindex1_fu_333_p3;

assign gepindex257_cast_fu_367_p1 = gepindex2_fu_359_p3;

assign gepindex2_cast_fu_288_p1 = state_acc_out1_index;

assign gepindex2_fu_359_p3 = ((tmp_10_fu_351_p3[0:0] === 1'b1) ? 4'd7 : mem_index_gep3_fu_346_p2);

assign gepindex_fu_307_p3 = ((tmp_fu_299_p3[0:0] === 1'b1) ? 4'd7 : mem_index_gep1_fu_293_p2);

assign load_index_cast_fu_284_p1 = state_acc_out1_index;

assign mem_index_gep1_fu_293_p2 = (load_index_cast_fu_284_p1 + 4'd1);

assign mem_index_gep2_fu_320_p2 = (load_index_cast_reg_525 + 4'd2);

assign mem_index_gep3_fu_346_p2 = (load_index_cast_reg_525 + 4'd3);

assign o2_qed_done_fu_434_p2 = (tmp_2_reg_571 | state_qed_done_loc_reg_147);

assign or_cond_fu_231_p2 = (tmp_5_fu_225_p2 & state_dup_issued);

assign or_cond_not_fu_237_p2 = (or_cond_fu_231_p2 ^ 1'd1);

assign p_state_qed_done_flag_fu_429_p2 = (tmp_2_reg_571 | state_qed_done_flag_reg_131);

assign rev_fu_189_p2 = (ult_fu_183_p2 ^ 1'd1);

assign state_orig_issued_lo_load_fu_165_p1 = state_orig_issued;

assign sum2_cast_fu_265_p1 = sum2_fu_260_p2;

assign sum2_fu_260_p2 = (acc_out_offset + 3'd2);

assign sum4_cast_fu_275_p1 = sum4_fu_270_p2;

assign sum4_fu_270_p2 = (acc_out_offset + 3'd3);

assign sum_cast_fu_255_p1 = sum_fu_249_p2;

assign sum_fu_249_p2 = (acc_out_offset + 3'd1);

assign tmp1_fu_392_p2 = (tmp_7_reg_566 & tmp_6_reg_561);

assign tmp2_fu_396_p2 = (tmp_9_fu_387_p2 & tmp_8_fu_382_p2);

assign tmp_10_fu_351_p3 = mem_index_gep3_fu_346_p2[32'd3];

assign tmp_1_fu_402_p2 = (tmp2_fu_396_p2 & tmp1_fu_392_p2);

assign tmp_2_fu_414_p2 = ((state_out_count_load_reg_476 > state_dup_in) ? 1'b1 : 1'b0);

assign tmp_3_fu_418_p2 = (state_out_count_load_reg_476 + 16'd1);

assign tmp_4_fu_325_p3 = mem_index_gep2_fu_320_p2[32'd3];

assign tmp_5_fu_225_p2 = ((state_out_count == state_dup_in) ? 1'b1 : 1'b0);

assign tmp_6_fu_372_p2 = ((bmc_in_q0 == bmc_in_load_reg_505) ? 1'b1 : 1'b0);

assign tmp_7_fu_377_p2 = ((bmc_in_q1 == bmc_in_load_1_reg_510) ? 1'b1 : 1'b0);

assign tmp_8_fu_382_p2 = ((bmc_in_q0 == bmc_in_load_2_reg_541) ? 1'b1 : 1'b0);

assign tmp_9_fu_387_p2 = ((bmc_in_q1 == bmc_in_load_3_reg_546) ? 1'b1 : 1'b0);

assign tmp_fu_299_p3 = mem_index_gep1_fu_293_p2[32'd3];

assign tmp_s_fu_201_p2 = ((state_out_count == state_orig_in) ? 1'b1 : 1'b0);

assign ult_fu_183_p2 = ((state_out_count < state_orig_in) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    load_index_cast_reg_525[3] <= 1'b0;
end

endmodule //aqed_out
