-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gsm_add is
port (
    ap_ready : OUT STD_LOGIC;
    a : IN STD_LOGIC_VECTOR (15 downto 0);
    b : IN STD_LOGIC_VECTOR (12 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of gsm_add is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv17_18000 : STD_LOGIC_VECTOR (16 downto 0) := "11000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv16_7FFF : STD_LOGIC_VECTOR (15 downto 0) := "0111111111111111";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal b_cast_fu_34_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_cast_fu_38_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_cast_19_fu_42_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_cast_fu_38_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_cast_19_fu_42_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum_fu_46_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_1_fu_58_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal b_cast_fu_34_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_74_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_fu_52_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_68_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_88_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_fu_80_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_74_p2 : STD_LOGIC_VECTOR (15 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return <= 
        phitmp_fu_80_p3 when (tmp_fu_88_p2(0) = '1') else 
        tmp_2_fu_74_p2;
    b_cast_fu_34_p0 <= b;
        b_cast_fu_34_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_cast_fu_34_p0),16));

    icmp_fu_68_p2 <= "1" when (tmp_1_fu_58_p4 = ap_const_lv2_1) else "0";
    phitmp_fu_80_p3 <= 
        ap_const_lv16_8000 when (tmp_s_fu_52_p2(0) = '1') else 
        ap_const_lv16_7FFF;
    sum_fu_46_p2 <= std_logic_vector(signed(tmp_cast_fu_38_p1) + signed(tmp_cast_19_fu_42_p1));
    tmp_1_fu_58_p4 <= sum_fu_46_p2(16 downto 15);
    tmp_2_fu_74_p1 <= a;
    tmp_2_fu_74_p2 <= std_logic_vector(signed(b_cast_fu_34_p1) + signed(tmp_2_fu_74_p1));
    tmp_cast_19_fu_42_p0 <= b;
        tmp_cast_19_fu_42_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_cast_19_fu_42_p0),17));

    tmp_cast_fu_38_p0 <= a;
        tmp_cast_fu_38_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_cast_fu_38_p0),17));

    tmp_fu_88_p2 <= (tmp_s_fu_52_p2 or icmp_fu_68_p2);
    tmp_s_fu_52_p2 <= "1" when (signed(sum_fu_46_p2) < signed(ap_const_lv17_18000)) else "0";
end behav;
