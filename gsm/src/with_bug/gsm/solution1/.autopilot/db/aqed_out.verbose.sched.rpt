

================================================================
== Vivado HLS Report for 'aqed_out'
================================================================
* Date:           Thu Apr 16 21:27:02 2020

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        gsm_new_2
* Solution:       solution1
* Product family: aartix7
* Target device:  xa7a12tcsg325-1q


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+--------+----------+------------+
    |  Clock | Target | Estimated| Uncertainty|
    +--------+--------+----------+------------+
    |ap_clk  |  100.00|     5.474|       12.50|
    +--------+--------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    2|    5|    2|    5|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	5  / (!state_orig_issued_lo) | (brmerge)
	2  / (state_orig_issued_lo & !brmerge)
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.98>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%acc_out_offset_read = call i3 @_ssdm_op_Read.ap_auto.i3(i3 %acc_out_offset)"   --->   Operation 7 'read' 'acc_out_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%acc_out_offset_cast1 = zext i3 %acc_out_offset_read to i64"   --->   Operation 8 'zext' 'acc_out_offset_cast1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%bmc_in_addr = getelementptr [8 x i16]* @bmc_in, i64 0, i64 %acc_out_offset_cast1"   --->   Operation 9 'getelementptr' 'bmc_in_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%state_orig_issued_lo = load i1* @state_orig_issued, align 2" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:192]   --->   Operation 10 'load' 'state_orig_issued_lo' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%state_out_count_load = load i16* @state_out_count, align 2" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:192]   --->   Operation 11 'load' 'state_out_count_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "br i1 %state_orig_issued_lo, label %._crit_edge, label %._crit_edge1.critedge" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:192]   --->   Operation 12 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (1.66ns)   --->   "store i1 false, i1* @state_orig_done, align 2"   --->   Operation 13 'store' <Predicate = (!state_orig_issued_lo)> <Delay = 1.66>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "br label %._crit_edge2" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:193]   --->   Operation 14 'br' <Predicate = (!state_orig_issued_lo)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%state_orig_in_load = load i16* @state_orig_in, align 8" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:192]   --->   Operation 15 'load' 'state_orig_in_load' <Predicate = (state_orig_issued_lo)> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (2.38ns)   --->   "%ult = icmp ult i16 %state_out_count_load, %state_orig_in_load" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:192]   --->   Operation 16 'icmp' 'ult' <Predicate = (state_orig_issued_lo)> <Delay = 2.38> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.38> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.94ns)   --->   "%rev = xor i1 %ult, true" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:192]   --->   Operation 17 'xor' 'rev' <Predicate = (state_orig_issued_lo)> <Delay = 0.94> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (1.66ns)   --->   "store i1 %rev, i1* @state_orig_done, align 2" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:192]   --->   Operation 18 'store' <Predicate = (state_orig_issued_lo)> <Delay = 1.66>
ST_1 : Operation 19 [1/1] (2.38ns)   --->   "%tmp_s = icmp eq i16 %state_out_count_load, %state_orig_in_load" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:193]   --->   Operation 19 'icmp' 'tmp_s' <Predicate = (state_orig_issued_lo)> <Delay = 2.38> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.38> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "br i1 %tmp_s, label %1, label %._crit_edge2" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:193]   --->   Operation 20 'br' <Predicate = (state_orig_issued_lo)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "store i3 %acc_out_offset_read, i3* @state_acc_out1_index, align 1"   --->   Operation 21 'store' <Predicate = (state_orig_issued_lo & tmp_s)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "br label %._crit_edge2" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:195]   --->   Operation 22 'br' <Predicate = (state_orig_issued_lo & tmp_s)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%state_dup_in_load = load i16* @state_dup_in, align 2" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:196]   --->   Operation 23 'load' 'state_dup_in_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%state_qed_done_load = load i1* @state_qed_done, align 1" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:196]   --->   Operation 24 'load' 'state_qed_done_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (1.66ns)   --->   "br i1 %state_orig_issued_lo, label %2, label %._crit_edge3" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:196]   --->   Operation 25 'br' <Predicate = true> <Delay = 1.66>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%state_dup_issued_loa = load i1* @state_dup_issued, align 1" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:196]   --->   Operation 26 'load' 'state_dup_issued_loa' <Predicate = (state_orig_issued_lo)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (2.38ns)   --->   "%tmp_5 = icmp eq i16 %state_out_count_load, %state_dup_in_load" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:196]   --->   Operation 27 'icmp' 'tmp_5' <Predicate = (state_orig_issued_lo)> <Delay = 2.38> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.38> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node brmerge)   --->   "%or_cond = and i1 %state_dup_issued_loa, %tmp_5" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:196]   --->   Operation 28 'and' 'or_cond' <Predicate = (state_orig_issued_lo)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns) (grouped into LUT with out node brmerge)   --->   "%or_cond_not = xor i1 %or_cond, true" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:196]   --->   Operation 29 'xor' 'or_cond_not' <Predicate = (state_orig_issued_lo)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.94ns) (out node of the LUT)   --->   "%brmerge = or i1 %state_qed_done_load, %or_cond_not" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:196]   --->   Operation 30 'or' 'brmerge' <Predicate = (state_orig_issued_lo)> <Delay = 0.94> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (1.66ns)   --->   "br i1 %brmerge, label %._crit_edge3, label %_ifconv" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:196]   --->   Operation 31 'br' <Predicate = (state_orig_issued_lo)> <Delay = 1.66>
ST_1 : Operation 32 [2/2] (2.15ns)   --->   "%bmc_in_load = load i16* %bmc_in_addr, align 2" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:210]   --->   Operation 32 'load' 'bmc_in_load' <Predicate = (state_orig_issued_lo & !brmerge)> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 8> <RAM>
ST_1 : Operation 33 [1/1] (1.68ns)   --->   "%sum = add i3 %acc_out_offset_read, 1"   --->   Operation 33 'add' 'sum' <Predicate = (state_orig_issued_lo & !brmerge)> <Delay = 1.68> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%sum_cast = zext i3 %sum to i64"   --->   Operation 34 'zext' 'sum_cast' <Predicate = (state_orig_issued_lo & !brmerge)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%bmc_in_addr_1 = getelementptr [8 x i16]* @bmc_in, i64 0, i64 %sum_cast" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:211]   --->   Operation 35 'getelementptr' 'bmc_in_addr_1' <Predicate = (state_orig_issued_lo & !brmerge)> <Delay = 0.00>
ST_1 : Operation 36 [2/2] (2.15ns)   --->   "%bmc_in_load_1 = load i16* %bmc_in_addr_1, align 2" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:211]   --->   Operation 36 'load' 'bmc_in_load_1' <Predicate = (state_orig_issued_lo & !brmerge)> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 8> <RAM>

State 2 <SV = 1> <Delay = 3.83>
ST_2 : Operation 37 [1/2] (2.15ns)   --->   "%bmc_in_load = load i16* %bmc_in_addr, align 2" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:210]   --->   Operation 37 'load' 'bmc_in_load' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 8> <RAM>
ST_2 : Operation 38 [1/2] (2.15ns)   --->   "%bmc_in_load_1 = load i16* %bmc_in_addr_1, align 2" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:211]   --->   Operation 38 'load' 'bmc_in_load_1' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 8> <RAM>
ST_2 : Operation 39 [1/1] (1.68ns)   --->   "%sum2 = add i3 %acc_out_offset_read, 2"   --->   Operation 39 'add' 'sum2' <Predicate = true> <Delay = 1.68> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%sum2_cast = zext i3 %sum2 to i64"   --->   Operation 40 'zext' 'sum2_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%bmc_in_addr_2 = getelementptr [8 x i16]* @bmc_in, i64 0, i64 %sum2_cast" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:212]   --->   Operation 41 'getelementptr' 'bmc_in_addr_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [2/2] (2.15ns)   --->   "%bmc_in_load_2 = load i16* %bmc_in_addr_2, align 2" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:212]   --->   Operation 42 'load' 'bmc_in_load_2' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 8> <RAM>
ST_2 : Operation 43 [1/1] (1.68ns)   --->   "%sum4 = add i3 %acc_out_offset_read, 3"   --->   Operation 43 'add' 'sum4' <Predicate = true> <Delay = 1.68> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%sum4_cast = zext i3 %sum4 to i64"   --->   Operation 44 'zext' 'sum4_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%bmc_in_addr_3 = getelementptr [8 x i16]* @bmc_in, i64 0, i64 %sum4_cast" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:213]   --->   Operation 45 'getelementptr' 'bmc_in_addr_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [2/2] (2.15ns)   --->   "%bmc_in_load_3 = load i16* %bmc_in_addr_3, align 2" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:213]   --->   Operation 46 'load' 'bmc_in_load_3' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 8> <RAM>

State 3 <SV = 2> <Delay = 5.20>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%state_acc_out1_index_1 = load i3* @state_acc_out1_index, align 1"   --->   Operation 47 'load' 'state_acc_out1_index_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%load_index_cast = zext i3 %state_acc_out1_index_1 to i4"   --->   Operation 48 'zext' 'load_index_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%gepindex2_cast = zext i3 %state_acc_out1_index_1 to i64"   --->   Operation 49 'zext' 'gepindex2_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%bmc_in_addr_4 = getelementptr [8 x i16]* @bmc_in, i64 0, i64 %gepindex2_cast"   --->   Operation 50 'getelementptr' 'bmc_in_addr_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 51 [2/2] (2.15ns)   --->   "%bmc_in_load_4 = load i16* %bmc_in_addr_4, align 2"   --->   Operation 51 'load' 'bmc_in_load_4' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 8> <RAM>
ST_3 : Operation 52 [1/1] (1.68ns)   --->   "%mem_index_gep1 = add i4 %load_index_cast, 1"   --->   Operation 52 'add' 'mem_index_gep1' <Predicate = true> <Delay = 1.68> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i4.i32(i4 %mem_index_gep1, i32 3)"   --->   Operation 53 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (1.37ns)   --->   "%gepindex = select i1 %tmp, i4 7, i4 %mem_index_gep1"   --->   Operation 54 'select' 'gepindex' <Predicate = true> <Delay = 1.37> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%gepindex239_cast = zext i4 %gepindex to i64"   --->   Operation 55 'zext' 'gepindex239_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%bmc_in_addr_5 = getelementptr [8 x i16]* @bmc_in, i64 0, i64 %gepindex239_cast"   --->   Operation 56 'getelementptr' 'bmc_in_addr_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 57 [2/2] (2.15ns)   --->   "%bmc_in_load_5 = load i16* %bmc_in_addr_5, align 2"   --->   Operation 57 'load' 'bmc_in_load_5' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 8> <RAM>
ST_3 : Operation 58 [1/2] (2.15ns)   --->   "%bmc_in_load_2 = load i16* %bmc_in_addr_2, align 2" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:212]   --->   Operation 58 'load' 'bmc_in_load_2' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 8> <RAM>
ST_3 : Operation 59 [1/2] (2.15ns)   --->   "%bmc_in_load_3 = load i16* %bmc_in_addr_3, align 2" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:213]   --->   Operation 59 'load' 'bmc_in_load_3' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 8> <RAM>

State 4 <SV = 3> <Delay = 5.20>
ST_4 : Operation 60 [1/2] (2.15ns)   --->   "%bmc_in_load_4 = load i16* %bmc_in_addr_4, align 2"   --->   Operation 60 'load' 'bmc_in_load_4' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 8> <RAM>
ST_4 : Operation 61 [1/2] (2.15ns)   --->   "%bmc_in_load_5 = load i16* %bmc_in_addr_5, align 2"   --->   Operation 61 'load' 'bmc_in_load_5' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 8> <RAM>
ST_4 : Operation 62 [1/1] (1.68ns)   --->   "%mem_index_gep2 = add i4 %load_index_cast, 2"   --->   Operation 62 'add' 'mem_index_gep2' <Predicate = true> <Delay = 1.68> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_4 = call i1 @_ssdm_op_BitSelect.i1.i4.i32(i4 %mem_index_gep2, i32 3)"   --->   Operation 63 'bitselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (1.37ns)   --->   "%gepindex1 = select i1 %tmp_4, i4 7, i4 %mem_index_gep2"   --->   Operation 64 'select' 'gepindex1' <Predicate = true> <Delay = 1.37> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%gepindex248_cast = zext i4 %gepindex1 to i64"   --->   Operation 65 'zext' 'gepindex248_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%bmc_in_addr_6 = getelementptr [8 x i16]* @bmc_in, i64 0, i64 %gepindex248_cast"   --->   Operation 66 'getelementptr' 'bmc_in_addr_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 67 [2/2] (2.15ns)   --->   "%bmc_in_load_6 = load i16* %bmc_in_addr_6, align 2"   --->   Operation 67 'load' 'bmc_in_load_6' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 8> <RAM>
ST_4 : Operation 68 [1/1] (1.68ns)   --->   "%mem_index_gep3 = add i4 %load_index_cast, 3"   --->   Operation 68 'add' 'mem_index_gep3' <Predicate = true> <Delay = 1.68> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_10 = call i1 @_ssdm_op_BitSelect.i1.i4.i32(i4 %mem_index_gep3, i32 3)"   --->   Operation 69 'bitselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (1.37ns)   --->   "%gepindex2 = select i1 %tmp_10, i4 7, i4 %mem_index_gep3"   --->   Operation 70 'select' 'gepindex2' <Predicate = true> <Delay = 1.37> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "%gepindex257_cast = zext i4 %gepindex2 to i64"   --->   Operation 71 'zext' 'gepindex257_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "%bmc_in_addr_7 = getelementptr [8 x i16]* @bmc_in, i64 0, i64 %gepindex257_cast"   --->   Operation 72 'getelementptr' 'bmc_in_addr_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 73 [2/2] (2.15ns)   --->   "%bmc_in_load_7 = load i16* %bmc_in_addr_7, align 2"   --->   Operation 73 'load' 'bmc_in_load_7' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 8> <RAM>
ST_4 : Operation 74 [1/1] (2.38ns)   --->   "%tmp_6 = icmp eq i16 %bmc_in_load_4, %bmc_in_load" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:220]   --->   Operation 74 'icmp' 'tmp_6' <Predicate = true> <Delay = 2.38> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.38> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 75 [1/1] (2.38ns)   --->   "%tmp_7 = icmp eq i16 %bmc_in_load_5, %bmc_in_load_1" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:220]   --->   Operation 75 'icmp' 'tmp_7' <Predicate = true> <Delay = 2.38> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.38> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 5.47>
ST_5 : Operation 76 [1/2] (2.15ns)   --->   "%bmc_in_load_6 = load i16* %bmc_in_addr_6, align 2"   --->   Operation 76 'load' 'bmc_in_load_6' <Predicate = (state_orig_issued_lo & !brmerge)> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 8> <RAM>
ST_5 : Operation 77 [1/2] (2.15ns)   --->   "%bmc_in_load_7 = load i16* %bmc_in_addr_7, align 2"   --->   Operation 77 'load' 'bmc_in_load_7' <Predicate = (state_orig_issued_lo & !brmerge)> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 8> <RAM>
ST_5 : Operation 78 [1/1] (2.38ns)   --->   "%tmp_8 = icmp eq i16 %bmc_in_load_6, %bmc_in_load_2" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:220]   --->   Operation 78 'icmp' 'tmp_8' <Predicate = (state_orig_issued_lo & !brmerge)> <Delay = 2.38> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.38> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 79 [1/1] (2.38ns)   --->   "%tmp_9 = icmp eq i16 %bmc_in_load_7, %bmc_in_load_3" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:220]   --->   Operation 79 'icmp' 'tmp_9' <Predicate = (state_orig_issued_lo & !brmerge)> <Delay = 2.38> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.38> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node tmp_1)   --->   "%tmp1 = and i1 %tmp_6, %tmp_7" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:220]   --->   Operation 80 'and' 'tmp1' <Predicate = (state_orig_issued_lo & !brmerge)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node tmp_1)   --->   "%tmp2 = and i1 %tmp_8, %tmp_9" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:220]   --->   Operation 81 'and' 'tmp2' <Predicate = (state_orig_issued_lo & !brmerge)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 82 [1/1] (0.94ns) (out node of the LUT)   --->   "%tmp_1 = and i1 %tmp2, %tmp1" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:220]   --->   Operation 82 'and' 'tmp_1' <Predicate = (state_orig_issued_lo & !brmerge)> <Delay = 0.94> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 83 [1/1] (0.00ns)   --->   "store i1 %tmp_1, i1* @state_qed_check, align 1" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:220]   --->   Operation 83 'store' <Predicate = (state_orig_issued_lo & !brmerge)> <Delay = 0.00>
ST_5 : Operation 84 [1/1] (1.66ns)   --->   "br label %._crit_edge3" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:225]   --->   Operation 84 'br' <Predicate = (state_orig_issued_lo & !brmerge)> <Delay = 1.66>
ST_5 : Operation 85 [1/1] (2.38ns)   --->   "%tmp_2 = icmp ugt i16 %state_out_count_load, %state_dup_in_load" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:226]   --->   Operation 85 'icmp' 'tmp_2' <Predicate = true> <Delay = 2.38> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.38> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 86 [1/1] (2.14ns)   --->   "%tmp_3 = add i16 %state_out_count_load, 1" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:229]   --->   Operation 86 'add' 'tmp_3' <Predicate = true> <Delay = 2.14> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 87 [1/1] (0.00ns)   --->   "store i16 %tmp_3, i16* @state_out_count, align 8" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:229]   --->   Operation 87 'store' <Predicate = true> <Delay = 0.00>

State 6 <SV = 5> <Delay = 0.94>
ST_6 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node p_state_qed_done_flag)   --->   "%state_qed_done_flag = phi i1 [ true, %_ifconv ], [ false, %2 ], [ false, %._crit_edge2 ]"   --->   Operation 88 'phi' 'state_qed_done_flag' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node o2_qed_done)   --->   "%state_qed_done_loc = phi i1 [ true, %_ifconv ], [ %state_qed_done_load, %2 ], [ %state_qed_done_load, %._crit_edge2 ]" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:196]   --->   Operation 89 'phi' 'state_qed_done_loc' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 90 [1/1] (0.94ns) (out node of the LUT)   --->   "%p_state_qed_done_flag = or i1 %tmp_2, %state_qed_done_flag" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:226]   --->   Operation 90 'or' 'p_state_qed_done_flag' <Predicate = true> <Delay = 0.94> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 91 [1/1] (0.94ns) (out node of the LUT)   --->   "%o2_qed_done = or i1 %tmp_2, %state_qed_done_loc" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:226]   --->   Operation 91 'or' 'o2_qed_done' <Predicate = true> <Delay = 0.94> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 92 [1/1] (0.00ns)   --->   "%o2_qed_check = load i1* @state_qed_check, align 1" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:232]   --->   Operation 92 'load' 'o2_qed_check' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 93 [1/1] (0.00ns)   --->   "%newret = insertvalue { i1, i1 } undef, i1 %o2_qed_done, 0" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:226]   --->   Operation 93 'insertvalue' 'newret' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 94 [1/1] (0.00ns)   --->   "%newret2 = insertvalue { i1, i1 } %newret, i1 %o2_qed_check, 1" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:226]   --->   Operation 94 'insertvalue' 'newret2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 95 [1/1] (0.00ns)   --->   "br i1 %p_state_qed_done_flag, label %mergeST, label %._crit_edge10.new" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:226]   --->   Operation 95 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 96 [1/1] (0.00ns)   --->   "store i1 true, i1* @state_qed_done, align 1" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:197]   --->   Operation 96 'store' <Predicate = (p_state_qed_done_flag)> <Delay = 0.00>
ST_6 : Operation 97 [1/1] (0.00ns)   --->   "br label %._crit_edge10.new"   --->   Operation 97 'br' <Predicate = (p_state_qed_done_flag)> <Delay = 0.00>
ST_6 : Operation 98 [1/1] (0.00ns)   --->   "ret { i1, i1 } %newret2" [../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:226]   --->   Operation 98 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 100ns, clock uncertainty: 12.5ns.

 <State 1>: 4.99ns
The critical path consists of the following:
	'load' operation ('state_out_count_load', ../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:192) on static variable 'state_out_count' [16]  (0 ns)
	'icmp' operation ('ult', ../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:192) [23]  (2.38 ns)
	'xor' operation ('rev', ../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:192) [24]  (0.942 ns)
	'store' operation (../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:192) of variable 'rev', ../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:192 on global variable 'state_orig_done' [25]  (1.66 ns)

 <State 2>: 3.83ns
The critical path consists of the following:
	'add' operation ('sum2') [71]  (1.68 ns)
	'getelementptr' operation ('bmc_in_addr_2', ../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:212) [73]  (0 ns)
	'load' operation ('bmc_in_load_2', ../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:212) on array 'bmc_in' [74]  (2.15 ns)

 <State 3>: 5.2ns
The critical path consists of the following:
	'load' operation ('state_acc_out1_index_1') on static variable 'state_acc_out1_index' [43]  (0 ns)
	'add' operation ('mem_index_gep1') [48]  (1.68 ns)
	'select' operation ('gepindex') [50]  (1.37 ns)
	'getelementptr' operation ('bmc_in_addr_5') [52]  (0 ns)
	'load' operation ('bmc_in_load_5') on array 'bmc_in' [53]  (2.15 ns)

 <State 4>: 5.2ns
The critical path consists of the following:
	'add' operation ('mem_index_gep2') [54]  (1.68 ns)
	'select' operation ('gepindex1') [56]  (1.37 ns)
	'getelementptr' operation ('bmc_in_addr_6') [58]  (0 ns)
	'load' operation ('bmc_in_load_6') on array 'bmc_in' [59]  (2.15 ns)

 <State 5>: 5.47ns
The critical path consists of the following:
	'load' operation ('bmc_in_load_6') on array 'bmc_in' [59]  (2.15 ns)
	'icmp' operation ('tmp_8', ../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:220) [81]  (2.38 ns)
	'and' operation ('tmp2', ../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:220) [84]  (0 ns)
	'and' operation ('tmp_1', ../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:220) [85]  (0.942 ns)

 <State 6>: 0.942ns
The critical path consists of the following:
	'phi' operation ('state_qed_done_flag') [89]  (0 ns)
	'or' operation ('p_state_qed_done_flag', ../../../../../pool0/Saranyu/gsm/cpp_bug4/aqed_gsm_new.cpp:226) [92]  (0.942 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
