-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Quantization_and_cod is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    LAR_offset : IN STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of Quantization_and_cod is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_800 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_const_lv13_5E : STD_LOGIC_VECTOR (12 downto 0) := "0000001011110";
    constant ap_const_lv13_1EAB : STD_LOGIC_VECTOR (12 downto 0) := "1111010101011";
    constant ap_const_lv13_100 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_const_lv13_1600 : STD_LOGIC_VECTOR (12 downto 0) := "1011000000000";
    constant ap_const_lv13_1900 : STD_LOGIC_VECTOR (12 downto 0) := "1100100000000";
    constant ap_const_lv13_1B88 : STD_LOGIC_VECTOR (12 downto 0) := "1101110001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv7_60 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_const_lv8_20 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_const_lv8_3F : STD_LOGIC_VECTOR (7 downto 0) := "00111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_70 : STD_LOGIC_VECTOR (6 downto 0) := "1110000";
    constant ap_const_lv8_10 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_const_lv8_1F : STD_LOGIC_VECTOR (7 downto 0) := "00011111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv8_8 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_const_lv8_F : STD_LOGIC_VECTOR (7 downto 0) := "00001111";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv7_7C : STD_LOGIC_VECTOR (6 downto 0) := "1111100";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv23_368C : STD_LOGIC_VECTOR (22 downto 0) := "00000000011011010001100";
    constant ap_const_lv23_2156 : STD_LOGIC_VECTOR (22 downto 0) := "00000000010000101010110";
    constant ap_const_lv23_234C : STD_LOGIC_VECTOR (22 downto 0) := "00000000010001101001100";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal LARc_out_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal LARc_out_ce0 : STD_LOGIC;
    signal LARc_out_we0 : STD_LOGIC;
    signal LARc_out_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal LARc_out_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal LARc_out_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal LARc_out_ce1 : STD_LOGIC;
    signal LARc_out_we1 : STD_LOGIC;
    signal LARc_out_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal LARc_out_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_253 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal reg_257 : STD_LOGIC_VECTOR (7 downto 0);
    signal LARc_out_addr_reg_1080 : STD_LOGIC_VECTOR (3 downto 0);
    signal LARc_out_addr_1_reg_1085 : STD_LOGIC_VECTOR (3 downto 0);
    signal LARc_out_addr_2_reg_1090 : STD_LOGIC_VECTOR (3 downto 0);
    signal LARc_out_addr_3_reg_1095 : STD_LOGIC_VECTOR (3 downto 0);
    signal LARc_out_load_2_reg_1100 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal LARc_out_load_3_reg_1106 : STD_LOGIC_VECTOR (7 downto 0);
    signal LARc_out_addr_4_reg_1112 : STD_LOGIC_VECTOR (3 downto 0);
    signal LARc_out_addr_5_reg_1117 : STD_LOGIC_VECTOR (3 downto 0);
    signal LARc_out_load_4_reg_1122 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal LARc_out_load_5_reg_1127 : STD_LOGIC_VECTOR (7 downto 0);
    signal LARc_out_addr_6_reg_1133 : STD_LOGIC_VECTOR (3 downto 0);
    signal LARc_out_addr_7_reg_1138 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_gsm_add_fu_197_ap_ready : STD_LOGIC;
    signal grp_gsm_add_fu_197_a : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gsm_add_fu_197_b : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_gsm_add_fu_197_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gsm_add_fu_204_ap_ready : STD_LOGIC;
    signal grp_gsm_add_fu_204_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gsm_add_fu_212_ap_ready : STD_LOGIC;
    signal grp_gsm_add_fu_212_a : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gsm_add_fu_212_b : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_gsm_add_fu_212_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gsm_add_fu_219_ap_ready : STD_LOGIC;
    signal grp_gsm_add_fu_219_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_fu_377_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_6_fu_575_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal temp_12_fu_745_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal temp_18_fu_916_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal temp_3_fu_477_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_9_fu_673_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_15_fu_843_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_21_fu_989_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal LAR_offset_cast1_fu_261_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum_cast_fu_272_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum2_cast_fu_282_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum4_cast_fu_292_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum6_cast_fu_302_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum8_cast_fu_312_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum3_cast_fu_322_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum5_cast_fu_332_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_428_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_fu_528_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_fu_626_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_fu_724_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_43_fu_796_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_51_fu_894_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_57_fu_967_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_63_fu_1040_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sum_fu_266_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sum2_fu_277_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sum4_fu_287_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sum6_fu_297_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sum8_fu_307_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sum3_fu_317_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sum5_fu_327_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_337_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_1_fu_349_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl1_cast_fu_357_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl9_cast_fu_345_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_28_i_fu_361_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_13_fu_367_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_233_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_17_fu_386_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal temp_3_cast_fu_382_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_cast_fu_414_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_408_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_437_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_7_fu_449_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl8_cast_fu_457_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl7_cast_fu_445_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_28_i2_fu_461_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_22_fu_467_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_243_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_26_fu_486_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal temp_7_cast_fu_482_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp1_fu_496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_cast_fu_514_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_508_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_fu_537_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_24_fu_548_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl6_cast_fu_555_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl5_cast_fu_544_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_28_i6_fu_559_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_29_fu_565_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_fu_584_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal temp_11_cast_fu_580_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp2_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_cast_fu_612_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_fu_606_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_fu_635_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_31_fu_646_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl4_cast_fu_653_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl3_cast_fu_642_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_28_i1_fu_657_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_36_fu_663_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_39_fu_682_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal temp_15_cast_fu_678_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp3_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_cast_fu_710_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_fu_704_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_i3_fu_1049_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_42_fu_736_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_47_fu_754_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal temp_19_cast_fu_750_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp4_fu_764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_770_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_cast_fu_782_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_40_fu_776_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_44_fu_805_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_45_fu_816_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl_cast_fu_812_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl2_cast_fu_823_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_28_i4_fu_827_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_50_fu_833_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_53_fu_852_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal temp_23_cast_fu_848_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp5_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_888_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_cast_fu_880_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_48_fu_874_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_i5_fu_1056_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_56_fu_907_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_59_fu_925_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal temp_27_cast_fu_921_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp6_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_961_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_cast_fu_953_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_54_fu_947_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_i7_fu_1063_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_62_fu_980_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_65_fu_998_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal temp_31_cast_fu_994_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp7_fu_1008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_fu_1014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_1034_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_cast_fu_1026_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_60_fu_1020_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_i3_fu_1049_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_28_i5_fu_1056_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_28_i7_fu_1063_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);

    component gsm_add IS
    port (
        ap_ready : OUT STD_LOGIC;
        a : IN STD_LOGIC_VECTOR (15 downto 0);
        b : IN STD_LOGIC_VECTOR (12 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component aqed_top_mul_mul_eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component Quantization_and_dEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    LARc_out_U : component Quantization_and_dEe
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => LARc_out_address0,
        ce0 => LARc_out_ce0,
        we0 => LARc_out_we0,
        d0 => LARc_out_d0,
        q0 => LARc_out_q0,
        address1 => LARc_out_address1,
        ce1 => LARc_out_ce1,
        we1 => LARc_out_we1,
        d1 => LARc_out_d1,
        q1 => LARc_out_q1);

    grp_gsm_add_fu_197 : component gsm_add
    port map (
        ap_ready => grp_gsm_add_fu_197_ap_ready,
        a => grp_gsm_add_fu_197_a,
        b => grp_gsm_add_fu_197_b,
        ap_return => grp_gsm_add_fu_197_ap_return);

    grp_gsm_add_fu_204 : component gsm_add
    port map (
        ap_ready => grp_gsm_add_fu_204_ap_ready,
        a => grp_gsm_add_fu_197_ap_return,
        b => ap_const_lv13_100,
        ap_return => grp_gsm_add_fu_204_ap_return);

    grp_gsm_add_fu_212 : component gsm_add
    port map (
        ap_ready => grp_gsm_add_fu_212_ap_ready,
        a => grp_gsm_add_fu_212_a,
        b => grp_gsm_add_fu_212_b,
        ap_return => grp_gsm_add_fu_212_ap_return);

    grp_gsm_add_fu_219 : component gsm_add
    port map (
        ap_ready => grp_gsm_add_fu_219_ap_ready,
        a => grp_gsm_add_fu_212_ap_return,
        b => ap_const_lv13_100,
        ap_return => grp_gsm_add_fu_219_ap_return);

    aqed_top_mul_mul_eOg_U19 : component aqed_top_mul_mul_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 8,
        dout_WIDTH => 23)
    port map (
        din0 => tmp_28_i3_fu_1049_p0,
        din1 => LARc_out_load_4_reg_1122,
        dout => tmp_28_i3_fu_1049_p2);

    aqed_top_mul_mul_eOg_U20 : component aqed_top_mul_mul_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 8,
        dout_WIDTH => 23)
    port map (
        din0 => tmp_28_i5_fu_1056_p0,
        din1 => reg_253,
        dout => tmp_28_i5_fu_1056_p2);

    aqed_top_mul_mul_eOg_U21 : component aqed_top_mul_mul_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 8,
        dout_WIDTH => 23)
    port map (
        din0 => tmp_28_i7_fu_1063_p0,
        din1 => reg_257,
        dout => tmp_28_i7_fu_1063_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                LARc_out_addr_1_reg_1085 <= sum_cast_fu_272_p1(4 - 1 downto 0);
                LARc_out_addr_reg_1080 <= LAR_offset_cast1_fu_261_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                LARc_out_addr_2_reg_1090 <= sum2_cast_fu_282_p1(4 - 1 downto 0);
                LARc_out_addr_3_reg_1095 <= sum4_cast_fu_292_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                LARc_out_addr_4_reg_1112 <= sum6_cast_fu_302_p1(4 - 1 downto 0);
                LARc_out_addr_5_reg_1117 <= sum8_cast_fu_312_p1(4 - 1 downto 0);
                LARc_out_load_2_reg_1100 <= LARc_out_q0;
                LARc_out_load_3_reg_1106 <= LARc_out_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                LARc_out_addr_6_reg_1133 <= sum3_cast_fu_322_p1(4 - 1 downto 0);
                LARc_out_addr_7_reg_1138 <= sum5_cast_fu_332_p1(4 - 1 downto 0);
                LARc_out_load_4_reg_1122 <= LARc_out_q0;
                LARc_out_load_5_reg_1127 <= LARc_out_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state2))) then
                reg_253 <= LARc_out_q0;
                reg_257 <= LARc_out_q1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    LAR_offset_cast1_fu_261_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LAR_offset),64));

    LARc_out_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state5, LARc_out_addr_reg_1080, LARc_out_addr_2_reg_1090, ap_CS_fsm_state3, LARc_out_addr_4_reg_1112, ap_CS_fsm_state4, LARc_out_addr_6_reg_1133, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, LAR_offset_cast1_fu_261_p1, sum2_cast_fu_282_p1, sum6_cast_fu_302_p1, sum3_cast_fu_322_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            LARc_out_address0 <= LARc_out_addr_6_reg_1133;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            LARc_out_address0 <= LARc_out_addr_4_reg_1112;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            LARc_out_address0 <= LARc_out_addr_2_reg_1090;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            LARc_out_address0 <= LARc_out_addr_reg_1080;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            LARc_out_address0 <= sum3_cast_fu_322_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            LARc_out_address0 <= sum6_cast_fu_302_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            LARc_out_address0 <= sum2_cast_fu_282_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            LARc_out_address0 <= LAR_offset_cast1_fu_261_p1(4 - 1 downto 0);
        else 
            LARc_out_address0 <= "XXXX";
        end if; 
    end process;


    LARc_out_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state5, LARc_out_addr_1_reg_1085, LARc_out_addr_3_reg_1095, ap_CS_fsm_state3, LARc_out_addr_5_reg_1117, ap_CS_fsm_state4, LARc_out_addr_7_reg_1138, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, sum_cast_fu_272_p1, sum4_cast_fu_292_p1, sum8_cast_fu_312_p1, sum5_cast_fu_332_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            LARc_out_address1 <= LARc_out_addr_7_reg_1138;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            LARc_out_address1 <= LARc_out_addr_5_reg_1117;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            LARc_out_address1 <= LARc_out_addr_3_reg_1095;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            LARc_out_address1 <= LARc_out_addr_1_reg_1085;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            LARc_out_address1 <= sum5_cast_fu_332_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            LARc_out_address1 <= sum8_cast_fu_312_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            LARc_out_address1 <= sum4_cast_fu_292_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            LARc_out_address1 <= sum_cast_fu_272_p1(4 - 1 downto 0);
        else 
            LARc_out_address1 <= "XXXX";
        end if; 
    end process;


    LARc_out_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            LARc_out_ce0 <= ap_const_logic_1;
        else 
            LARc_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LARc_out_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            LARc_out_ce1 <= ap_const_logic_1;
        else 
            LARc_out_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    LARc_out_d0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, tmp_11_fu_428_p3, tmp_28_fu_626_p3, tmp_43_fu_796_p3, tmp_57_fu_967_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            LARc_out_d0 <= tmp_57_fu_967_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            LARc_out_d0 <= tmp_43_fu_796_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            LARc_out_d0 <= tmp_28_fu_626_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            LARc_out_d0 <= tmp_11_fu_428_p3;
        else 
            LARc_out_d0 <= "XXXXXXXX";
        end if; 
    end process;


    LARc_out_d1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, tmp_21_fu_528_p3, tmp_37_fu_724_p3, tmp_51_fu_894_p3, tmp_63_fu_1040_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            LARc_out_d1 <= tmp_63_fu_1040_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            LARc_out_d1 <= tmp_51_fu_894_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            LARc_out_d1 <= tmp_37_fu_724_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            LARc_out_d1 <= tmp_21_fu_528_p3;
        else 
            LARc_out_d1 <= "XXXXXXXX";
        end if; 
    end process;


    LARc_out_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            LARc_out_we0 <= ap_const_logic_1;
        else 
            LARc_out_we0 <= ap_const_logic_0;
        end if; 
    end process;


    LARc_out_we1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            LARc_out_we1 <= ap_const_logic_1;
        else 
            LARc_out_we1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_233_p4 <= grp_gsm_add_fu_204_ap_return(15 downto 9);
    grp_fu_243_p4 <= grp_gsm_add_fu_219_ap_return(15 downto 9);

    grp_gsm_add_fu_197_a_assign_proc : process(ap_CS_fsm_state5, temp_fu_377_p1, temp_6_fu_575_p1, ap_CS_fsm_state6, temp_12_fu_745_p1, ap_CS_fsm_state7, temp_18_fu_916_p1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_gsm_add_fu_197_a <= temp_18_fu_916_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_gsm_add_fu_197_a <= temp_12_fu_745_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_gsm_add_fu_197_a <= temp_6_fu_575_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_gsm_add_fu_197_a <= temp_fu_377_p1;
        else 
            grp_gsm_add_fu_197_a <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_gsm_add_fu_197_b_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_gsm_add_fu_197_b <= ap_const_lv13_1EAB;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_gsm_add_fu_197_b <= ap_const_lv13_5E;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_gsm_add_fu_197_b <= ap_const_lv13_800;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_gsm_add_fu_197_b <= ap_const_lv13_0;
        else 
            grp_gsm_add_fu_197_b <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    grp_gsm_add_fu_212_a_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, temp_3_fu_477_p1, temp_9_fu_673_p1, temp_15_fu_843_p1, temp_21_fu_989_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_gsm_add_fu_212_a <= temp_21_fu_989_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_gsm_add_fu_212_a <= temp_15_fu_843_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_gsm_add_fu_212_a <= temp_9_fu_673_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_gsm_add_fu_212_a <= temp_3_fu_477_p1;
        else 
            grp_gsm_add_fu_212_a <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_gsm_add_fu_212_b_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_gsm_add_fu_212_b <= ap_const_lv13_1B88;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_gsm_add_fu_212_b <= ap_const_lv13_1900;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_gsm_add_fu_212_b <= ap_const_lv13_1600;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_gsm_add_fu_212_b <= ap_const_lv13_0;
        else 
            grp_gsm_add_fu_212_b <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    icmp1_fu_496_p2 <= "1" when (tmp_26_fu_486_p4 = ap_const_lv2_1) else "0";
    icmp2_fu_594_p2 <= "1" when (signed(tmp_33_fu_584_p4) > signed(ap_const_lv3_0)) else "0";
    icmp3_fu_692_p2 <= "1" when (signed(tmp_39_fu_682_p4) > signed(ap_const_lv3_0)) else "0";
    icmp4_fu_764_p2 <= "1" when (signed(tmp_47_fu_754_p4) > signed(ap_const_lv4_0)) else "0";
    icmp5_fu_862_p2 <= "1" when (signed(tmp_53_fu_852_p4) > signed(ap_const_lv4_0)) else "0";
    icmp6_fu_935_p2 <= "1" when (signed(tmp_59_fu_925_p4) > signed(ap_const_lv5_0)) else "0";
    icmp7_fu_1008_p2 <= "1" when (signed(tmp_65_fu_998_p4) > signed(ap_const_lv5_0)) else "0";
    icmp_fu_396_p2 <= "1" when (tmp_17_fu_386_p4 = ap_const_lv2_1) else "0";
        p_shl1_cast_fu_357_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_349_p3),23));

        p_shl2_cast_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_45_fu_816_p3),23));

        p_shl3_cast_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_30_fu_635_p3),23));

        p_shl4_cast_fu_653_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_31_fu_646_p3),23));

        p_shl5_cast_fu_544_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_23_fu_537_p3),23));

        p_shl6_cast_fu_555_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_24_fu_548_p3),23));

        p_shl7_cast_fu_445_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_437_p3),23));

        p_shl8_cast_fu_457_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_fu_449_p3),23));

        p_shl9_cast_fu_345_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_337_p3),23));

        p_shl_cast_fu_812_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_44_fu_805_p3),23));

    sum2_cast_fu_282_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum2_fu_277_p2),64));
    sum2_fu_277_p2 <= std_logic_vector(unsigned(ap_const_lv4_2) + unsigned(LAR_offset));
    sum3_cast_fu_322_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum3_fu_317_p2),64));
    sum3_fu_317_p2 <= std_logic_vector(unsigned(ap_const_lv4_6) + unsigned(LAR_offset));
    sum4_cast_fu_292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum4_fu_287_p2),64));
    sum4_fu_287_p2 <= std_logic_vector(unsigned(ap_const_lv4_3) + unsigned(LAR_offset));
    sum5_cast_fu_332_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum5_fu_327_p2),64));
    sum5_fu_327_p2 <= std_logic_vector(unsigned(ap_const_lv4_7) + unsigned(LAR_offset));
    sum6_cast_fu_302_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum6_fu_297_p2),64));
    sum6_fu_297_p2 <= std_logic_vector(unsigned(ap_const_lv4_4) + unsigned(LAR_offset));
    sum8_cast_fu_312_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum8_fu_307_p2),64));
    sum8_fu_307_p2 <= std_logic_vector(unsigned(ap_const_lv4_5) + unsigned(LAR_offset));
    sum_cast_fu_272_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_fu_266_p2),64));
    sum_fu_266_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(LAR_offset));
        temp_11_cast_fu_580_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_233_p4),8));

        temp_12_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_42_fu_736_p4),16));

        temp_15_cast_fu_678_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_243_p4),8));

        temp_15_fu_843_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_50_fu_833_p4),16));

        temp_18_fu_916_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_56_fu_907_p4),16));

        temp_19_cast_fu_750_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_233_p4),8));

        temp_21_fu_989_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_62_fu_980_p4),16));

        temp_23_cast_fu_848_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_243_p4),8));

        temp_27_cast_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_233_p4),8));

        temp_31_cast_fu_994_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_243_p4),8));

        temp_3_cast_fu_382_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_233_p4),8));

        temp_3_fu_477_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_22_fu_467_p4),16));

        temp_6_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_29_fu_565_p4),16));

        temp_7_cast_fu_482_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_243_p4),8));

        temp_9_fu_673_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_36_fu_663_p4),16));

        temp_fu_377_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_13_fu_367_p4),16));

    tmp_11_fu_428_p3 <= 
        tmp_13_cast_fu_414_p3 when (tmp_3_fu_422_p2(0) = '1') else 
        tmp_s_fu_408_p2;
    tmp_13_cast_fu_414_p3 <= 
        ap_const_lv8_3F when (icmp_fu_396_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_13_fu_367_p4 <= tmp_28_i_fu_361_p2(22 downto 15);
    tmp_15_fu_502_p2 <= "1" when (signed(grp_fu_243_p4) < signed(ap_const_lv7_60)) else "0";
    tmp_17_fu_386_p4 <= grp_gsm_add_fu_204_ap_return(15 downto 14);
    tmp_19_fu_508_p2 <= std_logic_vector(unsigned(ap_const_lv8_20) + unsigned(temp_7_cast_fu_482_p1));
    tmp_1_fu_349_p3 <= (reg_253 & ap_const_lv12_0);
    tmp_21_fu_528_p3 <= 
        tmp_22_cast_fu_514_p3 when (tmp_4_fu_522_p2(0) = '1') else 
        tmp_19_fu_508_p2;
    tmp_22_cast_fu_514_p3 <= 
        ap_const_lv8_3F when (icmp1_fu_496_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_22_fu_467_p4 <= tmp_28_i2_fu_461_p2(22 downto 15);
    tmp_23_fu_537_p3 <= (LARc_out_load_2_reg_1100 & ap_const_lv14_0);
    tmp_24_fu_548_p3 <= (LARc_out_load_2_reg_1100 & ap_const_lv12_0);
    tmp_25_fu_600_p2 <= "1" when (signed(grp_fu_233_p4) < signed(ap_const_lv7_70)) else "0";
    tmp_26_fu_486_p4 <= grp_gsm_add_fu_219_ap_return(15 downto 14);
    tmp_27_fu_606_p2 <= std_logic_vector(unsigned(ap_const_lv8_10) + unsigned(temp_11_cast_fu_580_p1));
    tmp_28_fu_626_p3 <= 
        tmp_29_cast_fu_612_p3 when (tmp_5_fu_620_p2(0) = '1') else 
        tmp_27_fu_606_p2;
    tmp_28_i1_fu_657_p2 <= std_logic_vector(signed(p_shl4_cast_fu_653_p1) + signed(p_shl3_cast_fu_642_p1));
    tmp_28_i2_fu_461_p2 <= std_logic_vector(signed(p_shl8_cast_fu_457_p1) + signed(p_shl7_cast_fu_445_p1));
    tmp_28_i3_fu_1049_p0 <= ap_const_lv23_368C(15 - 1 downto 0);
    tmp_28_i4_fu_827_p2 <= std_logic_vector(signed(p_shl_cast_fu_812_p1) - signed(p_shl2_cast_fu_823_p1));
    tmp_28_i5_fu_1056_p0 <= ap_const_lv23_2156(15 - 1 downto 0);
    tmp_28_i6_fu_559_p2 <= std_logic_vector(signed(p_shl6_cast_fu_555_p1) + signed(p_shl5_cast_fu_544_p1));
    tmp_28_i7_fu_1063_p0 <= ap_const_lv23_234C(15 - 1 downto 0);
    tmp_28_i_fu_361_p2 <= std_logic_vector(signed(p_shl1_cast_fu_357_p1) + signed(p_shl9_cast_fu_345_p1));
    tmp_29_cast_fu_612_p3 <= 
        ap_const_lv8_1F when (icmp2_fu_594_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_29_fu_565_p4 <= tmp_28_i6_fu_559_p2(22 downto 15);
    tmp_2_fu_437_p3 <= (reg_257 & ap_const_lv14_0);
    tmp_30_fu_635_p3 <= (LARc_out_load_3_reg_1106 & ap_const_lv14_0);
    tmp_31_fu_646_p3 <= (LARc_out_load_3_reg_1106 & ap_const_lv12_0);
    tmp_32_fu_698_p2 <= "1" when (signed(grp_fu_243_p4) < signed(ap_const_lv7_70)) else "0";
    tmp_33_fu_584_p4 <= grp_gsm_add_fu_204_ap_return(15 downto 13);
    tmp_34_fu_704_p2 <= std_logic_vector(unsigned(ap_const_lv8_10) + unsigned(temp_15_cast_fu_678_p1));
    tmp_35_fu_718_p2 <= (tmp_32_fu_698_p2 or icmp3_fu_692_p2);
    tmp_36_cast_fu_710_p3 <= 
        ap_const_lv8_1F when (icmp3_fu_692_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_36_fu_663_p4 <= tmp_28_i1_fu_657_p2(22 downto 15);
    tmp_37_fu_724_p3 <= 
        tmp_36_cast_fu_710_p3 when (tmp_35_fu_718_p2(0) = '1') else 
        tmp_34_fu_704_p2;
    tmp_38_fu_770_p2 <= "1" when (signed(grp_fu_233_p4) < signed(ap_const_lv7_78)) else "0";
    tmp_39_fu_682_p4 <= grp_gsm_add_fu_219_ap_return(15 downto 13);
    tmp_3_fu_422_p2 <= (tmp_9_fu_402_p2 or icmp_fu_396_p2);
    tmp_40_fu_776_p2 <= std_logic_vector(unsigned(ap_const_lv8_8) + unsigned(temp_19_cast_fu_750_p1));
    tmp_41_fu_790_p2 <= (tmp_38_fu_770_p2 or icmp4_fu_764_p2);
    tmp_42_cast_fu_782_p3 <= 
        ap_const_lv8_F when (icmp4_fu_764_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_42_fu_736_p4 <= tmp_28_i3_fu_1049_p2(22 downto 15);
    tmp_43_fu_796_p3 <= 
        tmp_42_cast_fu_782_p3 when (tmp_41_fu_790_p2(0) = '1') else 
        tmp_40_fu_776_p2;
    tmp_44_fu_805_p3 <= (LARc_out_load_5_reg_1127 & ap_const_lv14_0);
    tmp_45_fu_816_p3 <= (LARc_out_load_5_reg_1127 & ap_const_lv10_0);
    tmp_46_fu_868_p2 <= "1" when (signed(grp_fu_243_p4) < signed(ap_const_lv7_78)) else "0";
    tmp_47_fu_754_p4 <= grp_gsm_add_fu_204_ap_return(15 downto 12);
    tmp_48_fu_874_p2 <= std_logic_vector(unsigned(ap_const_lv8_8) + unsigned(temp_23_cast_fu_848_p1));
    tmp_49_fu_888_p2 <= (tmp_46_fu_868_p2 or icmp5_fu_862_p2);
    tmp_4_fu_522_p2 <= (tmp_15_fu_502_p2 or icmp1_fu_496_p2);
    tmp_50_cast_fu_880_p3 <= 
        ap_const_lv8_F when (icmp5_fu_862_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_50_fu_833_p4 <= tmp_28_i4_fu_827_p2(22 downto 15);
    tmp_51_fu_894_p3 <= 
        tmp_50_cast_fu_880_p3 when (tmp_49_fu_888_p2(0) = '1') else 
        tmp_48_fu_874_p2;
    tmp_52_fu_941_p2 <= "1" when (signed(grp_fu_233_p4) < signed(ap_const_lv7_7C)) else "0";
    tmp_53_fu_852_p4 <= grp_gsm_add_fu_219_ap_return(15 downto 12);
    tmp_54_fu_947_p2 <= std_logic_vector(unsigned(ap_const_lv8_4) + unsigned(temp_27_cast_fu_921_p1));
    tmp_55_fu_961_p2 <= (tmp_52_fu_941_p2 or icmp6_fu_935_p2);
    tmp_56_cast_fu_953_p3 <= 
        ap_const_lv8_7 when (icmp6_fu_935_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_56_fu_907_p4 <= tmp_28_i5_fu_1056_p2(22 downto 15);
    tmp_57_fu_967_p3 <= 
        tmp_56_cast_fu_953_p3 when (tmp_55_fu_961_p2(0) = '1') else 
        tmp_54_fu_947_p2;
    tmp_58_fu_1014_p2 <= "1" when (signed(grp_fu_243_p4) < signed(ap_const_lv7_7C)) else "0";
    tmp_59_fu_925_p4 <= grp_gsm_add_fu_204_ap_return(15 downto 11);
    tmp_5_fu_620_p2 <= (tmp_25_fu_600_p2 or icmp2_fu_594_p2);
    tmp_60_fu_1020_p2 <= std_logic_vector(unsigned(ap_const_lv8_4) + unsigned(temp_31_cast_fu_994_p1));
    tmp_61_fu_1034_p2 <= (tmp_58_fu_1014_p2 or icmp7_fu_1008_p2);
    tmp_62_cast_fu_1026_p3 <= 
        ap_const_lv8_7 when (icmp7_fu_1008_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp_62_fu_980_p4 <= tmp_28_i7_fu_1063_p2(22 downto 15);
    tmp_63_fu_1040_p3 <= 
        tmp_62_cast_fu_1026_p3 when (tmp_61_fu_1034_p2(0) = '1') else 
        tmp_60_fu_1020_p2;
    tmp_65_fu_998_p4 <= grp_gsm_add_fu_219_ap_return(15 downto 11);
    tmp_7_fu_449_p3 <= (reg_257 & ap_const_lv12_0);
    tmp_9_fu_402_p2 <= "1" when (signed(grp_fu_233_p4) < signed(ap_const_lv7_60)) else "0";
    tmp_fu_337_p3 <= (reg_253 & ap_const_lv14_0);
    tmp_s_fu_408_p2 <= std_logic_vector(unsigned(ap_const_lv8_20) + unsigned(temp_3_cast_fu_382_p1));
end behav;
