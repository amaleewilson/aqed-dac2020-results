// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _aqed_in_HH_
#define _aqed_in_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct aqed_in : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<3> > bmc_in_address0;
    sc_out< sc_logic > bmc_in_ce0;
    sc_in< sc_lv<16> > bmc_in_q0;
    sc_out< sc_lv<3> > bmc_in_address1;
    sc_out< sc_logic > bmc_in_ce1;
    sc_in< sc_lv<16> > bmc_in_q1;
    sc_in< sc_lv<3> > bmc_in_offset;
    sc_in< sc_logic > orig;
    sc_in< sc_logic > dup;
    sc_in< sc_lv<1> > state_orig_issued_i;
    sc_out< sc_lv<1> > state_orig_issued_o;
    sc_out< sc_logic > state_orig_issued_o_ap_vld;
    sc_in< sc_lv<1> > state_dup_issued_i;
    sc_out< sc_lv<1> > state_dup_issued_o;
    sc_out< sc_logic > state_dup_issued_o_ap_vld;
    sc_out< sc_lv<16> > state_orig_in;
    sc_out< sc_logic > state_orig_in_ap_vld;
    sc_out< sc_lv<16> > state_dup_in;
    sc_out< sc_logic > state_dup_in_ap_vld;


    // Module declarations
    aqed_in(sc_module_name name);
    SC_HAS_PROCESS(aqed_in);

    ~aqed_in();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<16> > state_in_count;
    sc_signal< sc_lv<16> > state_orig_val_0;
    sc_signal< sc_lv<16> > state_orig_val_1;
    sc_signal< sc_lv<16> > state_orig_val_2;
    sc_signal< sc_lv<16> > state_orig_val_3;
    sc_signal< sc_lv<3> > bmc_in_addr_reg_339;
    sc_signal< sc_lv<1> > issue_orig_fu_156_p2;
    sc_signal< sc_lv<1> > issue_orig_reg_344;
    sc_signal< sc_lv<1> > issue_dup_fu_178_p2;
    sc_signal< sc_lv<1> > issue_dup_reg_348;
    sc_signal< sc_lv<16> > state_in_count_load_reg_352;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > tmp_s_fu_248_p2;
    sc_signal< sc_lv<1> > tmp_s_reg_378;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > tmp_4_fu_258_p2;
    sc_signal< sc_lv<1> > tmp_4_reg_383;
    sc_signal< sc_lv<64> > bmc_in_offset_cast1_fu_141_p1;
    sc_signal< sc_lv<64> > sum_cast_fu_200_p1;
    sc_signal< sc_lv<64> > sum2_cast_fu_217_p1;
    sc_signal< sc_lv<64> > sum4_cast_fu_222_p1;
    sc_signal< sc_lv<64> > sum6_cast_fu_239_p1;
    sc_signal< sc_lv<64> > sum8_cast_fu_264_p1;
    sc_signal< sc_lv<64> > sum1_cast_fu_269_p1;
    sc_signal< sc_lv<16> > tmp_8_fu_321_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > tmp_7_fu_304_p2;
    sc_signal< sc_lv<1> > issue_orig_fu_156_p0;
    sc_signal< sc_lv<1> > tmp_fu_150_p2;
    sc_signal< sc_lv<1> > tmp9_fu_172_p0;
    sc_signal< sc_lv<1> > not_state_dup_issued_fu_166_p2;
    sc_signal< sc_lv<1> > tmp9_fu_172_p2;
    sc_signal< sc_lv<3> > grp_fu_125_p2;
    sc_signal< sc_lv<3> > grp_fu_131_p2;
    sc_signal< sc_lv<3> > grp_fu_136_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_278_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_288_p2;
    sc_signal< sc_lv<1> > tmp2_fu_299_p2;
    sc_signal< sc_lv<1> > tmp1_fu_294_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bmc_in_address0();
    void thread_bmc_in_address1();
    void thread_bmc_in_ce0();
    void thread_bmc_in_ce1();
    void thread_bmc_in_offset_cast1_fu_141_p1();
    void thread_grp_fu_125_p2();
    void thread_grp_fu_131_p2();
    void thread_grp_fu_136_p2();
    void thread_issue_dup_fu_178_p2();
    void thread_issue_orig_fu_156_p0();
    void thread_issue_orig_fu_156_p2();
    void thread_not_state_dup_issued_fu_166_p2();
    void thread_state_dup_in();
    void thread_state_dup_in_ap_vld();
    void thread_state_dup_issued_o();
    void thread_state_dup_issued_o_ap_vld();
    void thread_state_orig_in();
    void thread_state_orig_in_ap_vld();
    void thread_state_orig_issued_o();
    void thread_state_orig_issued_o_ap_vld();
    void thread_sum1_cast_fu_269_p1();
    void thread_sum2_cast_fu_217_p1();
    void thread_sum4_cast_fu_222_p1();
    void thread_sum6_cast_fu_239_p1();
    void thread_sum8_cast_fu_264_p1();
    void thread_sum_cast_fu_200_p1();
    void thread_tmp1_fu_294_p2();
    void thread_tmp2_fu_299_p2();
    void thread_tmp9_fu_172_p0();
    void thread_tmp9_fu_172_p2();
    void thread_tmp_4_fu_258_p2();
    void thread_tmp_5_fu_278_p2();
    void thread_tmp_6_fu_288_p2();
    void thread_tmp_7_fu_304_p2();
    void thread_tmp_8_fu_321_p2();
    void thread_tmp_fu_150_p2();
    void thread_tmp_s_fu_248_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
