// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "aqed_out.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic aqed_out::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic aqed_out::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> aqed_out::ap_ST_fsm_state1 = "1";
const sc_lv<6> aqed_out::ap_ST_fsm_state2 = "10";
const sc_lv<6> aqed_out::ap_ST_fsm_state3 = "100";
const sc_lv<6> aqed_out::ap_ST_fsm_state4 = "1000";
const sc_lv<6> aqed_out::ap_ST_fsm_state5 = "10000";
const sc_lv<6> aqed_out::ap_ST_fsm_state6 = "100000";
const sc_lv<32> aqed_out::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> aqed_out::ap_const_lv1_0 = "0";
const sc_lv<1> aqed_out::ap_const_lv1_1 = "1";
const sc_lv<32> aqed_out::ap_const_lv32_1 = "1";
const sc_lv<32> aqed_out::ap_const_lv32_2 = "10";
const sc_lv<32> aqed_out::ap_const_lv32_3 = "11";
const sc_lv<32> aqed_out::ap_const_lv32_4 = "100";
const sc_lv<32> aqed_out::ap_const_lv32_5 = "101";
const sc_lv<3> aqed_out::ap_const_lv3_1 = "1";
const sc_lv<3> aqed_out::ap_const_lv3_2 = "10";
const sc_lv<3> aqed_out::ap_const_lv3_3 = "11";
const sc_lv<4> aqed_out::ap_const_lv4_1 = "1";
const sc_lv<4> aqed_out::ap_const_lv4_7 = "111";
const sc_lv<4> aqed_out::ap_const_lv4_2 = "10";
const sc_lv<4> aqed_out::ap_const_lv4_3 = "11";
const sc_lv<16> aqed_out::ap_const_lv16_1 = "1";
const bool aqed_out::ap_const_boolean_1 = true;

aqed_out::aqed_out(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_acc_out_offset_cast1_fu_160_p1);
    sensitive << ( acc_out_offset );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( o2_qed_done_fu_434_p2 );
    sensitive << ( ap_return_0_preg );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( state_qed_check );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_return_1_preg );

    SC_METHOD(thread_bmc_in_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( acc_out_offset_cast1_fu_160_p1 );
    sensitive << ( sum2_cast_fu_265_p1 );
    sensitive << ( gepindex2_cast_fu_288_p1 );
    sensitive << ( gepindex248_cast_fu_341_p1 );

    SC_METHOD(thread_bmc_in_address1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sum_cast_fu_255_p1 );
    sensitive << ( sum4_cast_fu_275_p1 );
    sensitive << ( gepindex239_cast_fu_315_p1 );
    sensitive << ( gepindex257_cast_fu_367_p1 );

    SC_METHOD(thread_bmc_in_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_bmc_in_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_brmerge_fu_243_p2);
    sensitive << ( state_qed_done );
    sensitive << ( or_cond_not_fu_237_p2 );

    SC_METHOD(thread_gepindex1_fu_333_p3);
    sensitive << ( mem_index_gep2_fu_320_p2 );
    sensitive << ( tmp_4_fu_325_p3 );

    SC_METHOD(thread_gepindex239_cast_fu_315_p1);
    sensitive << ( gepindex_fu_307_p3 );

    SC_METHOD(thread_gepindex248_cast_fu_341_p1);
    sensitive << ( gepindex1_fu_333_p3 );

    SC_METHOD(thread_gepindex257_cast_fu_367_p1);
    sensitive << ( gepindex2_fu_359_p3 );

    SC_METHOD(thread_gepindex2_cast_fu_288_p1);
    sensitive << ( state_acc_out1_index );

    SC_METHOD(thread_gepindex2_fu_359_p3);
    sensitive << ( mem_index_gep3_fu_346_p2 );
    sensitive << ( tmp_10_fu_351_p3 );

    SC_METHOD(thread_gepindex_fu_307_p3);
    sensitive << ( mem_index_gep1_fu_293_p2 );
    sensitive << ( tmp_fu_299_p3 );

    SC_METHOD(thread_load_index_cast_fu_284_p1);
    sensitive << ( state_acc_out1_index );

    SC_METHOD(thread_mem_index_gep1_fu_293_p2);
    sensitive << ( load_index_cast_fu_284_p1 );

    SC_METHOD(thread_mem_index_gep2_fu_320_p2);
    sensitive << ( load_index_cast_reg_525 );

    SC_METHOD(thread_mem_index_gep3_fu_346_p2);
    sensitive << ( load_index_cast_reg_525 );

    SC_METHOD(thread_o2_qed_done_fu_434_p2);
    sensitive << ( tmp_2_reg_571 );
    sensitive << ( state_qed_done_loc_reg_147 );

    SC_METHOD(thread_or_cond_fu_231_p2);
    sensitive << ( state_dup_issued );
    sensitive << ( tmp_5_fu_225_p2 );

    SC_METHOD(thread_or_cond_not_fu_237_p2);
    sensitive << ( or_cond_fu_231_p2 );

    SC_METHOD(thread_p_state_qed_done_flag_fu_429_p2);
    sensitive << ( tmp_2_reg_571 );
    sensitive << ( state_qed_done_flag_reg_131 );

    SC_METHOD(thread_rev_fu_189_p2);
    sensitive << ( ult_fu_183_p2 );

    SC_METHOD(thread_state_orig_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( state_orig_issued_lo_load_fu_165_p1 );
    sensitive << ( rev_fu_189_p2 );

    SC_METHOD(thread_state_orig_done_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( state_orig_issued_lo_load_fu_165_p1 );

    SC_METHOD(thread_state_orig_issued_lo_load_fu_165_p1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( state_orig_issued );

    SC_METHOD(thread_sum2_cast_fu_265_p1);
    sensitive << ( sum2_fu_260_p2 );

    SC_METHOD(thread_sum2_fu_260_p2);
    sensitive << ( acc_out_offset );

    SC_METHOD(thread_sum4_cast_fu_275_p1);
    sensitive << ( sum4_fu_270_p2 );

    SC_METHOD(thread_sum4_fu_270_p2);
    sensitive << ( acc_out_offset );

    SC_METHOD(thread_sum_cast_fu_255_p1);
    sensitive << ( sum_fu_249_p2 );

    SC_METHOD(thread_sum_fu_249_p2);
    sensitive << ( acc_out_offset );

    SC_METHOD(thread_tmp1_fu_392_p2);
    sensitive << ( tmp_6_reg_561 );
    sensitive << ( tmp_7_reg_566 );

    SC_METHOD(thread_tmp2_fu_396_p2);
    sensitive << ( tmp_8_fu_382_p2 );
    sensitive << ( tmp_9_fu_387_p2 );

    SC_METHOD(thread_tmp_10_fu_351_p3);
    sensitive << ( mem_index_gep3_fu_346_p2 );

    SC_METHOD(thread_tmp_1_fu_402_p2);
    sensitive << ( tmp2_fu_396_p2 );
    sensitive << ( tmp1_fu_392_p2 );

    SC_METHOD(thread_tmp_2_fu_414_p2);
    sensitive << ( state_dup_in );
    sensitive << ( state_out_count_load_reg_476 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp_3_fu_418_p2);
    sensitive << ( state_out_count_load_reg_476 );

    SC_METHOD(thread_tmp_4_fu_325_p3);
    sensitive << ( mem_index_gep2_fu_320_p2 );

    SC_METHOD(thread_tmp_5_fu_225_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( state_out_count );
    sensitive << ( state_dup_in );
    sensitive << ( state_orig_issued_lo_load_fu_165_p1 );

    SC_METHOD(thread_tmp_6_fu_372_p2);
    sensitive << ( bmc_in_q0 );
    sensitive << ( bmc_in_load_reg_505 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_7_fu_377_p2);
    sensitive << ( bmc_in_q1 );
    sensitive << ( bmc_in_load_1_reg_510 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_8_fu_382_p2);
    sensitive << ( bmc_in_q0 );
    sensitive << ( state_orig_issued_lo_load_fu_165_p1 );
    sensitive << ( brmerge_reg_496 );
    sensitive << ( bmc_in_load_2_reg_541 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp_9_fu_387_p2);
    sensitive << ( bmc_in_q1 );
    sensitive << ( state_orig_issued_lo_load_fu_165_p1 );
    sensitive << ( brmerge_reg_496 );
    sensitive << ( bmc_in_load_3_reg_546 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp_fu_299_p3);
    sensitive << ( mem_index_gep1_fu_293_p2 );

    SC_METHOD(thread_tmp_s_fu_201_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( state_out_count );
    sensitive << ( state_orig_in );
    sensitive << ( state_orig_issued_lo_load_fu_165_p1 );

    SC_METHOD(thread_ult_fu_183_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( state_out_count );
    sensitive << ( state_orig_in );
    sensitive << ( state_orig_issued_lo_load_fu_165_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( state_orig_issued_lo_load_fu_165_p1 );
    sensitive << ( brmerge_fu_243_p2 );

    ap_CS_fsm = "000001";
    state_out_count = "0000000000000000";
    state_acc_out1_index = "000";
    state_qed_done = "0";
    state_qed_check = "0";
    ap_return_0_preg = "0";
    ap_return_1_preg = "0";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "aqed_out_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, acc_out_offset, "(port)acc_out_offset");
    sc_trace(mVcdFile, state_orig_issued, "(port)state_orig_issued");
    sc_trace(mVcdFile, state_orig_in, "(port)state_orig_in");
    sc_trace(mVcdFile, state_orig_done, "(port)state_orig_done");
    sc_trace(mVcdFile, state_orig_done_ap_vld, "(port)state_orig_done_ap_vld");
    sc_trace(mVcdFile, state_dup_in, "(port)state_dup_in");
    sc_trace(mVcdFile, state_dup_issued, "(port)state_dup_issued");
    sc_trace(mVcdFile, bmc_in_address0, "(port)bmc_in_address0");
    sc_trace(mVcdFile, bmc_in_ce0, "(port)bmc_in_ce0");
    sc_trace(mVcdFile, bmc_in_q0, "(port)bmc_in_q0");
    sc_trace(mVcdFile, bmc_in_address1, "(port)bmc_in_address1");
    sc_trace(mVcdFile, bmc_in_ce1, "(port)bmc_in_ce1");
    sc_trace(mVcdFile, bmc_in_q1, "(port)bmc_in_q1");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, state_out_count, "state_out_count");
    sc_trace(mVcdFile, state_acc_out1_index, "state_acc_out1_index");
    sc_trace(mVcdFile, state_qed_done, "state_qed_done");
    sc_trace(mVcdFile, state_qed_check, "state_qed_check");
    sc_trace(mVcdFile, state_orig_issued_lo_load_fu_165_p1, "state_orig_issued_lo_load_fu_165_p1");
    sc_trace(mVcdFile, state_out_count_load_reg_476, "state_out_count_load_reg_476");
    sc_trace(mVcdFile, brmerge_fu_243_p2, "brmerge_fu_243_p2");
    sc_trace(mVcdFile, brmerge_reg_496, "brmerge_reg_496");
    sc_trace(mVcdFile, bmc_in_load_reg_505, "bmc_in_load_reg_505");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, bmc_in_load_1_reg_510, "bmc_in_load_1_reg_510");
    sc_trace(mVcdFile, load_index_cast_fu_284_p1, "load_index_cast_fu_284_p1");
    sc_trace(mVcdFile, load_index_cast_reg_525, "load_index_cast_reg_525");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, bmc_in_load_2_reg_541, "bmc_in_load_2_reg_541");
    sc_trace(mVcdFile, bmc_in_load_3_reg_546, "bmc_in_load_3_reg_546");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_6_fu_372_p2, "tmp_6_fu_372_p2");
    sc_trace(mVcdFile, tmp_6_reg_561, "tmp_6_reg_561");
    sc_trace(mVcdFile, tmp_7_fu_377_p2, "tmp_7_fu_377_p2");
    sc_trace(mVcdFile, tmp_7_reg_566, "tmp_7_reg_566");
    sc_trace(mVcdFile, tmp_2_fu_414_p2, "tmp_2_fu_414_p2");
    sc_trace(mVcdFile, tmp_2_reg_571, "tmp_2_reg_571");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, state_qed_done_flag_reg_131, "state_qed_done_flag_reg_131");
    sc_trace(mVcdFile, state_qed_done_loc_reg_147, "state_qed_done_loc_reg_147");
    sc_trace(mVcdFile, acc_out_offset_cast1_fu_160_p1, "acc_out_offset_cast1_fu_160_p1");
    sc_trace(mVcdFile, sum_cast_fu_255_p1, "sum_cast_fu_255_p1");
    sc_trace(mVcdFile, sum2_cast_fu_265_p1, "sum2_cast_fu_265_p1");
    sc_trace(mVcdFile, sum4_cast_fu_275_p1, "sum4_cast_fu_275_p1");
    sc_trace(mVcdFile, gepindex2_cast_fu_288_p1, "gepindex2_cast_fu_288_p1");
    sc_trace(mVcdFile, gepindex239_cast_fu_315_p1, "gepindex239_cast_fu_315_p1");
    sc_trace(mVcdFile, gepindex248_cast_fu_341_p1, "gepindex248_cast_fu_341_p1");
    sc_trace(mVcdFile, gepindex257_cast_fu_367_p1, "gepindex257_cast_fu_367_p1");
    sc_trace(mVcdFile, tmp_3_fu_418_p2, "tmp_3_fu_418_p2");
    sc_trace(mVcdFile, tmp_s_fu_201_p2, "tmp_s_fu_201_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, p_state_qed_done_flag_fu_429_p2, "p_state_qed_done_flag_fu_429_p2");
    sc_trace(mVcdFile, tmp_1_fu_402_p2, "tmp_1_fu_402_p2");
    sc_trace(mVcdFile, rev_fu_189_p2, "rev_fu_189_p2");
    sc_trace(mVcdFile, ult_fu_183_p2, "ult_fu_183_p2");
    sc_trace(mVcdFile, tmp_5_fu_225_p2, "tmp_5_fu_225_p2");
    sc_trace(mVcdFile, or_cond_fu_231_p2, "or_cond_fu_231_p2");
    sc_trace(mVcdFile, or_cond_not_fu_237_p2, "or_cond_not_fu_237_p2");
    sc_trace(mVcdFile, sum_fu_249_p2, "sum_fu_249_p2");
    sc_trace(mVcdFile, sum2_fu_260_p2, "sum2_fu_260_p2");
    sc_trace(mVcdFile, sum4_fu_270_p2, "sum4_fu_270_p2");
    sc_trace(mVcdFile, mem_index_gep1_fu_293_p2, "mem_index_gep1_fu_293_p2");
    sc_trace(mVcdFile, tmp_fu_299_p3, "tmp_fu_299_p3");
    sc_trace(mVcdFile, gepindex_fu_307_p3, "gepindex_fu_307_p3");
    sc_trace(mVcdFile, mem_index_gep2_fu_320_p2, "mem_index_gep2_fu_320_p2");
    sc_trace(mVcdFile, tmp_4_fu_325_p3, "tmp_4_fu_325_p3");
    sc_trace(mVcdFile, gepindex1_fu_333_p3, "gepindex1_fu_333_p3");
    sc_trace(mVcdFile, mem_index_gep3_fu_346_p2, "mem_index_gep3_fu_346_p2");
    sc_trace(mVcdFile, tmp_10_fu_351_p3, "tmp_10_fu_351_p3");
    sc_trace(mVcdFile, gepindex2_fu_359_p3, "gepindex2_fu_359_p3");
    sc_trace(mVcdFile, tmp_8_fu_382_p2, "tmp_8_fu_382_p2");
    sc_trace(mVcdFile, tmp_9_fu_387_p2, "tmp_9_fu_387_p2");
    sc_trace(mVcdFile, tmp2_fu_396_p2, "tmp2_fu_396_p2");
    sc_trace(mVcdFile, tmp1_fu_392_p2, "tmp1_fu_392_p2");
    sc_trace(mVcdFile, o2_qed_done_fu_434_p2, "o2_qed_done_fu_434_p2");
    sc_trace(mVcdFile, ap_return_0_preg, "ap_return_0_preg");
    sc_trace(mVcdFile, ap_return_1_preg, "ap_return_1_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

aqed_out::~aqed_out() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void aqed_out::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_0_preg = ap_const_lv1_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            ap_return_0_preg = o2_qed_done_fu_434_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_1_preg = ap_const_lv1_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            ap_return_1_preg = state_qed_check.read();
        }
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(state_orig_issued_lo_load_fu_165_p1.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(brmerge_fu_243_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(state_orig_issued_lo_load_fu_165_p1.read(), ap_const_lv1_0)))) {
        state_qed_done_flag_reg_131 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(state_orig_issued_lo_load_fu_165_p1.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_reg_496.read()))) {
        state_qed_done_flag_reg_131 = ap_const_lv1_1;
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(state_orig_issued_lo_load_fu_165_p1.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(brmerge_fu_243_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(state_orig_issued_lo_load_fu_165_p1.read(), ap_const_lv1_0)))) {
        state_qed_done_loc_reg_147 = state_qed_done.read();
    } else if ((esl_seteq<1,1,1>(state_orig_issued_lo_load_fu_165_p1.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_reg_496.read()))) {
        state_qed_done_loc_reg_147 = ap_const_lv1_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        bmc_in_load_1_reg_510 = bmc_in_q1.read();
        bmc_in_load_reg_505 = bmc_in_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bmc_in_load_2_reg_541 = bmc_in_q0.read();
        bmc_in_load_3_reg_546 = bmc_in_q1.read();
        load_index_cast_reg_525 = load_index_cast_fu_284_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(state_orig_issued_lo_load_fu_165_p1.read(), ap_const_lv1_1))) {
        brmerge_reg_496 = brmerge_fu_243_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(state_orig_issued_lo_load_fu_165_p1.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_201_p2.read()))) {
        state_acc_out1_index = acc_out_offset.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        state_out_count = tmp_3_fu_418_p2.read();
        tmp_2_reg_571 = tmp_2_fu_414_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        state_out_count_load_reg_476 = state_out_count.read();
    }
    if ((esl_seteq<1,1,1>(state_orig_issued_lo_load_fu_165_p1.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_reg_496.read()))) {
        state_qed_check = tmp_1_fu_402_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, p_state_qed_done_flag_fu_429_p2.read()))) {
        state_qed_done = ap_const_lv1_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_6_reg_561 = tmp_6_fu_372_p2.read();
        tmp_7_reg_566 = tmp_7_fu_377_p2.read();
    }
}

void aqed_out::thread_acc_out_offset_cast1_fu_160_p1() {
    acc_out_offset_cast1_fu_160_p1 = esl_zext<64,3>(acc_out_offset.read());
}

void aqed_out::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void aqed_out::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void aqed_out::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void aqed_out::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void aqed_out::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void aqed_out::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void aqed_out::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void aqed_out::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void aqed_out::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void aqed_out::thread_ap_return_0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_return_0 = o2_qed_done_fu_434_p2.read();
    } else {
        ap_return_0 = ap_return_0_preg.read();
    }
}

void aqed_out::thread_ap_return_1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_return_1 = state_qed_check.read();
    } else {
        ap_return_1 = ap_return_1_preg.read();
    }
}

void aqed_out::thread_bmc_in_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        bmc_in_address0 =  (sc_lv<3>) (gepindex248_cast_fu_341_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bmc_in_address0 =  (sc_lv<3>) (gepindex2_cast_fu_288_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        bmc_in_address0 =  (sc_lv<3>) (sum2_cast_fu_265_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        bmc_in_address0 =  (sc_lv<3>) (acc_out_offset_cast1_fu_160_p1.read());
    } else {
        bmc_in_address0 = "XXX";
    }
}

void aqed_out::thread_bmc_in_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        bmc_in_address1 =  (sc_lv<3>) (gepindex257_cast_fu_367_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bmc_in_address1 =  (sc_lv<3>) (gepindex239_cast_fu_315_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        bmc_in_address1 =  (sc_lv<3>) (sum4_cast_fu_275_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        bmc_in_address1 =  (sc_lv<3>) (sum_cast_fu_255_p1.read());
    } else {
        bmc_in_address1 = "XXX";
    }
}

void aqed_out::thread_bmc_in_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        bmc_in_ce0 = ap_const_logic_1;
    } else {
        bmc_in_ce0 = ap_const_logic_0;
    }
}

void aqed_out::thread_bmc_in_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        bmc_in_ce1 = ap_const_logic_1;
    } else {
        bmc_in_ce1 = ap_const_logic_0;
    }
}

void aqed_out::thread_brmerge_fu_243_p2() {
    brmerge_fu_243_p2 = (state_qed_done.read() | or_cond_not_fu_237_p2.read());
}

void aqed_out::thread_gepindex1_fu_333_p3() {
    gepindex1_fu_333_p3 = (!tmp_4_fu_325_p3.read()[0].is_01())? sc_lv<4>(): ((tmp_4_fu_325_p3.read()[0].to_bool())? ap_const_lv4_7: mem_index_gep2_fu_320_p2.read());
}

void aqed_out::thread_gepindex239_cast_fu_315_p1() {
    gepindex239_cast_fu_315_p1 = esl_zext<64,4>(gepindex_fu_307_p3.read());
}

void aqed_out::thread_gepindex248_cast_fu_341_p1() {
    gepindex248_cast_fu_341_p1 = esl_zext<64,4>(gepindex1_fu_333_p3.read());
}

void aqed_out::thread_gepindex257_cast_fu_367_p1() {
    gepindex257_cast_fu_367_p1 = esl_zext<64,4>(gepindex2_fu_359_p3.read());
}

void aqed_out::thread_gepindex2_cast_fu_288_p1() {
    gepindex2_cast_fu_288_p1 = esl_zext<64,3>(state_acc_out1_index.read());
}

void aqed_out::thread_gepindex2_fu_359_p3() {
    gepindex2_fu_359_p3 = (!tmp_10_fu_351_p3.read()[0].is_01())? sc_lv<4>(): ((tmp_10_fu_351_p3.read()[0].to_bool())? ap_const_lv4_7: mem_index_gep3_fu_346_p2.read());
}

void aqed_out::thread_gepindex_fu_307_p3() {
    gepindex_fu_307_p3 = (!tmp_fu_299_p3.read()[0].is_01())? sc_lv<4>(): ((tmp_fu_299_p3.read()[0].to_bool())? ap_const_lv4_7: mem_index_gep1_fu_293_p2.read());
}

void aqed_out::thread_load_index_cast_fu_284_p1() {
    load_index_cast_fu_284_p1 = esl_zext<4,3>(state_acc_out1_index.read());
}

void aqed_out::thread_mem_index_gep1_fu_293_p2() {
    mem_index_gep1_fu_293_p2 = (!load_index_cast_fu_284_p1.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(load_index_cast_fu_284_p1.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void aqed_out::thread_mem_index_gep2_fu_320_p2() {
    mem_index_gep2_fu_320_p2 = (!load_index_cast_reg_525.read().is_01() || !ap_const_lv4_2.is_01())? sc_lv<4>(): (sc_biguint<4>(load_index_cast_reg_525.read()) + sc_biguint<4>(ap_const_lv4_2));
}

void aqed_out::thread_mem_index_gep3_fu_346_p2() {
    mem_index_gep3_fu_346_p2 = (!load_index_cast_reg_525.read().is_01() || !ap_const_lv4_3.is_01())? sc_lv<4>(): (sc_biguint<4>(load_index_cast_reg_525.read()) + sc_biguint<4>(ap_const_lv4_3));
}

void aqed_out::thread_o2_qed_done_fu_434_p2() {
    o2_qed_done_fu_434_p2 = (tmp_2_reg_571.read() | state_qed_done_loc_reg_147.read());
}

void aqed_out::thread_or_cond_fu_231_p2() {
    or_cond_fu_231_p2 = (state_dup_issued.read() & tmp_5_fu_225_p2.read());
}

void aqed_out::thread_or_cond_not_fu_237_p2() {
    or_cond_not_fu_237_p2 = (or_cond_fu_231_p2.read() ^ ap_const_lv1_1);
}

void aqed_out::thread_p_state_qed_done_flag_fu_429_p2() {
    p_state_qed_done_flag_fu_429_p2 = (tmp_2_reg_571.read() | state_qed_done_flag_reg_131.read());
}

void aqed_out::thread_rev_fu_189_p2() {
    rev_fu_189_p2 = (ult_fu_183_p2.read() ^ ap_const_lv1_1);
}

void aqed_out::thread_state_orig_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        if (esl_seteq<1,1,1>(state_orig_issued_lo_load_fu_165_p1.read(), ap_const_lv1_1)) {
            state_orig_done = rev_fu_189_p2.read();
        } else if (esl_seteq<1,1,1>(state_orig_issued_lo_load_fu_165_p1.read(), ap_const_lv1_0)) {
            state_orig_done = ap_const_lv1_0;
        } else {
            state_orig_done =  (sc_lv<1>) ("X");
        }
    } else {
        state_orig_done =  (sc_lv<1>) ("X");
    }
}

void aqed_out::thread_state_orig_done_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(state_orig_issued_lo_load_fu_165_p1.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(state_orig_issued_lo_load_fu_165_p1.read(), ap_const_lv1_0)))) {
        state_orig_done_ap_vld = ap_const_logic_1;
    } else {
        state_orig_done_ap_vld = ap_const_logic_0;
    }
}

void aqed_out::thread_state_orig_issued_lo_load_fu_165_p1() {
    state_orig_issued_lo_load_fu_165_p1 = state_orig_issued.read();
}

void aqed_out::thread_sum2_cast_fu_265_p1() {
    sum2_cast_fu_265_p1 = esl_zext<64,3>(sum2_fu_260_p2.read());
}

void aqed_out::thread_sum2_fu_260_p2() {
    sum2_fu_260_p2 = (!acc_out_offset.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<3>(): (sc_biguint<3>(acc_out_offset.read()) + sc_biguint<3>(ap_const_lv3_2));
}

void aqed_out::thread_sum4_cast_fu_275_p1() {
    sum4_cast_fu_275_p1 = esl_zext<64,3>(sum4_fu_270_p2.read());
}

void aqed_out::thread_sum4_fu_270_p2() {
    sum4_fu_270_p2 = (!acc_out_offset.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<3>(): (sc_biguint<3>(acc_out_offset.read()) + sc_biguint<3>(ap_const_lv3_3));
}

void aqed_out::thread_sum_cast_fu_255_p1() {
    sum_cast_fu_255_p1 = esl_zext<64,3>(sum_fu_249_p2.read());
}

void aqed_out::thread_sum_fu_249_p2() {
    sum_fu_249_p2 = (!acc_out_offset.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(acc_out_offset.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void aqed_out::thread_tmp1_fu_392_p2() {
    tmp1_fu_392_p2 = (tmp_6_reg_561.read() & tmp_7_reg_566.read());
}

void aqed_out::thread_tmp2_fu_396_p2() {
    tmp2_fu_396_p2 = (tmp_8_fu_382_p2.read() & tmp_9_fu_387_p2.read());
}

void aqed_out::thread_tmp_10_fu_351_p3() {
    tmp_10_fu_351_p3 = mem_index_gep3_fu_346_p2.read().range(3, 3);
}

void aqed_out::thread_tmp_1_fu_402_p2() {
    tmp_1_fu_402_p2 = (tmp2_fu_396_p2.read() & tmp1_fu_392_p2.read());
}

void aqed_out::thread_tmp_2_fu_414_p2() {
    tmp_2_fu_414_p2 = (!state_out_count_load_reg_476.read().is_01() || !state_dup_in.read().is_01())? sc_lv<1>(): (sc_biguint<16>(state_out_count_load_reg_476.read()) > sc_biguint<16>(state_dup_in.read()));
}

void aqed_out::thread_tmp_3_fu_418_p2() {
    tmp_3_fu_418_p2 = (!state_out_count_load_reg_476.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(state_out_count_load_reg_476.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void aqed_out::thread_tmp_4_fu_325_p3() {
    tmp_4_fu_325_p3 = mem_index_gep2_fu_320_p2.read().range(3, 3);
}

void aqed_out::thread_tmp_5_fu_225_p2() {
    tmp_5_fu_225_p2 = (!state_out_count.read().is_01() || !state_dup_in.read().is_01())? sc_lv<1>(): sc_lv<1>(state_out_count.read() == state_dup_in.read());
}

void aqed_out::thread_tmp_6_fu_372_p2() {
    tmp_6_fu_372_p2 = (!bmc_in_q0.read().is_01() || !bmc_in_load_reg_505.read().is_01())? sc_lv<1>(): sc_lv<1>(bmc_in_q0.read() == bmc_in_load_reg_505.read());
}

void aqed_out::thread_tmp_7_fu_377_p2() {
    tmp_7_fu_377_p2 = (!bmc_in_q1.read().is_01() || !bmc_in_load_1_reg_510.read().is_01())? sc_lv<1>(): sc_lv<1>(bmc_in_q1.read() == bmc_in_load_1_reg_510.read());
}

void aqed_out::thread_tmp_8_fu_382_p2() {
    tmp_8_fu_382_p2 = (!bmc_in_q0.read().is_01() || !bmc_in_load_2_reg_541.read().is_01())? sc_lv<1>(): sc_lv<1>(bmc_in_q0.read() == bmc_in_load_2_reg_541.read());
}

void aqed_out::thread_tmp_9_fu_387_p2() {
    tmp_9_fu_387_p2 = (!bmc_in_q1.read().is_01() || !bmc_in_load_3_reg_546.read().is_01())? sc_lv<1>(): sc_lv<1>(bmc_in_q1.read() == bmc_in_load_3_reg_546.read());
}

void aqed_out::thread_tmp_fu_299_p3() {
    tmp_fu_299_p3 = mem_index_gep1_fu_293_p2.read().range(3, 3);
}

void aqed_out::thread_tmp_s_fu_201_p2() {
    tmp_s_fu_201_p2 = (!state_out_count.read().is_01() || !state_orig_in.read().is_01())? sc_lv<1>(): sc_lv<1>(state_out_count.read() == state_orig_in.read());
}

void aqed_out::thread_ult_fu_183_p2() {
    ult_fu_183_p2 = (!state_out_count.read().is_01() || !state_orig_in.read().is_01())? sc_lv<1>(): (sc_biguint<16>(state_out_count.read()) < sc_biguint<16>(state_orig_in.read()));
}

void aqed_out::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(state_orig_issued_lo_load_fu_165_p1.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(brmerge_fu_243_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && (esl_seteq<1,1,1>(brmerge_fu_243_p2.read(), ap_const_lv1_1) || 
  esl_seteq<1,1,1>(state_orig_issued_lo_load_fu_165_p1.read(), ap_const_lv1_0)))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

