// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dataflow_stalls_kernel,hls_ip_2017_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx690tffg1157-2,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=3.650000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=8,HLS_SYN_DSP=16,HLS_SYN_FF=2811,HLS_SYN_LUT=3593}" *)

module dataflow_stalls_kernel (
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        m_axi_gmemo_AWVALID,
        m_axi_gmemo_AWREADY,
        m_axi_gmemo_AWADDR,
        m_axi_gmemo_AWID,
        m_axi_gmemo_AWLEN,
        m_axi_gmemo_AWSIZE,
        m_axi_gmemo_AWBURST,
        m_axi_gmemo_AWLOCK,
        m_axi_gmemo_AWCACHE,
        m_axi_gmemo_AWPROT,
        m_axi_gmemo_AWQOS,
        m_axi_gmemo_AWREGION,
        m_axi_gmemo_AWUSER,
        m_axi_gmemo_WVALID,
        m_axi_gmemo_WREADY,
        m_axi_gmemo_WDATA,
        m_axi_gmemo_WSTRB,
        m_axi_gmemo_WLAST,
        m_axi_gmemo_WID,
        m_axi_gmemo_WUSER,
        m_axi_gmemo_ARVALID,
        m_axi_gmemo_ARREADY,
        m_axi_gmemo_ARADDR,
        m_axi_gmemo_ARID,
        m_axi_gmemo_ARLEN,
        m_axi_gmemo_ARSIZE,
        m_axi_gmemo_ARBURST,
        m_axi_gmemo_ARLOCK,
        m_axi_gmemo_ARCACHE,
        m_axi_gmemo_ARPROT,
        m_axi_gmemo_ARQOS,
        m_axi_gmemo_ARREGION,
        m_axi_gmemo_ARUSER,
        m_axi_gmemo_RVALID,
        m_axi_gmemo_RREADY,
        m_axi_gmemo_RDATA,
        m_axi_gmemo_RLAST,
        m_axi_gmemo_RID,
        m_axi_gmemo_RUSER,
        m_axi_gmemo_RRESP,
        m_axi_gmemo_BVALID,
        m_axi_gmemo_BREADY,
        m_axi_gmemo_BRESP,
        m_axi_gmemo_BID,
        m_axi_gmemo_BUSER,
        m_axi_gmemi_AWVALID,
        m_axi_gmemi_AWREADY,
        m_axi_gmemi_AWADDR,
        m_axi_gmemi_AWID,
        m_axi_gmemi_AWLEN,
        m_axi_gmemi_AWSIZE,
        m_axi_gmemi_AWBURST,
        m_axi_gmemi_AWLOCK,
        m_axi_gmemi_AWCACHE,
        m_axi_gmemi_AWPROT,
        m_axi_gmemi_AWQOS,
        m_axi_gmemi_AWREGION,
        m_axi_gmemi_AWUSER,
        m_axi_gmemi_WVALID,
        m_axi_gmemi_WREADY,
        m_axi_gmemi_WDATA,
        m_axi_gmemi_WSTRB,
        m_axi_gmemi_WLAST,
        m_axi_gmemi_WID,
        m_axi_gmemi_WUSER,
        m_axi_gmemi_ARVALID,
        m_axi_gmemi_ARREADY,
        m_axi_gmemi_ARADDR,
        m_axi_gmemi_ARID,
        m_axi_gmemi_ARLEN,
        m_axi_gmemi_ARSIZE,
        m_axi_gmemi_ARBURST,
        m_axi_gmemi_ARLOCK,
        m_axi_gmemi_ARCACHE,
        m_axi_gmemi_ARPROT,
        m_axi_gmemi_ARQOS,
        m_axi_gmemi_ARREGION,
        m_axi_gmemi_ARUSER,
        m_axi_gmemi_RVALID,
        m_axi_gmemi_RREADY,
        m_axi_gmemi_RDATA,
        m_axi_gmemi_RLAST,
        m_axi_gmemi_RID,
        m_axi_gmemi_RUSER,
        m_axi_gmemi_RRESP,
        m_axi_gmemi_BVALID,
        m_axi_gmemi_BREADY,
        m_axi_gmemi_BRESP,
        m_axi_gmemi_BID,
        m_axi_gmemi_BUSER
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEMO_ID_WIDTH = 1;
parameter    C_M_AXI_GMEMO_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEMO_DATA_WIDTH = 64;
parameter    C_M_AXI_GMEMO_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEMO_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEMO_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEMO_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEMO_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEMO_USER_VALUE = 0;
parameter    C_M_AXI_GMEMO_PROT_VALUE = 0;
parameter    C_M_AXI_GMEMO_CACHE_VALUE = 3;
parameter    C_M_AXI_ID_WIDTH = 1;
parameter    C_M_AXI_ADDR_WIDTH = 64;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AWUSER_WIDTH = 1;
parameter    C_M_AXI_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WUSER_WIDTH = 1;
parameter    C_M_AXI_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEMI_ID_WIDTH = 1;
parameter    C_M_AXI_GMEMI_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEMI_DATA_WIDTH = 64;
parameter    C_M_AXI_GMEMI_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEMI_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEMI_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEMI_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEMI_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEMI_USER_VALUE = 0;
parameter    C_M_AXI_GMEMI_PROT_VALUE = 0;
parameter    C_M_AXI_GMEMI_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEMO_WSTRB_WIDTH = (64 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEMI_WSTRB_WIDTH = (64 / 8);

input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
output   m_axi_gmemo_AWVALID;
input   m_axi_gmemo_AWREADY;
output  [C_M_AXI_GMEMO_ADDR_WIDTH - 1:0] m_axi_gmemo_AWADDR;
output  [C_M_AXI_GMEMO_ID_WIDTH - 1:0] m_axi_gmemo_AWID;
output  [7:0] m_axi_gmemo_AWLEN;
output  [2:0] m_axi_gmemo_AWSIZE;
output  [1:0] m_axi_gmemo_AWBURST;
output  [1:0] m_axi_gmemo_AWLOCK;
output  [3:0] m_axi_gmemo_AWCACHE;
output  [2:0] m_axi_gmemo_AWPROT;
output  [3:0] m_axi_gmemo_AWQOS;
output  [3:0] m_axi_gmemo_AWREGION;
output  [C_M_AXI_GMEMO_AWUSER_WIDTH - 1:0] m_axi_gmemo_AWUSER;
output   m_axi_gmemo_WVALID;
input   m_axi_gmemo_WREADY;
output  [C_M_AXI_GMEMO_DATA_WIDTH - 1:0] m_axi_gmemo_WDATA;
output  [C_M_AXI_GMEMO_WSTRB_WIDTH - 1:0] m_axi_gmemo_WSTRB;
output   m_axi_gmemo_WLAST;
output  [C_M_AXI_GMEMO_ID_WIDTH - 1:0] m_axi_gmemo_WID;
output  [C_M_AXI_GMEMO_WUSER_WIDTH - 1:0] m_axi_gmemo_WUSER;
output   m_axi_gmemo_ARVALID;
input   m_axi_gmemo_ARREADY;
output  [C_M_AXI_GMEMO_ADDR_WIDTH - 1:0] m_axi_gmemo_ARADDR;
output  [C_M_AXI_GMEMO_ID_WIDTH - 1:0] m_axi_gmemo_ARID;
output  [7:0] m_axi_gmemo_ARLEN;
output  [2:0] m_axi_gmemo_ARSIZE;
output  [1:0] m_axi_gmemo_ARBURST;
output  [1:0] m_axi_gmemo_ARLOCK;
output  [3:0] m_axi_gmemo_ARCACHE;
output  [2:0] m_axi_gmemo_ARPROT;
output  [3:0] m_axi_gmemo_ARQOS;
output  [3:0] m_axi_gmemo_ARREGION;
output  [C_M_AXI_GMEMO_ARUSER_WIDTH - 1:0] m_axi_gmemo_ARUSER;
input   m_axi_gmemo_RVALID;
output   m_axi_gmemo_RREADY;
input  [C_M_AXI_GMEMO_DATA_WIDTH - 1:0] m_axi_gmemo_RDATA;
input   m_axi_gmemo_RLAST;
input  [C_M_AXI_GMEMO_ID_WIDTH - 1:0] m_axi_gmemo_RID;
input  [C_M_AXI_GMEMO_RUSER_WIDTH - 1:0] m_axi_gmemo_RUSER;
input  [1:0] m_axi_gmemo_RRESP;
input   m_axi_gmemo_BVALID;
output   m_axi_gmemo_BREADY;
input  [1:0] m_axi_gmemo_BRESP;
input  [C_M_AXI_GMEMO_ID_WIDTH - 1:0] m_axi_gmemo_BID;
input  [C_M_AXI_GMEMO_BUSER_WIDTH - 1:0] m_axi_gmemo_BUSER;
output   m_axi_gmemi_AWVALID;
input   m_axi_gmemi_AWREADY;
output  [C_M_AXI_GMEMI_ADDR_WIDTH - 1:0] m_axi_gmemi_AWADDR;
output  [C_M_AXI_GMEMI_ID_WIDTH - 1:0] m_axi_gmemi_AWID;
output  [7:0] m_axi_gmemi_AWLEN;
output  [2:0] m_axi_gmemi_AWSIZE;
output  [1:0] m_axi_gmemi_AWBURST;
output  [1:0] m_axi_gmemi_AWLOCK;
output  [3:0] m_axi_gmemi_AWCACHE;
output  [2:0] m_axi_gmemi_AWPROT;
output  [3:0] m_axi_gmemi_AWQOS;
output  [3:0] m_axi_gmemi_AWREGION;
output  [C_M_AXI_GMEMI_AWUSER_WIDTH - 1:0] m_axi_gmemi_AWUSER;
output   m_axi_gmemi_WVALID;
input   m_axi_gmemi_WREADY;
output  [C_M_AXI_GMEMI_DATA_WIDTH - 1:0] m_axi_gmemi_WDATA;
output  [C_M_AXI_GMEMI_WSTRB_WIDTH - 1:0] m_axi_gmemi_WSTRB;
output   m_axi_gmemi_WLAST;
output  [C_M_AXI_GMEMI_ID_WIDTH - 1:0] m_axi_gmemi_WID;
output  [C_M_AXI_GMEMI_WUSER_WIDTH - 1:0] m_axi_gmemi_WUSER;
output   m_axi_gmemi_ARVALID;
input   m_axi_gmemi_ARREADY;
output  [C_M_AXI_GMEMI_ADDR_WIDTH - 1:0] m_axi_gmemi_ARADDR;
output  [C_M_AXI_GMEMI_ID_WIDTH - 1:0] m_axi_gmemi_ARID;
output  [7:0] m_axi_gmemi_ARLEN;
output  [2:0] m_axi_gmemi_ARSIZE;
output  [1:0] m_axi_gmemi_ARBURST;
output  [1:0] m_axi_gmemi_ARLOCK;
output  [3:0] m_axi_gmemi_ARCACHE;
output  [2:0] m_axi_gmemi_ARPROT;
output  [3:0] m_axi_gmemi_ARQOS;
output  [3:0] m_axi_gmemi_ARREGION;
output  [C_M_AXI_GMEMI_ARUSER_WIDTH - 1:0] m_axi_gmemi_ARUSER;
input   m_axi_gmemi_RVALID;
output   m_axi_gmemi_RREADY;
input  [C_M_AXI_GMEMI_DATA_WIDTH - 1:0] m_axi_gmemi_RDATA;
input   m_axi_gmemi_RLAST;
input  [C_M_AXI_GMEMI_ID_WIDTH - 1:0] m_axi_gmemi_RID;
input  [C_M_AXI_GMEMI_RUSER_WIDTH - 1:0] m_axi_gmemi_RUSER;
input  [1:0] m_axi_gmemi_RRESP;
input   m_axi_gmemi_BVALID;
output   m_axi_gmemi_BREADY;
input  [1:0] m_axi_gmemi_BRESP;
input  [C_M_AXI_GMEMI_ID_WIDTH - 1:0] m_axi_gmemi_BID;
input  [C_M_AXI_GMEMI_BUSER_WIDTH - 1:0] m_axi_gmemi_BUSER;

reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire   [63:0] output_ddr0;
wire   [63:0] input_ddr0;
wire   [31:0] data_count;
wire    gmemo_AWREADY;
wire    gmemo_WREADY;
wire    gmemo_ARREADY;
wire    gmemo_RVALID;
wire   [63:0] gmemo_RDATA;
wire    gmemo_RLAST;
wire   [0:0] gmemo_RID;
wire   [0:0] gmemo_RUSER;
wire   [1:0] gmemo_RRESP;
wire    gmemo_BVALID;
wire   [1:0] gmemo_BRESP;
wire   [0:0] gmemo_BID;
wire   [0:0] gmemo_BUSER;
wire    gmemi_AWREADY;
wire    gmemi_WREADY;
wire    gmemi_ARREADY;
wire    gmemi_RVALID;
wire   [63:0] gmemi_RDATA;
wire    gmemi_RLAST;
wire   [0:0] gmemi_RID;
wire   [0:0] gmemi_RUSER;
wire   [1:0] gmemi_RRESP;
wire    gmemi_BVALID;
wire   [1:0] gmemi_BRESP;
wire   [0:0] gmemi_BID;
wire   [0:0] gmemi_BUSER;
wire    load5_U0_ap_start;
wire    load5_U0_start_full_n;
wire    load5_U0_ap_ready;
wire    load5_U0_ap_done;
wire    load5_U0_ap_continue;
wire    load5_U0_ap_idle;
wire    load5_U0_start_out;
wire    load5_U0_start_write;
wire   [63:0] load5_U0_to_V_din;
wire    load5_U0_to_V_write;
wire    load5_U0_m_axi_from_AWVALID;
wire   [63:0] load5_U0_m_axi_from_AWADDR;
wire   [0:0] load5_U0_m_axi_from_AWID;
wire   [31:0] load5_U0_m_axi_from_AWLEN;
wire   [2:0] load5_U0_m_axi_from_AWSIZE;
wire   [1:0] load5_U0_m_axi_from_AWBURST;
wire   [1:0] load5_U0_m_axi_from_AWLOCK;
wire   [3:0] load5_U0_m_axi_from_AWCACHE;
wire   [2:0] load5_U0_m_axi_from_AWPROT;
wire   [3:0] load5_U0_m_axi_from_AWQOS;
wire   [3:0] load5_U0_m_axi_from_AWREGION;
wire   [0:0] load5_U0_m_axi_from_AWUSER;
wire    load5_U0_m_axi_from_WVALID;
wire   [63:0] load5_U0_m_axi_from_WDATA;
wire   [7:0] load5_U0_m_axi_from_WSTRB;
wire    load5_U0_m_axi_from_WLAST;
wire   [0:0] load5_U0_m_axi_from_WID;
wire   [0:0] load5_U0_m_axi_from_WUSER;
wire    load5_U0_m_axi_from_ARVALID;
wire   [63:0] load5_U0_m_axi_from_ARADDR;
wire   [0:0] load5_U0_m_axi_from_ARID;
wire   [31:0] load5_U0_m_axi_from_ARLEN;
wire   [2:0] load5_U0_m_axi_from_ARSIZE;
wire   [1:0] load5_U0_m_axi_from_ARBURST;
wire   [1:0] load5_U0_m_axi_from_ARLOCK;
wire   [3:0] load5_U0_m_axi_from_ARCACHE;
wire   [2:0] load5_U0_m_axi_from_ARPROT;
wire   [3:0] load5_U0_m_axi_from_ARQOS;
wire   [3:0] load5_U0_m_axi_from_ARREGION;
wire   [0:0] load5_U0_m_axi_from_ARUSER;
wire    load5_U0_m_axi_from_RREADY;
wire    load5_U0_m_axi_from_BREADY;
wire   [31:0] load5_U0_data_count_out_din;
wire    load5_U0_data_count_out_write;
wire   [63:0] load5_U0_output_ddr0_out_din;
wire    load5_U0_output_ddr0_out_write;
wire    scatter_U0_ap_start;
wire    scatter_U0_start_full_n;
wire    scatter_U0_ap_ready;
wire    scatter_U0_ap_done;
wire    scatter_U0_ap_continue;
wire    scatter_U0_ap_idle;
wire    scatter_U0_start_out;
wire    scatter_U0_start_write;
wire   [63:0] scatter_U0_to0_V_din;
wire    scatter_U0_to0_V_write;
wire   [63:0] scatter_U0_to1_V_din;
wire    scatter_U0_to1_V_write;
wire    scatter_U0_from_V_read;
wire    scatter_U0_data_count_read;
wire   [31:0] scatter_U0_data_count_out_din;
wire    scatter_U0_data_count_out_write;
wire   [31:0] scatter_U0_data_count_out1_din;
wire    scatter_U0_data_count_out1_write;
wire    compute1_U0_ap_start;
wire    compute1_U0_start_full_n;
wire    compute1_U0_ap_ready;
wire    compute1_U0_ap_done;
wire    compute1_U0_ap_continue;
wire    compute1_U0_ap_idle;
wire    compute1_U0_start_out;
wire    compute1_U0_start_write;
wire   [63:0] compute1_U0_to_V_din;
wire    compute1_U0_to_V_write;
wire    compute1_U0_from_V_read;
wire    compute1_U0_data_count_read;
wire   [31:0] compute1_U0_data_count_out_din;
wire    compute1_U0_data_count_out_write;
wire    compute2_U0_ap_start;
wire    compute2_U0_ap_done;
wire    compute2_U0_ap_continue;
wire    compute2_U0_ap_idle;
wire    compute2_U0_ap_ready;
wire   [63:0] compute2_U0_to_V_din;
wire    compute2_U0_to_V_write;
wire    compute2_U0_from_V_read;
wire    compute2_U0_data_count_read;
wire    gather_U0_ap_start;
wire    gather_U0_ap_done;
wire    gather_U0_ap_continue;
wire    gather_U0_ap_idle;
wire    gather_U0_ap_ready;
wire   [63:0] gather_U0_to_V_din;
wire    gather_U0_to_V_write;
wire    gather_U0_from0_V_read;
wire    gather_U0_from1_V_read;
wire    gather_U0_data_count_read;
wire   [31:0] gather_U0_data_count_out_din;
wire    gather_U0_data_count_out_write;
wire    store_U0_ap_start;
wire    store_U0_ap_done;
wire    store_U0_ap_continue;
wire    store_U0_ap_idle;
wire    store_U0_ap_ready;
wire    store_U0_m_axi_to_r_AWVALID;
wire   [63:0] store_U0_m_axi_to_r_AWADDR;
wire   [0:0] store_U0_m_axi_to_r_AWID;
wire   [31:0] store_U0_m_axi_to_r_AWLEN;
wire   [2:0] store_U0_m_axi_to_r_AWSIZE;
wire   [1:0] store_U0_m_axi_to_r_AWBURST;
wire   [1:0] store_U0_m_axi_to_r_AWLOCK;
wire   [3:0] store_U0_m_axi_to_r_AWCACHE;
wire   [2:0] store_U0_m_axi_to_r_AWPROT;
wire   [3:0] store_U0_m_axi_to_r_AWQOS;
wire   [3:0] store_U0_m_axi_to_r_AWREGION;
wire   [0:0] store_U0_m_axi_to_r_AWUSER;
wire    store_U0_m_axi_to_r_WVALID;
wire   [63:0] store_U0_m_axi_to_r_WDATA;
wire   [7:0] store_U0_m_axi_to_r_WSTRB;
wire    store_U0_m_axi_to_r_WLAST;
wire   [0:0] store_U0_m_axi_to_r_WID;
wire   [0:0] store_U0_m_axi_to_r_WUSER;
wire    store_U0_m_axi_to_r_ARVALID;
wire   [63:0] store_U0_m_axi_to_r_ARADDR;
wire   [0:0] store_U0_m_axi_to_r_ARID;
wire   [31:0] store_U0_m_axi_to_r_ARLEN;
wire   [2:0] store_U0_m_axi_to_r_ARSIZE;
wire   [1:0] store_U0_m_axi_to_r_ARBURST;
wire   [1:0] store_U0_m_axi_to_r_ARLOCK;
wire   [3:0] store_U0_m_axi_to_r_ARCACHE;
wire   [2:0] store_U0_m_axi_to_r_ARPROT;
wire   [3:0] store_U0_m_axi_to_r_ARQOS;
wire   [3:0] store_U0_m_axi_to_r_ARREGION;
wire   [0:0] store_U0_m_axi_to_r_ARUSER;
wire    store_U0_m_axi_to_r_RREADY;
wire    store_U0_m_axi_to_r_BREADY;
wire    store_U0_to_offset_read;
wire    store_U0_from_V_read;
wire    store_U0_data_count_read;
wire    ap_sync_continue;
wire    data_stage0_V_full_n;
wire   [63:0] data_stage0_V_dout;
wire    data_stage0_V_empty_n;
wire    data_count_c_full_n;
wire   [31:0] data_count_c_dout;
wire    data_count_c_empty_n;
wire    output_ddr0_c_full_n;
wire   [63:0] output_ddr0_c_dout;
wire    output_ddr0_c_empty_n;
wire    data_stage1_V_full_n;
wire   [63:0] data_stage1_V_dout;
wire    data_stage1_V_empty_n;
wire    data_stage2_V_full_n;
wire   [63:0] data_stage2_V_dout;
wire    data_stage2_V_empty_n;
wire    data_count_c7_full_n;
wire   [31:0] data_count_c7_dout;
wire    data_count_c7_empty_n;
wire    data_count_c8_full_n;
wire   [31:0] data_count_c8_dout;
wire    data_count_c8_empty_n;
wire    data_stage3_V_full_n;
wire   [63:0] data_stage3_V_dout;
wire    data_stage3_V_empty_n;
wire    data_count_c9_full_n;
wire   [31:0] data_count_c9_dout;
wire    data_count_c9_empty_n;
wire    data_stage4_V_full_n;
wire   [63:0] data_stage4_V_dout;
wire    data_stage4_V_empty_n;
wire    data_stage5_V_full_n;
wire   [63:0] data_stage5_V_dout;
wire    data_stage5_V_empty_n;
wire    data_count_c10_full_n;
wire   [31:0] data_count_c10_dout;
wire    data_count_c10_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire   [0:0] start_for_scatter_U0_din;
wire    start_for_scatter_U0_full_n;
wire   [0:0] start_for_scatter_U0_dout;
wire    start_for_scatter_U0_empty_n;
wire   [0:0] start_for_store_U0_din;
wire    start_for_store_U0_full_n;
wire   [0:0] start_for_store_U0_dout;
wire    start_for_store_U0_empty_n;
wire   [0:0] start_for_compute1_U0_din;
wire    start_for_compute1_U0_full_n;
wire   [0:0] start_for_compute1_U0_dout;
wire    start_for_compute1_U0_empty_n;
wire   [0:0] start_for_compute2_U0_din;
wire    start_for_compute2_U0_full_n;
wire   [0:0] start_for_compute2_U0_dout;
wire    start_for_compute2_U0_empty_n;
wire   [0:0] start_for_gather_U0_din;
wire    start_for_gather_U0_full_n;
wire   [0:0] start_for_gather_U0_dout;
wire    start_for_gather_U0_empty_n;
wire    compute2_U0_start_full_n;
wire    compute2_U0_start_write;
wire    gather_U0_start_full_n;
wire    gather_U0_start_write;
wire    store_U0_start_full_n;
wire    store_U0_start_write;

// power-on initialization
initial begin
#0 ap_rst_n_inv = 1'b1;
end

dataflow_stalls_kernel_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
dataflow_stalls_kernel_control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .output_ddr0(output_ddr0),
    .input_ddr0(input_ddr0),
    .data_count(data_count)
);

dataflow_stalls_kernel_gmemo_m_axi #(
    .USER_DW( 64 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEMO_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEMO_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEMO_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEMO_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEMO_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEMO_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEMO_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEMO_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEMO_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEMO_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEMO_CACHE_VALUE ))
dataflow_stalls_kernel_gmemo_m_axi_U(
    .AWVALID(m_axi_gmemo_AWVALID),
    .AWREADY(m_axi_gmemo_AWREADY),
    .AWADDR(m_axi_gmemo_AWADDR),
    .AWID(m_axi_gmemo_AWID),
    .AWLEN(m_axi_gmemo_AWLEN),
    .AWSIZE(m_axi_gmemo_AWSIZE),
    .AWBURST(m_axi_gmemo_AWBURST),
    .AWLOCK(m_axi_gmemo_AWLOCK),
    .AWCACHE(m_axi_gmemo_AWCACHE),
    .AWPROT(m_axi_gmemo_AWPROT),
    .AWQOS(m_axi_gmemo_AWQOS),
    .AWREGION(m_axi_gmemo_AWREGION),
    .AWUSER(m_axi_gmemo_AWUSER),
    .WVALID(m_axi_gmemo_WVALID),
    .WREADY(m_axi_gmemo_WREADY),
    .WDATA(m_axi_gmemo_WDATA),
    .WSTRB(m_axi_gmemo_WSTRB),
    .WLAST(m_axi_gmemo_WLAST),
    .WID(m_axi_gmemo_WID),
    .WUSER(m_axi_gmemo_WUSER),
    .ARVALID(m_axi_gmemo_ARVALID),
    .ARREADY(m_axi_gmemo_ARREADY),
    .ARADDR(m_axi_gmemo_ARADDR),
    .ARID(m_axi_gmemo_ARID),
    .ARLEN(m_axi_gmemo_ARLEN),
    .ARSIZE(m_axi_gmemo_ARSIZE),
    .ARBURST(m_axi_gmemo_ARBURST),
    .ARLOCK(m_axi_gmemo_ARLOCK),
    .ARCACHE(m_axi_gmemo_ARCACHE),
    .ARPROT(m_axi_gmemo_ARPROT),
    .ARQOS(m_axi_gmemo_ARQOS),
    .ARREGION(m_axi_gmemo_ARREGION),
    .ARUSER(m_axi_gmemo_ARUSER),
    .RVALID(m_axi_gmemo_RVALID),
    .RREADY(m_axi_gmemo_RREADY),
    .RDATA(m_axi_gmemo_RDATA),
    .RLAST(m_axi_gmemo_RLAST),
    .RID(m_axi_gmemo_RID),
    .RUSER(m_axi_gmemo_RUSER),
    .RRESP(m_axi_gmemo_RRESP),
    .BVALID(m_axi_gmemo_BVALID),
    .BREADY(m_axi_gmemo_BREADY),
    .BRESP(m_axi_gmemo_BRESP),
    .BID(m_axi_gmemo_BID),
    .BUSER(m_axi_gmemo_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmemo_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmemo_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmemo_RDATA),
    .I_RID(gmemo_RID),
    .I_RUSER(gmemo_RUSER),
    .I_RRESP(gmemo_RRESP),
    .I_RLAST(gmemo_RLAST),
    .I_AWVALID(store_U0_m_axi_to_r_AWVALID),
    .I_AWREADY(gmemo_AWREADY),
    .I_AWADDR(store_U0_m_axi_to_r_AWADDR),
    .I_AWID(store_U0_m_axi_to_r_AWID),
    .I_AWLEN(store_U0_m_axi_to_r_AWLEN),
    .I_AWSIZE(store_U0_m_axi_to_r_AWSIZE),
    .I_AWLOCK(store_U0_m_axi_to_r_AWLOCK),
    .I_AWCACHE(store_U0_m_axi_to_r_AWCACHE),
    .I_AWQOS(store_U0_m_axi_to_r_AWQOS),
    .I_AWPROT(store_U0_m_axi_to_r_AWPROT),
    .I_AWUSER(store_U0_m_axi_to_r_AWUSER),
    .I_AWBURST(store_U0_m_axi_to_r_AWBURST),
    .I_AWREGION(store_U0_m_axi_to_r_AWREGION),
    .I_WVALID(store_U0_m_axi_to_r_WVALID),
    .I_WREADY(gmemo_WREADY),
    .I_WDATA(store_U0_m_axi_to_r_WDATA),
    .I_WID(store_U0_m_axi_to_r_WID),
    .I_WUSER(store_U0_m_axi_to_r_WUSER),
    .I_WLAST(store_U0_m_axi_to_r_WLAST),
    .I_WSTRB(store_U0_m_axi_to_r_WSTRB),
    .I_BVALID(gmemo_BVALID),
    .I_BREADY(store_U0_m_axi_to_r_BREADY),
    .I_BRESP(gmemo_BRESP),
    .I_BID(gmemo_BID),
    .I_BUSER(gmemo_BUSER)
);

dataflow_stalls_kernel_gmemi_m_axi #(
    .USER_DW( 64 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEMI_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEMI_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEMI_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEMI_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEMI_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEMI_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEMI_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEMI_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEMI_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEMI_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEMI_CACHE_VALUE ))
dataflow_stalls_kernel_gmemi_m_axi_U(
    .AWVALID(m_axi_gmemi_AWVALID),
    .AWREADY(m_axi_gmemi_AWREADY),
    .AWADDR(m_axi_gmemi_AWADDR),
    .AWID(m_axi_gmemi_AWID),
    .AWLEN(m_axi_gmemi_AWLEN),
    .AWSIZE(m_axi_gmemi_AWSIZE),
    .AWBURST(m_axi_gmemi_AWBURST),
    .AWLOCK(m_axi_gmemi_AWLOCK),
    .AWCACHE(m_axi_gmemi_AWCACHE),
    .AWPROT(m_axi_gmemi_AWPROT),
    .AWQOS(m_axi_gmemi_AWQOS),
    .AWREGION(m_axi_gmemi_AWREGION),
    .AWUSER(m_axi_gmemi_AWUSER),
    .WVALID(m_axi_gmemi_WVALID),
    .WREADY(m_axi_gmemi_WREADY),
    .WDATA(m_axi_gmemi_WDATA),
    .WSTRB(m_axi_gmemi_WSTRB),
    .WLAST(m_axi_gmemi_WLAST),
    .WID(m_axi_gmemi_WID),
    .WUSER(m_axi_gmemi_WUSER),
    .ARVALID(m_axi_gmemi_ARVALID),
    .ARREADY(m_axi_gmemi_ARREADY),
    .ARADDR(m_axi_gmemi_ARADDR),
    .ARID(m_axi_gmemi_ARID),
    .ARLEN(m_axi_gmemi_ARLEN),
    .ARSIZE(m_axi_gmemi_ARSIZE),
    .ARBURST(m_axi_gmemi_ARBURST),
    .ARLOCK(m_axi_gmemi_ARLOCK),
    .ARCACHE(m_axi_gmemi_ARCACHE),
    .ARPROT(m_axi_gmemi_ARPROT),
    .ARQOS(m_axi_gmemi_ARQOS),
    .ARREGION(m_axi_gmemi_ARREGION),
    .ARUSER(m_axi_gmemi_ARUSER),
    .RVALID(m_axi_gmemi_RVALID),
    .RREADY(m_axi_gmemi_RREADY),
    .RDATA(m_axi_gmemi_RDATA),
    .RLAST(m_axi_gmemi_RLAST),
    .RID(m_axi_gmemi_RID),
    .RUSER(m_axi_gmemi_RUSER),
    .RRESP(m_axi_gmemi_RRESP),
    .BVALID(m_axi_gmemi_BVALID),
    .BREADY(m_axi_gmemi_BREADY),
    .BRESP(m_axi_gmemi_BRESP),
    .BID(m_axi_gmemi_BID),
    .BUSER(m_axi_gmemi_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(load5_U0_m_axi_from_ARVALID),
    .I_ARREADY(gmemi_ARREADY),
    .I_ARADDR(load5_U0_m_axi_from_ARADDR),
    .I_ARID(load5_U0_m_axi_from_ARID),
    .I_ARLEN(load5_U0_m_axi_from_ARLEN),
    .I_ARSIZE(load5_U0_m_axi_from_ARSIZE),
    .I_ARLOCK(load5_U0_m_axi_from_ARLOCK),
    .I_ARCACHE(load5_U0_m_axi_from_ARCACHE),
    .I_ARQOS(load5_U0_m_axi_from_ARQOS),
    .I_ARPROT(load5_U0_m_axi_from_ARPROT),
    .I_ARUSER(load5_U0_m_axi_from_ARUSER),
    .I_ARBURST(load5_U0_m_axi_from_ARBURST),
    .I_ARREGION(load5_U0_m_axi_from_ARREGION),
    .I_RVALID(gmemi_RVALID),
    .I_RREADY(load5_U0_m_axi_from_RREADY),
    .I_RDATA(gmemi_RDATA),
    .I_RID(gmemi_RID),
    .I_RUSER(gmemi_RUSER),
    .I_RRESP(gmemi_RRESP),
    .I_RLAST(gmemi_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmemi_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmemi_WREADY),
    .I_WDATA(64'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(8'd0),
    .I_BVALID(gmemi_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(gmemi_BRESP),
    .I_BID(gmemi_BID),
    .I_BUSER(gmemi_BUSER)
);

load5 load5_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(load5_U0_ap_start),
    .start_full_n(load5_U0_start_full_n),
    .ap_ready(load5_U0_ap_ready),
    .ap_done(load5_U0_ap_done),
    .ap_continue(load5_U0_ap_continue),
    .ap_idle(load5_U0_ap_idle),
    .start_out(load5_U0_start_out),
    .start_write(load5_U0_start_write),
    .to_V_din(load5_U0_to_V_din),
    .to_V_full_n(data_stage0_V_full_n),
    .to_V_write(load5_U0_to_V_write),
    .m_axi_from_AWVALID(load5_U0_m_axi_from_AWVALID),
    .m_axi_from_AWREADY(1'b0),
    .m_axi_from_AWADDR(load5_U0_m_axi_from_AWADDR),
    .m_axi_from_AWID(load5_U0_m_axi_from_AWID),
    .m_axi_from_AWLEN(load5_U0_m_axi_from_AWLEN),
    .m_axi_from_AWSIZE(load5_U0_m_axi_from_AWSIZE),
    .m_axi_from_AWBURST(load5_U0_m_axi_from_AWBURST),
    .m_axi_from_AWLOCK(load5_U0_m_axi_from_AWLOCK),
    .m_axi_from_AWCACHE(load5_U0_m_axi_from_AWCACHE),
    .m_axi_from_AWPROT(load5_U0_m_axi_from_AWPROT),
    .m_axi_from_AWQOS(load5_U0_m_axi_from_AWQOS),
    .m_axi_from_AWREGION(load5_U0_m_axi_from_AWREGION),
    .m_axi_from_AWUSER(load5_U0_m_axi_from_AWUSER),
    .m_axi_from_WVALID(load5_U0_m_axi_from_WVALID),
    .m_axi_from_WREADY(1'b0),
    .m_axi_from_WDATA(load5_U0_m_axi_from_WDATA),
    .m_axi_from_WSTRB(load5_U0_m_axi_from_WSTRB),
    .m_axi_from_WLAST(load5_U0_m_axi_from_WLAST),
    .m_axi_from_WID(load5_U0_m_axi_from_WID),
    .m_axi_from_WUSER(load5_U0_m_axi_from_WUSER),
    .m_axi_from_ARVALID(load5_U0_m_axi_from_ARVALID),
    .m_axi_from_ARREADY(gmemi_ARREADY),
    .m_axi_from_ARADDR(load5_U0_m_axi_from_ARADDR),
    .m_axi_from_ARID(load5_U0_m_axi_from_ARID),
    .m_axi_from_ARLEN(load5_U0_m_axi_from_ARLEN),
    .m_axi_from_ARSIZE(load5_U0_m_axi_from_ARSIZE),
    .m_axi_from_ARBURST(load5_U0_m_axi_from_ARBURST),
    .m_axi_from_ARLOCK(load5_U0_m_axi_from_ARLOCK),
    .m_axi_from_ARCACHE(load5_U0_m_axi_from_ARCACHE),
    .m_axi_from_ARPROT(load5_U0_m_axi_from_ARPROT),
    .m_axi_from_ARQOS(load5_U0_m_axi_from_ARQOS),
    .m_axi_from_ARREGION(load5_U0_m_axi_from_ARREGION),
    .m_axi_from_ARUSER(load5_U0_m_axi_from_ARUSER),
    .m_axi_from_RVALID(gmemi_RVALID),
    .m_axi_from_RREADY(load5_U0_m_axi_from_RREADY),
    .m_axi_from_RDATA(gmemi_RDATA),
    .m_axi_from_RLAST(gmemi_RLAST),
    .m_axi_from_RID(gmemi_RID),
    .m_axi_from_RUSER(gmemi_RUSER),
    .m_axi_from_RRESP(gmemi_RRESP),
    .m_axi_from_BVALID(1'b0),
    .m_axi_from_BREADY(load5_U0_m_axi_from_BREADY),
    .m_axi_from_BRESP(2'd0),
    .m_axi_from_BID(1'd0),
    .m_axi_from_BUSER(1'd0),
    .from_offset(input_ddr0),
    .data_count(data_count),
    .data_count_out_din(load5_U0_data_count_out_din),
    .data_count_out_full_n(data_count_c_full_n),
    .data_count_out_write(load5_U0_data_count_out_write),
    .output_ddr0(output_ddr0),
    .output_ddr0_out_din(load5_U0_output_ddr0_out_din),
    .output_ddr0_out_full_n(output_ddr0_c_full_n),
    .output_ddr0_out_write(load5_U0_output_ddr0_out_write)
);

scatter scatter_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(scatter_U0_ap_start),
    .start_full_n(scatter_U0_start_full_n),
    .ap_ready(scatter_U0_ap_ready),
    .ap_done(scatter_U0_ap_done),
    .ap_continue(scatter_U0_ap_continue),
    .ap_idle(scatter_U0_ap_idle),
    .start_out(scatter_U0_start_out),
    .start_write(scatter_U0_start_write),
    .to0_V_din(scatter_U0_to0_V_din),
    .to0_V_full_n(data_stage1_V_full_n),
    .to0_V_write(scatter_U0_to0_V_write),
    .to1_V_din(scatter_U0_to1_V_din),
    .to1_V_full_n(data_stage2_V_full_n),
    .to1_V_write(scatter_U0_to1_V_write),
    .from_V_dout(data_stage0_V_dout),
    .from_V_empty_n(data_stage0_V_empty_n),
    .from_V_read(scatter_U0_from_V_read),
    .data_count_dout(data_count_c_dout),
    .data_count_empty_n(data_count_c_empty_n),
    .data_count_read(scatter_U0_data_count_read),
    .data_count_out_din(scatter_U0_data_count_out_din),
    .data_count_out_full_n(data_count_c7_full_n),
    .data_count_out_write(scatter_U0_data_count_out_write),
    .data_count_out1_din(scatter_U0_data_count_out1_din),
    .data_count_out1_full_n(data_count_c8_full_n),
    .data_count_out1_write(scatter_U0_data_count_out1_write)
);

compute1 compute1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(compute1_U0_ap_start),
    .start_full_n(compute1_U0_start_full_n),
    .ap_ready(compute1_U0_ap_ready),
    .ap_done(compute1_U0_ap_done),
    .ap_continue(compute1_U0_ap_continue),
    .ap_idle(compute1_U0_ap_idle),
    .start_out(compute1_U0_start_out),
    .start_write(compute1_U0_start_write),
    .to_V_din(compute1_U0_to_V_din),
    .to_V_full_n(data_stage3_V_full_n),
    .to_V_write(compute1_U0_to_V_write),
    .from_V_dout(data_stage1_V_dout),
    .from_V_empty_n(data_stage1_V_empty_n),
    .from_V_read(compute1_U0_from_V_read),
    .data_count_dout(data_count_c7_dout),
    .data_count_empty_n(data_count_c7_empty_n),
    .data_count_read(compute1_U0_data_count_read),
    .data_count_out_din(compute1_U0_data_count_out_din),
    .data_count_out_full_n(data_count_c9_full_n),
    .data_count_out_write(compute1_U0_data_count_out_write)
);

compute2 compute2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(compute2_U0_ap_start),
    .ap_done(compute2_U0_ap_done),
    .ap_continue(compute2_U0_ap_continue),
    .ap_idle(compute2_U0_ap_idle),
    .ap_ready(compute2_U0_ap_ready),
    .to_V_din(compute2_U0_to_V_din),
    .to_V_full_n(data_stage4_V_full_n),
    .to_V_write(compute2_U0_to_V_write),
    .from_V_dout(data_stage2_V_dout),
    .from_V_empty_n(data_stage2_V_empty_n),
    .from_V_read(compute2_U0_from_V_read),
    .data_count_dout(data_count_c8_dout),
    .data_count_empty_n(data_count_c8_empty_n),
    .data_count_read(compute2_U0_data_count_read)
);

gather gather_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(gather_U0_ap_start),
    .ap_done(gather_U0_ap_done),
    .ap_continue(gather_U0_ap_continue),
    .ap_idle(gather_U0_ap_idle),
    .ap_ready(gather_U0_ap_ready),
    .to_V_din(gather_U0_to_V_din),
    .to_V_full_n(data_stage5_V_full_n),
    .to_V_write(gather_U0_to_V_write),
    .from0_V_dout(data_stage3_V_dout),
    .from0_V_empty_n(data_stage3_V_empty_n),
    .from0_V_read(gather_U0_from0_V_read),
    .from1_V_dout(data_stage4_V_dout),
    .from1_V_empty_n(data_stage4_V_empty_n),
    .from1_V_read(gather_U0_from1_V_read),
    .data_count_dout(data_count_c9_dout),
    .data_count_empty_n(data_count_c9_empty_n),
    .data_count_read(gather_U0_data_count_read),
    .data_count_out_din(gather_U0_data_count_out_din),
    .data_count_out_full_n(data_count_c10_full_n),
    .data_count_out_write(gather_U0_data_count_out_write)
);

store store_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(store_U0_ap_start),
    .ap_done(store_U0_ap_done),
    .ap_continue(store_U0_ap_continue),
    .ap_idle(store_U0_ap_idle),
    .ap_ready(store_U0_ap_ready),
    .m_axi_to_r_AWVALID(store_U0_m_axi_to_r_AWVALID),
    .m_axi_to_r_AWREADY(gmemo_AWREADY),
    .m_axi_to_r_AWADDR(store_U0_m_axi_to_r_AWADDR),
    .m_axi_to_r_AWID(store_U0_m_axi_to_r_AWID),
    .m_axi_to_r_AWLEN(store_U0_m_axi_to_r_AWLEN),
    .m_axi_to_r_AWSIZE(store_U0_m_axi_to_r_AWSIZE),
    .m_axi_to_r_AWBURST(store_U0_m_axi_to_r_AWBURST),
    .m_axi_to_r_AWLOCK(store_U0_m_axi_to_r_AWLOCK),
    .m_axi_to_r_AWCACHE(store_U0_m_axi_to_r_AWCACHE),
    .m_axi_to_r_AWPROT(store_U0_m_axi_to_r_AWPROT),
    .m_axi_to_r_AWQOS(store_U0_m_axi_to_r_AWQOS),
    .m_axi_to_r_AWREGION(store_U0_m_axi_to_r_AWREGION),
    .m_axi_to_r_AWUSER(store_U0_m_axi_to_r_AWUSER),
    .m_axi_to_r_WVALID(store_U0_m_axi_to_r_WVALID),
    .m_axi_to_r_WREADY(gmemo_WREADY),
    .m_axi_to_r_WDATA(store_U0_m_axi_to_r_WDATA),
    .m_axi_to_r_WSTRB(store_U0_m_axi_to_r_WSTRB),
    .m_axi_to_r_WLAST(store_U0_m_axi_to_r_WLAST),
    .m_axi_to_r_WID(store_U0_m_axi_to_r_WID),
    .m_axi_to_r_WUSER(store_U0_m_axi_to_r_WUSER),
    .m_axi_to_r_ARVALID(store_U0_m_axi_to_r_ARVALID),
    .m_axi_to_r_ARREADY(1'b0),
    .m_axi_to_r_ARADDR(store_U0_m_axi_to_r_ARADDR),
    .m_axi_to_r_ARID(store_U0_m_axi_to_r_ARID),
    .m_axi_to_r_ARLEN(store_U0_m_axi_to_r_ARLEN),
    .m_axi_to_r_ARSIZE(store_U0_m_axi_to_r_ARSIZE),
    .m_axi_to_r_ARBURST(store_U0_m_axi_to_r_ARBURST),
    .m_axi_to_r_ARLOCK(store_U0_m_axi_to_r_ARLOCK),
    .m_axi_to_r_ARCACHE(store_U0_m_axi_to_r_ARCACHE),
    .m_axi_to_r_ARPROT(store_U0_m_axi_to_r_ARPROT),
    .m_axi_to_r_ARQOS(store_U0_m_axi_to_r_ARQOS),
    .m_axi_to_r_ARREGION(store_U0_m_axi_to_r_ARREGION),
    .m_axi_to_r_ARUSER(store_U0_m_axi_to_r_ARUSER),
    .m_axi_to_r_RVALID(1'b0),
    .m_axi_to_r_RREADY(store_U0_m_axi_to_r_RREADY),
    .m_axi_to_r_RDATA(64'd0),
    .m_axi_to_r_RLAST(1'b0),
    .m_axi_to_r_RID(1'd0),
    .m_axi_to_r_RUSER(1'd0),
    .m_axi_to_r_RRESP(2'd0),
    .m_axi_to_r_BVALID(gmemo_BVALID),
    .m_axi_to_r_BREADY(store_U0_m_axi_to_r_BREADY),
    .m_axi_to_r_BRESP(gmemo_BRESP),
    .m_axi_to_r_BID(gmemo_BID),
    .m_axi_to_r_BUSER(gmemo_BUSER),
    .to_offset_dout(output_ddr0_c_dout),
    .to_offset_empty_n(output_ddr0_c_empty_n),
    .to_offset_read(store_U0_to_offset_read),
    .from_V_dout(data_stage5_V_dout),
    .from_V_empty_n(data_stage5_V_empty_n),
    .from_V_read(store_U0_from_V_read),
    .data_count_dout(data_count_c10_dout),
    .data_count_empty_n(data_count_c10_empty_n),
    .data_count_read(store_U0_data_count_read)
);

fifo_w64_d32_A data_stage0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load5_U0_to_V_din),
    .if_full_n(data_stage0_V_full_n),
    .if_write(load5_U0_to_V_write),
    .if_dout(data_stage0_V_dout),
    .if_empty_n(data_stage0_V_empty_n),
    .if_read(scatter_U0_from_V_read)
);

fifo_w32_d1_A data_count_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load5_U0_data_count_out_din),
    .if_full_n(data_count_c_full_n),
    .if_write(load5_U0_data_count_out_write),
    .if_dout(data_count_c_dout),
    .if_empty_n(data_count_c_empty_n),
    .if_read(scatter_U0_data_count_read)
);

fifo_w64_d4_A output_ddr0_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load5_U0_output_ddr0_out_din),
    .if_full_n(output_ddr0_c_full_n),
    .if_write(load5_U0_output_ddr0_out_write),
    .if_dout(output_ddr0_c_dout),
    .if_empty_n(output_ddr0_c_empty_n),
    .if_read(store_U0_to_offset_read)
);

fifo_w64_d1_A data_stage1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(scatter_U0_to0_V_din),
    .if_full_n(data_stage1_V_full_n),
    .if_write(scatter_U0_to0_V_write),
    .if_dout(data_stage1_V_dout),
    .if_empty_n(data_stage1_V_empty_n),
    .if_read(compute1_U0_from_V_read)
);

fifo_w64_d1_A data_stage2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(scatter_U0_to1_V_din),
    .if_full_n(data_stage2_V_full_n),
    .if_write(scatter_U0_to1_V_write),
    .if_dout(data_stage2_V_dout),
    .if_empty_n(data_stage2_V_empty_n),
    .if_read(compute2_U0_from_V_read)
);

fifo_w32_d1_A data_count_c7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(scatter_U0_data_count_out_din),
    .if_full_n(data_count_c7_full_n),
    .if_write(scatter_U0_data_count_out_write),
    .if_dout(data_count_c7_dout),
    .if_empty_n(data_count_c7_empty_n),
    .if_read(compute1_U0_data_count_read)
);

fifo_w32_d1_A data_count_c8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(scatter_U0_data_count_out1_din),
    .if_full_n(data_count_c8_full_n),
    .if_write(scatter_U0_data_count_out1_write),
    .if_dout(data_count_c8_dout),
    .if_empty_n(data_count_c8_empty_n),
    .if_read(compute2_U0_data_count_read)
);

fifo_w64_d5_A data_stage3_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(compute1_U0_to_V_din),
    .if_full_n(data_stage3_V_full_n),
    .if_write(compute1_U0_to_V_write),
    .if_dout(data_stage3_V_dout),
    .if_empty_n(data_stage3_V_empty_n),
    .if_read(gather_U0_from0_V_read)
);

fifo_w32_d1_A data_count_c9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(compute1_U0_data_count_out_din),
    .if_full_n(data_count_c9_full_n),
    .if_write(compute1_U0_data_count_out_write),
    .if_dout(data_count_c9_dout),
    .if_empty_n(data_count_c9_empty_n),
    .if_read(gather_U0_data_count_read)
);

fifo_w64_d1_A data_stage4_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(compute2_U0_to_V_din),
    .if_full_n(data_stage4_V_full_n),
    .if_write(compute2_U0_to_V_write),
    .if_dout(data_stage4_V_dout),
    .if_empty_n(data_stage4_V_empty_n),
    .if_read(gather_U0_from1_V_read)
);

fifo_w64_d32_A data_stage5_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gather_U0_to_V_din),
    .if_full_n(data_stage5_V_full_n),
    .if_write(gather_U0_to_V_write),
    .if_dout(data_stage5_V_dout),
    .if_empty_n(data_stage5_V_empty_n),
    .if_read(store_U0_from_V_read)
);

fifo_w32_d1_A data_count_c10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gather_U0_data_count_out_din),
    .if_full_n(data_count_c10_full_n),
    .if_write(gather_U0_data_count_out_write),
    .if_dout(data_count_c10_dout),
    .if_empty_n(data_count_c10_empty_n),
    .if_read(store_U0_data_count_read)
);

start_for_scatter_U0 start_for_scatter_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_scatter_U0_din),
    .if_full_n(start_for_scatter_U0_full_n),
    .if_write(load5_U0_start_write),
    .if_dout(start_for_scatter_U0_dout),
    .if_empty_n(start_for_scatter_U0_empty_n),
    .if_read(scatter_U0_ap_ready)
);

start_for_store_U0 start_for_store_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_store_U0_din),
    .if_full_n(start_for_store_U0_full_n),
    .if_write(load5_U0_start_write),
    .if_dout(start_for_store_U0_dout),
    .if_empty_n(start_for_store_U0_empty_n),
    .if_read(store_U0_ap_ready)
);

start_for_compute1_U0 start_for_compute1_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_compute1_U0_din),
    .if_full_n(start_for_compute1_U0_full_n),
    .if_write(scatter_U0_start_write),
    .if_dout(start_for_compute1_U0_dout),
    .if_empty_n(start_for_compute1_U0_empty_n),
    .if_read(compute1_U0_ap_ready)
);

start_for_compute2_U0 start_for_compute2_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_compute2_U0_din),
    .if_full_n(start_for_compute2_U0_full_n),
    .if_write(scatter_U0_start_write),
    .if_dout(start_for_compute2_U0_dout),
    .if_empty_n(start_for_compute2_U0_empty_n),
    .if_read(compute2_U0_ap_ready)
);

start_for_gather_U0 start_for_gather_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_gather_U0_din),
    .if_full_n(start_for_gather_U0_full_n),
    .if_write(compute1_U0_start_write),
    .if_dout(start_for_gather_U0_dout),
    .if_empty_n(start_for_gather_U0_empty_n),
    .if_read(gather_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ~ap_rst_n;
end

assign ap_done = store_U0_ap_done;

assign ap_idle = (load5_U0_ap_idle & scatter_U0_ap_idle & compute1_U0_ap_idle & compute2_U0_ap_idle & gather_U0_ap_idle & store_U0_ap_idle);

assign ap_ready = load5_U0_ap_ready;

assign ap_sync_continue = 1'b1;

assign ap_sync_done = store_U0_ap_done;

assign ap_sync_ready = load5_U0_ap_ready;

assign compute1_U0_ap_continue = 1'b1;

assign compute1_U0_ap_start = start_for_compute1_U0_empty_n;

assign compute1_U0_start_full_n = (1'b0 | start_for_gather_U0_full_n);

assign compute2_U0_ap_continue = 1'b1;

assign compute2_U0_ap_start = start_for_compute2_U0_empty_n;

assign compute2_U0_start_full_n = 1'b0;

assign compute2_U0_start_write = 1'b0;

assign gather_U0_ap_continue = 1'b1;

assign gather_U0_ap_start = start_for_gather_U0_empty_n;

assign gather_U0_start_full_n = 1'b0;

assign gather_U0_start_write = 1'b0;

assign load5_U0_ap_continue = 1'b1;

assign load5_U0_ap_start = ap_start;

assign load5_U0_start_full_n = (1'b0 | start_for_scatter_U0_full_n | start_for_store_U0_full_n);

assign scatter_U0_ap_continue = 1'b1;

assign scatter_U0_ap_start = start_for_scatter_U0_empty_n;

assign scatter_U0_start_full_n = (1'b0 | start_for_compute1_U0_full_n | start_for_compute2_U0_full_n);

assign start_for_compute1_U0_din = 1'b1;

assign start_for_compute2_U0_din = 1'b1;

assign start_for_gather_U0_din = 1'b1;

assign start_for_scatter_U0_din = 1'b1;

assign start_for_store_U0_din = 1'b1;

assign store_U0_ap_continue = 1'b1;

assign store_U0_ap_start = start_for_store_U0_empty_n;

assign store_U0_start_full_n = 1'b0;

assign store_U0_start_write = 1'b0;

//Additions for Response Bound Check                    

reg ready_after_sel_in_done;
reg sel_in_labeled;
wire sel_in;
wire label_sel_in;
reg [9:0] count;
wire all_enabled;
wire ready_in;
wire input_done;
reg input_after_sel;

reg [9:0] in_count;
reg [9:0] out_count;
reg [9:0] sel_in_count;

assign all_enabled = (scatter_U0.ap_enable_pp0 && compute1_U0.ap_enable_pp0
                   && compute2_U0.ap_enable_pp0 && store_U0.ap_enable_pp0);
assign ready_in = data_stage0_V_full_n;
assign input_sent = load5_U0_to_V_write;
assign label_sel_in = (sel_in && input_sent);
assign input_done = store_U0_from_V_read;


always @(posedge ap_clk) begin
    if(ap_rst_n_inv) begin
       in_count <= 10'b0;
    end else if (input_sent) begin
       in_count <= in_count + 1;
    end
end

always @(posedge ap_clk) begin
    if(ap_rst_n_inv) begin
       out_count <= 10'b0;
    end else if (input_done) begin
       out_count <= out_count + 1;
    end
end

always @(posedge ap_clk) begin
    if(ap_rst_n_inv) begin
       sel_in_labeled <= 1'b0;
       sel_in_count <= 10'hFFF;
    end else if (label_sel_in && !sel_in_labeled) begin
       sel_in_labeled <= 1'b1;
       sel_in_count <= in_count;
    end
end

always @(posedge ap_clk) begin
    if(ap_rst_n_inv) begin
       count <= 10'b0;
    end else if (sel_in_labeled && all_enabled) begin
       count <= count + 1;
    end
end

always @(posedge ap_clk) begin
    if(ap_rst_n_inv || (sel_in && !sel_in_labeled)) begin
       ready_after_sel_in_done <= 1'b0;
    end
    else if ((sel_in_count == out_count) && ready_in) begin
       ready_after_sel_in_done <= 1'b1;
    end
end



always @(posedge ap_clk) begin
    if(ap_rst_n_inv) begin
       input_after_sel <= 1'b0;
    end else if (sel_in_labeled && data_stage0_V_full_n) begin
       input_after_sel <= 1'b1;
    end
end


assert_RB_check_1: assert property (
       @(posedge ap_clk)
            ((count >  80)) |-> (input_after_sel));

assert_RB_check_2: assert property (
       @(posedge ap_clk)
            (count > 80) |-> (ready_after_sel_in_done));
                              


endmodule //dataflow_stalls_kernel
