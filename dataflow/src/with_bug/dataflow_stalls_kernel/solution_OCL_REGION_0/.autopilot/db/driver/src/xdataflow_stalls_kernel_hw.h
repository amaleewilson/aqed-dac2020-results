// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

// control
// 0x00 : Control signals
//        bit 0  - ap_start (Read/Write/COH)
//        bit 1  - ap_done (Read/COR)
//        bit 2  - ap_idle (Read)
//        bit 3  - ap_ready (Read)
//        bit 7  - auto_restart (Read/Write)
//        others - reserved
// 0x04 : Global Interrupt Enable Register
//        bit 0  - Global Interrupt Enable (Read/Write)
//        others - reserved
// 0x08 : IP Interrupt Enable Register (Read/Write)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x0c : IP Interrupt Status Register (Read/TOW)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x10 : Data signal of output_ddr0
//        bit 31~0 - output_ddr0[31:0] (Read/Write)
// 0x14 : Data signal of output_ddr0
//        bit 31~0 - output_ddr0[63:32] (Read/Write)
// 0x18 : reserved
// 0x1c : Data signal of input_ddr0
//        bit 31~0 - input_ddr0[31:0] (Read/Write)
// 0x20 : Data signal of input_ddr0
//        bit 31~0 - input_ddr0[63:32] (Read/Write)
// 0x24 : reserved
// 0x28 : Data signal of data_count
//        bit 31~0 - data_count[31:0] (Read/Write)
// 0x2c : reserved
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XDATAFLOW_STALLS_KERNEL_CONTROL_ADDR_AP_CTRL          0x00
#define XDATAFLOW_STALLS_KERNEL_CONTROL_ADDR_GIE              0x04
#define XDATAFLOW_STALLS_KERNEL_CONTROL_ADDR_IER              0x08
#define XDATAFLOW_STALLS_KERNEL_CONTROL_ADDR_ISR              0x0c
#define XDATAFLOW_STALLS_KERNEL_CONTROL_ADDR_OUTPUT_DDR0_DATA 0x10
#define XDATAFLOW_STALLS_KERNEL_CONTROL_BITS_OUTPUT_DDR0_DATA 64
#define XDATAFLOW_STALLS_KERNEL_CONTROL_ADDR_INPUT_DDR0_DATA  0x1c
#define XDATAFLOW_STALLS_KERNEL_CONTROL_BITS_INPUT_DDR0_DATA  64
#define XDATAFLOW_STALLS_KERNEL_CONTROL_ADDR_DATA_COUNT_DATA  0x28
#define XDATAFLOW_STALLS_KERNEL_CONTROL_BITS_DATA_COUNT_DATA  32

