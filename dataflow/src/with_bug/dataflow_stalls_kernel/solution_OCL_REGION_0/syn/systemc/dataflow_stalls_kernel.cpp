// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dataflow_stalls_kernel.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const int dataflow_stalls_kernel::C_S_AXI_DATA_WIDTH = "100000";
const int dataflow_stalls_kernel::C_S_AXI_WSTRB_WIDTH = "100";
const int dataflow_stalls_kernel::C_S_AXI_ADDR_WIDTH = "100000";
const sc_logic dataflow_stalls_kernel::ap_const_logic_1 = sc_dt::Log_1;
const int dataflow_stalls_kernel::C_M_AXI_GMEMO_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int dataflow_stalls_kernel::C_M_AXI_GMEMO_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int dataflow_stalls_kernel::C_M_AXI_GMEMO_CACHE_VALUE = "11";
const int dataflow_stalls_kernel::C_M_AXI_ID_WIDTH = "1";
const int dataflow_stalls_kernel::C_M_AXI_ADDR_WIDTH = "1000000";
const int dataflow_stalls_kernel::C_M_AXI_DATA_WIDTH = "100000";
const int dataflow_stalls_kernel::C_M_AXI_WSTRB_WIDTH = "100";
const int dataflow_stalls_kernel::C_M_AXI_AWUSER_WIDTH = "1";
const int dataflow_stalls_kernel::C_M_AXI_ARUSER_WIDTH = "1";
const int dataflow_stalls_kernel::C_M_AXI_WUSER_WIDTH = "1";
const int dataflow_stalls_kernel::C_M_AXI_RUSER_WIDTH = "1";
const int dataflow_stalls_kernel::C_M_AXI_BUSER_WIDTH = "1";
const int dataflow_stalls_kernel::C_M_AXI_GMEMI_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int dataflow_stalls_kernel::C_M_AXI_GMEMI_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int dataflow_stalls_kernel::C_M_AXI_GMEMI_CACHE_VALUE = "11";
const sc_logic dataflow_stalls_kernel::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<64> dataflow_stalls_kernel::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> dataflow_stalls_kernel::ap_const_lv64_1 = "1";
const sc_lv<1> dataflow_stalls_kernel::ap_const_lv1_0 = "0";
const sc_lv<1> dataflow_stalls_kernel::ap_const_lv1_1 = "1";
const sc_lv<32> dataflow_stalls_kernel::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dataflow_stalls_kernel::ap_const_lv32_1 = "1";
const sc_lv<3> dataflow_stalls_kernel::ap_const_lv3_0 = "000";
const sc_lv<3> dataflow_stalls_kernel::ap_const_lv3_1 = "1";
const sc_lv<2> dataflow_stalls_kernel::ap_const_lv2_0 = "00";
const sc_lv<2> dataflow_stalls_kernel::ap_const_lv2_1 = "1";
const sc_lv<4> dataflow_stalls_kernel::ap_const_lv4_0 = "0000";
const sc_lv<4> dataflow_stalls_kernel::ap_const_lv4_1 = "1";
const sc_lv<8> dataflow_stalls_kernel::ap_const_lv8_0 = "00000000";
const sc_lv<8> dataflow_stalls_kernel::ap_const_lv8_1 = "1";

dataflow_stalls_kernel::dataflow_stalls_kernel(sc_module_name name) : sc_module(name), mVcdFile(0) {
    dataflow_stalls_kernel_control_s_axi_U = new dataflow_stalls_kernel_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>("dataflow_stalls_kernel_control_s_axi_U");
    dataflow_stalls_kernel_control_s_axi_U->AWVALID(s_axi_control_AWVALID);
    dataflow_stalls_kernel_control_s_axi_U->AWREADY(s_axi_control_AWREADY);
    dataflow_stalls_kernel_control_s_axi_U->AWADDR(s_axi_control_AWADDR);
    dataflow_stalls_kernel_control_s_axi_U->WVALID(s_axi_control_WVALID);
    dataflow_stalls_kernel_control_s_axi_U->WREADY(s_axi_control_WREADY);
    dataflow_stalls_kernel_control_s_axi_U->WDATA(s_axi_control_WDATA);
    dataflow_stalls_kernel_control_s_axi_U->WSTRB(s_axi_control_WSTRB);
    dataflow_stalls_kernel_control_s_axi_U->ARVALID(s_axi_control_ARVALID);
    dataflow_stalls_kernel_control_s_axi_U->ARREADY(s_axi_control_ARREADY);
    dataflow_stalls_kernel_control_s_axi_U->ARADDR(s_axi_control_ARADDR);
    dataflow_stalls_kernel_control_s_axi_U->RVALID(s_axi_control_RVALID);
    dataflow_stalls_kernel_control_s_axi_U->RREADY(s_axi_control_RREADY);
    dataflow_stalls_kernel_control_s_axi_U->RDATA(s_axi_control_RDATA);
    dataflow_stalls_kernel_control_s_axi_U->RRESP(s_axi_control_RRESP);
    dataflow_stalls_kernel_control_s_axi_U->BVALID(s_axi_control_BVALID);
    dataflow_stalls_kernel_control_s_axi_U->BREADY(s_axi_control_BREADY);
    dataflow_stalls_kernel_control_s_axi_U->BRESP(s_axi_control_BRESP);
    dataflow_stalls_kernel_control_s_axi_U->ACLK(ap_clk);
    dataflow_stalls_kernel_control_s_axi_U->ARESET(ap_rst_n_inv);
    dataflow_stalls_kernel_control_s_axi_U->ACLK_EN(ap_var_for_const0);
    dataflow_stalls_kernel_control_s_axi_U->ap_start(ap_start);
    dataflow_stalls_kernel_control_s_axi_U->interrupt(interrupt);
    dataflow_stalls_kernel_control_s_axi_U->ap_ready(ap_ready);
    dataflow_stalls_kernel_control_s_axi_U->ap_done(ap_done);
    dataflow_stalls_kernel_control_s_axi_U->ap_idle(ap_idle);
    dataflow_stalls_kernel_control_s_axi_U->output_ddr0(output_ddr0);
    dataflow_stalls_kernel_control_s_axi_U->input_ddr0(input_ddr0);
    dataflow_stalls_kernel_control_s_axi_U->data_count(data_count);
    dataflow_stalls_kernel_gmemo_m_axi_U = new dataflow_stalls_kernel_gmemo_m_axi<64,64,5,16,16,16,16,C_M_AXI_GMEMO_ID_WIDTH,C_M_AXI_GMEMO_ADDR_WIDTH,C_M_AXI_GMEMO_DATA_WIDTH,C_M_AXI_GMEMO_AWUSER_WIDTH,C_M_AXI_GMEMO_ARUSER_WIDTH,C_M_AXI_GMEMO_WUSER_WIDTH,C_M_AXI_GMEMO_RUSER_WIDTH,C_M_AXI_GMEMO_BUSER_WIDTH,C_M_AXI_GMEMO_USER_VALUE,C_M_AXI_GMEMO_PROT_VALUE,C_M_AXI_GMEMO_CACHE_VALUE>("dataflow_stalls_kernel_gmemo_m_axi_U");
    dataflow_stalls_kernel_gmemo_m_axi_U->AWVALID(m_axi_gmemo_AWVALID);
    dataflow_stalls_kernel_gmemo_m_axi_U->AWREADY(m_axi_gmemo_AWREADY);
    dataflow_stalls_kernel_gmemo_m_axi_U->AWADDR(m_axi_gmemo_AWADDR);
    dataflow_stalls_kernel_gmemo_m_axi_U->AWID(m_axi_gmemo_AWID);
    dataflow_stalls_kernel_gmemo_m_axi_U->AWLEN(m_axi_gmemo_AWLEN);
    dataflow_stalls_kernel_gmemo_m_axi_U->AWSIZE(m_axi_gmemo_AWSIZE);
    dataflow_stalls_kernel_gmemo_m_axi_U->AWBURST(m_axi_gmemo_AWBURST);
    dataflow_stalls_kernel_gmemo_m_axi_U->AWLOCK(m_axi_gmemo_AWLOCK);
    dataflow_stalls_kernel_gmemo_m_axi_U->AWCACHE(m_axi_gmemo_AWCACHE);
    dataflow_stalls_kernel_gmemo_m_axi_U->AWPROT(m_axi_gmemo_AWPROT);
    dataflow_stalls_kernel_gmemo_m_axi_U->AWQOS(m_axi_gmemo_AWQOS);
    dataflow_stalls_kernel_gmemo_m_axi_U->AWREGION(m_axi_gmemo_AWREGION);
    dataflow_stalls_kernel_gmemo_m_axi_U->AWUSER(m_axi_gmemo_AWUSER);
    dataflow_stalls_kernel_gmemo_m_axi_U->WVALID(m_axi_gmemo_WVALID);
    dataflow_stalls_kernel_gmemo_m_axi_U->WREADY(m_axi_gmemo_WREADY);
    dataflow_stalls_kernel_gmemo_m_axi_U->WDATA(m_axi_gmemo_WDATA);
    dataflow_stalls_kernel_gmemo_m_axi_U->WSTRB(m_axi_gmemo_WSTRB);
    dataflow_stalls_kernel_gmemo_m_axi_U->WLAST(m_axi_gmemo_WLAST);
    dataflow_stalls_kernel_gmemo_m_axi_U->WID(m_axi_gmemo_WID);
    dataflow_stalls_kernel_gmemo_m_axi_U->WUSER(m_axi_gmemo_WUSER);
    dataflow_stalls_kernel_gmemo_m_axi_U->ARVALID(m_axi_gmemo_ARVALID);
    dataflow_stalls_kernel_gmemo_m_axi_U->ARREADY(m_axi_gmemo_ARREADY);
    dataflow_stalls_kernel_gmemo_m_axi_U->ARADDR(m_axi_gmemo_ARADDR);
    dataflow_stalls_kernel_gmemo_m_axi_U->ARID(m_axi_gmemo_ARID);
    dataflow_stalls_kernel_gmemo_m_axi_U->ARLEN(m_axi_gmemo_ARLEN);
    dataflow_stalls_kernel_gmemo_m_axi_U->ARSIZE(m_axi_gmemo_ARSIZE);
    dataflow_stalls_kernel_gmemo_m_axi_U->ARBURST(m_axi_gmemo_ARBURST);
    dataflow_stalls_kernel_gmemo_m_axi_U->ARLOCK(m_axi_gmemo_ARLOCK);
    dataflow_stalls_kernel_gmemo_m_axi_U->ARCACHE(m_axi_gmemo_ARCACHE);
    dataflow_stalls_kernel_gmemo_m_axi_U->ARPROT(m_axi_gmemo_ARPROT);
    dataflow_stalls_kernel_gmemo_m_axi_U->ARQOS(m_axi_gmemo_ARQOS);
    dataflow_stalls_kernel_gmemo_m_axi_U->ARREGION(m_axi_gmemo_ARREGION);
    dataflow_stalls_kernel_gmemo_m_axi_U->ARUSER(m_axi_gmemo_ARUSER);
    dataflow_stalls_kernel_gmemo_m_axi_U->RVALID(m_axi_gmemo_RVALID);
    dataflow_stalls_kernel_gmemo_m_axi_U->RREADY(m_axi_gmemo_RREADY);
    dataflow_stalls_kernel_gmemo_m_axi_U->RDATA(m_axi_gmemo_RDATA);
    dataflow_stalls_kernel_gmemo_m_axi_U->RLAST(m_axi_gmemo_RLAST);
    dataflow_stalls_kernel_gmemo_m_axi_U->RID(m_axi_gmemo_RID);
    dataflow_stalls_kernel_gmemo_m_axi_U->RUSER(m_axi_gmemo_RUSER);
    dataflow_stalls_kernel_gmemo_m_axi_U->RRESP(m_axi_gmemo_RRESP);
    dataflow_stalls_kernel_gmemo_m_axi_U->BVALID(m_axi_gmemo_BVALID);
    dataflow_stalls_kernel_gmemo_m_axi_U->BREADY(m_axi_gmemo_BREADY);
    dataflow_stalls_kernel_gmemo_m_axi_U->BRESP(m_axi_gmemo_BRESP);
    dataflow_stalls_kernel_gmemo_m_axi_U->BID(m_axi_gmemo_BID);
    dataflow_stalls_kernel_gmemo_m_axi_U->BUSER(m_axi_gmemo_BUSER);
    dataflow_stalls_kernel_gmemo_m_axi_U->ACLK(ap_clk);
    dataflow_stalls_kernel_gmemo_m_axi_U->ARESET(ap_rst_n_inv);
    dataflow_stalls_kernel_gmemo_m_axi_U->ACLK_EN(ap_var_for_const0);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_ARVALID(ap_var_for_const1);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_ARREADY(gmemo_ARREADY);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_ARADDR(ap_var_for_const2);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_ARID(ap_var_for_const3);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_ARLEN(ap_var_for_const4);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_ARSIZE(ap_var_for_const5);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_ARLOCK(ap_var_for_const6);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_ARCACHE(ap_var_for_const7);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_ARQOS(ap_var_for_const7);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_ARPROT(ap_var_for_const5);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_ARUSER(ap_var_for_const3);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_ARBURST(ap_var_for_const6);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_ARREGION(ap_var_for_const7);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_RVALID(gmemo_RVALID);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_RREADY(ap_var_for_const1);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_RDATA(gmemo_RDATA);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_RID(gmemo_RID);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_RUSER(gmemo_RUSER);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_RRESP(gmemo_RRESP);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_RLAST(gmemo_RLAST);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_AWVALID(store_U0_m_axi_to_r_AWVALID);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_AWREADY(gmemo_AWREADY);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_AWADDR(store_U0_m_axi_to_r_AWADDR);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_AWID(store_U0_m_axi_to_r_AWID);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_AWLEN(store_U0_m_axi_to_r_AWLEN);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_AWSIZE(store_U0_m_axi_to_r_AWSIZE);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_AWLOCK(store_U0_m_axi_to_r_AWLOCK);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_AWCACHE(store_U0_m_axi_to_r_AWCACHE);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_AWQOS(store_U0_m_axi_to_r_AWQOS);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_AWPROT(store_U0_m_axi_to_r_AWPROT);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_AWUSER(store_U0_m_axi_to_r_AWUSER);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_AWBURST(store_U0_m_axi_to_r_AWBURST);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_AWREGION(store_U0_m_axi_to_r_AWREGION);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_WVALID(store_U0_m_axi_to_r_WVALID);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_WREADY(gmemo_WREADY);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_WDATA(store_U0_m_axi_to_r_WDATA);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_WID(store_U0_m_axi_to_r_WID);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_WUSER(store_U0_m_axi_to_r_WUSER);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_WLAST(store_U0_m_axi_to_r_WLAST);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_WSTRB(store_U0_m_axi_to_r_WSTRB);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_BVALID(gmemo_BVALID);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_BREADY(store_U0_m_axi_to_r_BREADY);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_BRESP(gmemo_BRESP);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_BID(gmemo_BID);
    dataflow_stalls_kernel_gmemo_m_axi_U->I_BUSER(gmemo_BUSER);
    dataflow_stalls_kernel_gmemi_m_axi_U = new dataflow_stalls_kernel_gmemi_m_axi<64,64,5,16,16,16,16,C_M_AXI_GMEMI_ID_WIDTH,C_M_AXI_GMEMI_ADDR_WIDTH,C_M_AXI_GMEMI_DATA_WIDTH,C_M_AXI_GMEMI_AWUSER_WIDTH,C_M_AXI_GMEMI_ARUSER_WIDTH,C_M_AXI_GMEMI_WUSER_WIDTH,C_M_AXI_GMEMI_RUSER_WIDTH,C_M_AXI_GMEMI_BUSER_WIDTH,C_M_AXI_GMEMI_USER_VALUE,C_M_AXI_GMEMI_PROT_VALUE,C_M_AXI_GMEMI_CACHE_VALUE>("dataflow_stalls_kernel_gmemi_m_axi_U");
    dataflow_stalls_kernel_gmemi_m_axi_U->AWVALID(m_axi_gmemi_AWVALID);
    dataflow_stalls_kernel_gmemi_m_axi_U->AWREADY(m_axi_gmemi_AWREADY);
    dataflow_stalls_kernel_gmemi_m_axi_U->AWADDR(m_axi_gmemi_AWADDR);
    dataflow_stalls_kernel_gmemi_m_axi_U->AWID(m_axi_gmemi_AWID);
    dataflow_stalls_kernel_gmemi_m_axi_U->AWLEN(m_axi_gmemi_AWLEN);
    dataflow_stalls_kernel_gmemi_m_axi_U->AWSIZE(m_axi_gmemi_AWSIZE);
    dataflow_stalls_kernel_gmemi_m_axi_U->AWBURST(m_axi_gmemi_AWBURST);
    dataflow_stalls_kernel_gmemi_m_axi_U->AWLOCK(m_axi_gmemi_AWLOCK);
    dataflow_stalls_kernel_gmemi_m_axi_U->AWCACHE(m_axi_gmemi_AWCACHE);
    dataflow_stalls_kernel_gmemi_m_axi_U->AWPROT(m_axi_gmemi_AWPROT);
    dataflow_stalls_kernel_gmemi_m_axi_U->AWQOS(m_axi_gmemi_AWQOS);
    dataflow_stalls_kernel_gmemi_m_axi_U->AWREGION(m_axi_gmemi_AWREGION);
    dataflow_stalls_kernel_gmemi_m_axi_U->AWUSER(m_axi_gmemi_AWUSER);
    dataflow_stalls_kernel_gmemi_m_axi_U->WVALID(m_axi_gmemi_WVALID);
    dataflow_stalls_kernel_gmemi_m_axi_U->WREADY(m_axi_gmemi_WREADY);
    dataflow_stalls_kernel_gmemi_m_axi_U->WDATA(m_axi_gmemi_WDATA);
    dataflow_stalls_kernel_gmemi_m_axi_U->WSTRB(m_axi_gmemi_WSTRB);
    dataflow_stalls_kernel_gmemi_m_axi_U->WLAST(m_axi_gmemi_WLAST);
    dataflow_stalls_kernel_gmemi_m_axi_U->WID(m_axi_gmemi_WID);
    dataflow_stalls_kernel_gmemi_m_axi_U->WUSER(m_axi_gmemi_WUSER);
    dataflow_stalls_kernel_gmemi_m_axi_U->ARVALID(m_axi_gmemi_ARVALID);
    dataflow_stalls_kernel_gmemi_m_axi_U->ARREADY(m_axi_gmemi_ARREADY);
    dataflow_stalls_kernel_gmemi_m_axi_U->ARADDR(m_axi_gmemi_ARADDR);
    dataflow_stalls_kernel_gmemi_m_axi_U->ARID(m_axi_gmemi_ARID);
    dataflow_stalls_kernel_gmemi_m_axi_U->ARLEN(m_axi_gmemi_ARLEN);
    dataflow_stalls_kernel_gmemi_m_axi_U->ARSIZE(m_axi_gmemi_ARSIZE);
    dataflow_stalls_kernel_gmemi_m_axi_U->ARBURST(m_axi_gmemi_ARBURST);
    dataflow_stalls_kernel_gmemi_m_axi_U->ARLOCK(m_axi_gmemi_ARLOCK);
    dataflow_stalls_kernel_gmemi_m_axi_U->ARCACHE(m_axi_gmemi_ARCACHE);
    dataflow_stalls_kernel_gmemi_m_axi_U->ARPROT(m_axi_gmemi_ARPROT);
    dataflow_stalls_kernel_gmemi_m_axi_U->ARQOS(m_axi_gmemi_ARQOS);
    dataflow_stalls_kernel_gmemi_m_axi_U->ARREGION(m_axi_gmemi_ARREGION);
    dataflow_stalls_kernel_gmemi_m_axi_U->ARUSER(m_axi_gmemi_ARUSER);
    dataflow_stalls_kernel_gmemi_m_axi_U->RVALID(m_axi_gmemi_RVALID);
    dataflow_stalls_kernel_gmemi_m_axi_U->RREADY(m_axi_gmemi_RREADY);
    dataflow_stalls_kernel_gmemi_m_axi_U->RDATA(m_axi_gmemi_RDATA);
    dataflow_stalls_kernel_gmemi_m_axi_U->RLAST(m_axi_gmemi_RLAST);
    dataflow_stalls_kernel_gmemi_m_axi_U->RID(m_axi_gmemi_RID);
    dataflow_stalls_kernel_gmemi_m_axi_U->RUSER(m_axi_gmemi_RUSER);
    dataflow_stalls_kernel_gmemi_m_axi_U->RRESP(m_axi_gmemi_RRESP);
    dataflow_stalls_kernel_gmemi_m_axi_U->BVALID(m_axi_gmemi_BVALID);
    dataflow_stalls_kernel_gmemi_m_axi_U->BREADY(m_axi_gmemi_BREADY);
    dataflow_stalls_kernel_gmemi_m_axi_U->BRESP(m_axi_gmemi_BRESP);
    dataflow_stalls_kernel_gmemi_m_axi_U->BID(m_axi_gmemi_BID);
    dataflow_stalls_kernel_gmemi_m_axi_U->BUSER(m_axi_gmemi_BUSER);
    dataflow_stalls_kernel_gmemi_m_axi_U->ACLK(ap_clk);
    dataflow_stalls_kernel_gmemi_m_axi_U->ARESET(ap_rst_n_inv);
    dataflow_stalls_kernel_gmemi_m_axi_U->ACLK_EN(ap_var_for_const0);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_ARVALID(load5_U0_m_axi_from_ARVALID);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_ARREADY(gmemi_ARREADY);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_ARADDR(load5_U0_m_axi_from_ARADDR);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_ARID(load5_U0_m_axi_from_ARID);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_ARLEN(load5_U0_m_axi_from_ARLEN);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_ARSIZE(load5_U0_m_axi_from_ARSIZE);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_ARLOCK(load5_U0_m_axi_from_ARLOCK);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_ARCACHE(load5_U0_m_axi_from_ARCACHE);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_ARQOS(load5_U0_m_axi_from_ARQOS);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_ARPROT(load5_U0_m_axi_from_ARPROT);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_ARUSER(load5_U0_m_axi_from_ARUSER);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_ARBURST(load5_U0_m_axi_from_ARBURST);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_ARREGION(load5_U0_m_axi_from_ARREGION);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_RVALID(gmemi_RVALID);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_RREADY(load5_U0_m_axi_from_RREADY);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_RDATA(gmemi_RDATA);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_RID(gmemi_RID);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_RUSER(gmemi_RUSER);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_RRESP(gmemi_RRESP);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_RLAST(gmemi_RLAST);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_AWVALID(ap_var_for_const1);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_AWREADY(gmemi_AWREADY);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_AWADDR(ap_var_for_const2);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_AWID(ap_var_for_const3);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_AWLEN(ap_var_for_const4);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_AWSIZE(ap_var_for_const5);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_AWLOCK(ap_var_for_const6);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_AWCACHE(ap_var_for_const7);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_AWQOS(ap_var_for_const7);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_AWPROT(ap_var_for_const5);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_AWUSER(ap_var_for_const3);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_AWBURST(ap_var_for_const6);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_AWREGION(ap_var_for_const7);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_WVALID(ap_var_for_const1);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_WREADY(gmemi_WREADY);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_WDATA(ap_var_for_const2);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_WID(ap_var_for_const3);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_WUSER(ap_var_for_const3);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_WLAST(ap_var_for_const1);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_WSTRB(ap_var_for_const8);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_BVALID(gmemi_BVALID);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_BREADY(ap_var_for_const1);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_BRESP(gmemi_BRESP);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_BID(gmemi_BID);
    dataflow_stalls_kernel_gmemi_m_axi_U->I_BUSER(gmemi_BUSER);
    load5_U0 = new load5("load5_U0");
    load5_U0->ap_clk(ap_clk);
    load5_U0->ap_rst(ap_rst_n_inv);
    load5_U0->ap_start(load5_U0_ap_start);
    load5_U0->start_full_n(load5_U0_start_full_n);
    load5_U0->ap_ready(load5_U0_ap_ready);
    load5_U0->ap_done(load5_U0_ap_done);
    load5_U0->ap_continue(load5_U0_ap_continue);
    load5_U0->ap_idle(load5_U0_ap_idle);
    load5_U0->start_out(load5_U0_start_out);
    load5_U0->start_write(load5_U0_start_write);
    load5_U0->to_V_din(load5_U0_to_V_din);
    load5_U0->to_V_full_n(data_stage0_V_full_n);
    load5_U0->to_V_write(load5_U0_to_V_write);
    load5_U0->m_axi_from_AWVALID(load5_U0_m_axi_from_AWVALID);
    load5_U0->m_axi_from_AWREADY(ap_var_for_const1);
    load5_U0->m_axi_from_AWADDR(load5_U0_m_axi_from_AWADDR);
    load5_U0->m_axi_from_AWID(load5_U0_m_axi_from_AWID);
    load5_U0->m_axi_from_AWLEN(load5_U0_m_axi_from_AWLEN);
    load5_U0->m_axi_from_AWSIZE(load5_U0_m_axi_from_AWSIZE);
    load5_U0->m_axi_from_AWBURST(load5_U0_m_axi_from_AWBURST);
    load5_U0->m_axi_from_AWLOCK(load5_U0_m_axi_from_AWLOCK);
    load5_U0->m_axi_from_AWCACHE(load5_U0_m_axi_from_AWCACHE);
    load5_U0->m_axi_from_AWPROT(load5_U0_m_axi_from_AWPROT);
    load5_U0->m_axi_from_AWQOS(load5_U0_m_axi_from_AWQOS);
    load5_U0->m_axi_from_AWREGION(load5_U0_m_axi_from_AWREGION);
    load5_U0->m_axi_from_AWUSER(load5_U0_m_axi_from_AWUSER);
    load5_U0->m_axi_from_WVALID(load5_U0_m_axi_from_WVALID);
    load5_U0->m_axi_from_WREADY(ap_var_for_const1);
    load5_U0->m_axi_from_WDATA(load5_U0_m_axi_from_WDATA);
    load5_U0->m_axi_from_WSTRB(load5_U0_m_axi_from_WSTRB);
    load5_U0->m_axi_from_WLAST(load5_U0_m_axi_from_WLAST);
    load5_U0->m_axi_from_WID(load5_U0_m_axi_from_WID);
    load5_U0->m_axi_from_WUSER(load5_U0_m_axi_from_WUSER);
    load5_U0->m_axi_from_ARVALID(load5_U0_m_axi_from_ARVALID);
    load5_U0->m_axi_from_ARREADY(gmemi_ARREADY);
    load5_U0->m_axi_from_ARADDR(load5_U0_m_axi_from_ARADDR);
    load5_U0->m_axi_from_ARID(load5_U0_m_axi_from_ARID);
    load5_U0->m_axi_from_ARLEN(load5_U0_m_axi_from_ARLEN);
    load5_U0->m_axi_from_ARSIZE(load5_U0_m_axi_from_ARSIZE);
    load5_U0->m_axi_from_ARBURST(load5_U0_m_axi_from_ARBURST);
    load5_U0->m_axi_from_ARLOCK(load5_U0_m_axi_from_ARLOCK);
    load5_U0->m_axi_from_ARCACHE(load5_U0_m_axi_from_ARCACHE);
    load5_U0->m_axi_from_ARPROT(load5_U0_m_axi_from_ARPROT);
    load5_U0->m_axi_from_ARQOS(load5_U0_m_axi_from_ARQOS);
    load5_U0->m_axi_from_ARREGION(load5_U0_m_axi_from_ARREGION);
    load5_U0->m_axi_from_ARUSER(load5_U0_m_axi_from_ARUSER);
    load5_U0->m_axi_from_RVALID(gmemi_RVALID);
    load5_U0->m_axi_from_RREADY(load5_U0_m_axi_from_RREADY);
    load5_U0->m_axi_from_RDATA(gmemi_RDATA);
    load5_U0->m_axi_from_RLAST(gmemi_RLAST);
    load5_U0->m_axi_from_RID(gmemi_RID);
    load5_U0->m_axi_from_RUSER(gmemi_RUSER);
    load5_U0->m_axi_from_RRESP(gmemi_RRESP);
    load5_U0->m_axi_from_BVALID(ap_var_for_const1);
    load5_U0->m_axi_from_BREADY(load5_U0_m_axi_from_BREADY);
    load5_U0->m_axi_from_BRESP(ap_var_for_const6);
    load5_U0->m_axi_from_BID(ap_var_for_const3);
    load5_U0->m_axi_from_BUSER(ap_var_for_const3);
    load5_U0->from_offset(input_ddr0);
    load5_U0->data_count(data_count);
    load5_U0->data_count_out_din(load5_U0_data_count_out_din);
    load5_U0->data_count_out_full_n(data_count_c_full_n);
    load5_U0->data_count_out_write(load5_U0_data_count_out_write);
    load5_U0->output_ddr0(output_ddr0);
    load5_U0->output_ddr0_out_din(load5_U0_output_ddr0_out_din);
    load5_U0->output_ddr0_out_full_n(output_ddr0_c_full_n);
    load5_U0->output_ddr0_out_write(load5_U0_output_ddr0_out_write);
    scatter_U0 = new scatter("scatter_U0");
    scatter_U0->ap_clk(ap_clk);
    scatter_U0->ap_rst(ap_rst_n_inv);
    scatter_U0->ap_start(scatter_U0_ap_start);
    scatter_U0->start_full_n(scatter_U0_start_full_n);
    scatter_U0->ap_ready(scatter_U0_ap_ready);
    scatter_U0->ap_done(scatter_U0_ap_done);
    scatter_U0->ap_continue(scatter_U0_ap_continue);
    scatter_U0->ap_idle(scatter_U0_ap_idle);
    scatter_U0->start_out(scatter_U0_start_out);
    scatter_U0->start_write(scatter_U0_start_write);
    scatter_U0->to0_V_din(scatter_U0_to0_V_din);
    scatter_U0->to0_V_full_n(data_stage1_V_full_n);
    scatter_U0->to0_V_write(scatter_U0_to0_V_write);
    scatter_U0->to1_V_din(scatter_U0_to1_V_din);
    scatter_U0->to1_V_full_n(data_stage2_V_full_n);
    scatter_U0->to1_V_write(scatter_U0_to1_V_write);
    scatter_U0->from_V_dout(data_stage0_V_dout);
    scatter_U0->from_V_empty_n(data_stage0_V_empty_n);
    scatter_U0->from_V_read(scatter_U0_from_V_read);
    scatter_U0->data_count_dout(data_count_c_dout);
    scatter_U0->data_count_empty_n(data_count_c_empty_n);
    scatter_U0->data_count_read(scatter_U0_data_count_read);
    scatter_U0->data_count_out_din(scatter_U0_data_count_out_din);
    scatter_U0->data_count_out_full_n(data_count_c7_full_n);
    scatter_U0->data_count_out_write(scatter_U0_data_count_out_write);
    scatter_U0->data_count_out1_din(scatter_U0_data_count_out1_din);
    scatter_U0->data_count_out1_full_n(data_count_c8_full_n);
    scatter_U0->data_count_out1_write(scatter_U0_data_count_out1_write);
    compute1_U0 = new compute1("compute1_U0");
    compute1_U0->ap_clk(ap_clk);
    compute1_U0->ap_rst(ap_rst_n_inv);
    compute1_U0->ap_start(compute1_U0_ap_start);
    compute1_U0->start_full_n(compute1_U0_start_full_n);
    compute1_U0->ap_ready(compute1_U0_ap_ready);
    compute1_U0->ap_done(compute1_U0_ap_done);
    compute1_U0->ap_continue(compute1_U0_ap_continue);
    compute1_U0->ap_idle(compute1_U0_ap_idle);
    compute1_U0->start_out(compute1_U0_start_out);
    compute1_U0->start_write(compute1_U0_start_write);
    compute1_U0->to_V_din(compute1_U0_to_V_din);
    compute1_U0->to_V_full_n(data_stage3_V_full_n);
    compute1_U0->to_V_write(compute1_U0_to_V_write);
    compute1_U0->from_V_dout(data_stage1_V_dout);
    compute1_U0->from_V_empty_n(data_stage1_V_empty_n);
    compute1_U0->from_V_read(compute1_U0_from_V_read);
    compute1_U0->data_count_dout(data_count_c7_dout);
    compute1_U0->data_count_empty_n(data_count_c7_empty_n);
    compute1_U0->data_count_read(compute1_U0_data_count_read);
    compute1_U0->data_count_out_din(compute1_U0_data_count_out_din);
    compute1_U0->data_count_out_full_n(data_count_c9_full_n);
    compute1_U0->data_count_out_write(compute1_U0_data_count_out_write);
    compute2_U0 = new compute2("compute2_U0");
    compute2_U0->ap_clk(ap_clk);
    compute2_U0->ap_rst(ap_rst_n_inv);
    compute2_U0->ap_start(compute2_U0_ap_start);
    compute2_U0->ap_done(compute2_U0_ap_done);
    compute2_U0->ap_continue(compute2_U0_ap_continue);
    compute2_U0->ap_idle(compute2_U0_ap_idle);
    compute2_U0->ap_ready(compute2_U0_ap_ready);
    compute2_U0->to_V_din(compute2_U0_to_V_din);
    compute2_U0->to_V_full_n(data_stage4_V_full_n);
    compute2_U0->to_V_write(compute2_U0_to_V_write);
    compute2_U0->from_V_dout(data_stage2_V_dout);
    compute2_U0->from_V_empty_n(data_stage2_V_empty_n);
    compute2_U0->from_V_read(compute2_U0_from_V_read);
    compute2_U0->data_count_dout(data_count_c8_dout);
    compute2_U0->data_count_empty_n(data_count_c8_empty_n);
    compute2_U0->data_count_read(compute2_U0_data_count_read);
    gather_U0 = new gather("gather_U0");
    gather_U0->ap_clk(ap_clk);
    gather_U0->ap_rst(ap_rst_n_inv);
    gather_U0->ap_start(gather_U0_ap_start);
    gather_U0->ap_done(gather_U0_ap_done);
    gather_U0->ap_continue(gather_U0_ap_continue);
    gather_U0->ap_idle(gather_U0_ap_idle);
    gather_U0->ap_ready(gather_U0_ap_ready);
    gather_U0->to_V_din(gather_U0_to_V_din);
    gather_U0->to_V_full_n(data_stage5_V_full_n);
    gather_U0->to_V_write(gather_U0_to_V_write);
    gather_U0->from0_V_dout(data_stage3_V_dout);
    gather_U0->from0_V_empty_n(data_stage3_V_empty_n);
    gather_U0->from0_V_read(gather_U0_from0_V_read);
    gather_U0->from1_V_dout(data_stage4_V_dout);
    gather_U0->from1_V_empty_n(data_stage4_V_empty_n);
    gather_U0->from1_V_read(gather_U0_from1_V_read);
    gather_U0->data_count_dout(data_count_c9_dout);
    gather_U0->data_count_empty_n(data_count_c9_empty_n);
    gather_U0->data_count_read(gather_U0_data_count_read);
    gather_U0->data_count_out_din(gather_U0_data_count_out_din);
    gather_U0->data_count_out_full_n(data_count_c10_full_n);
    gather_U0->data_count_out_write(gather_U0_data_count_out_write);
    store_U0 = new store("store_U0");
    store_U0->ap_clk(ap_clk);
    store_U0->ap_rst(ap_rst_n_inv);
    store_U0->ap_start(store_U0_ap_start);
    store_U0->ap_done(store_U0_ap_done);
    store_U0->ap_continue(store_U0_ap_continue);
    store_U0->ap_idle(store_U0_ap_idle);
    store_U0->ap_ready(store_U0_ap_ready);
    store_U0->m_axi_to_r_AWVALID(store_U0_m_axi_to_r_AWVALID);
    store_U0->m_axi_to_r_AWREADY(gmemo_AWREADY);
    store_U0->m_axi_to_r_AWADDR(store_U0_m_axi_to_r_AWADDR);
    store_U0->m_axi_to_r_AWID(store_U0_m_axi_to_r_AWID);
    store_U0->m_axi_to_r_AWLEN(store_U0_m_axi_to_r_AWLEN);
    store_U0->m_axi_to_r_AWSIZE(store_U0_m_axi_to_r_AWSIZE);
    store_U0->m_axi_to_r_AWBURST(store_U0_m_axi_to_r_AWBURST);
    store_U0->m_axi_to_r_AWLOCK(store_U0_m_axi_to_r_AWLOCK);
    store_U0->m_axi_to_r_AWCACHE(store_U0_m_axi_to_r_AWCACHE);
    store_U0->m_axi_to_r_AWPROT(store_U0_m_axi_to_r_AWPROT);
    store_U0->m_axi_to_r_AWQOS(store_U0_m_axi_to_r_AWQOS);
    store_U0->m_axi_to_r_AWREGION(store_U0_m_axi_to_r_AWREGION);
    store_U0->m_axi_to_r_AWUSER(store_U0_m_axi_to_r_AWUSER);
    store_U0->m_axi_to_r_WVALID(store_U0_m_axi_to_r_WVALID);
    store_U0->m_axi_to_r_WREADY(gmemo_WREADY);
    store_U0->m_axi_to_r_WDATA(store_U0_m_axi_to_r_WDATA);
    store_U0->m_axi_to_r_WSTRB(store_U0_m_axi_to_r_WSTRB);
    store_U0->m_axi_to_r_WLAST(store_U0_m_axi_to_r_WLAST);
    store_U0->m_axi_to_r_WID(store_U0_m_axi_to_r_WID);
    store_U0->m_axi_to_r_WUSER(store_U0_m_axi_to_r_WUSER);
    store_U0->m_axi_to_r_ARVALID(store_U0_m_axi_to_r_ARVALID);
    store_U0->m_axi_to_r_ARREADY(ap_var_for_const1);
    store_U0->m_axi_to_r_ARADDR(store_U0_m_axi_to_r_ARADDR);
    store_U0->m_axi_to_r_ARID(store_U0_m_axi_to_r_ARID);
    store_U0->m_axi_to_r_ARLEN(store_U0_m_axi_to_r_ARLEN);
    store_U0->m_axi_to_r_ARSIZE(store_U0_m_axi_to_r_ARSIZE);
    store_U0->m_axi_to_r_ARBURST(store_U0_m_axi_to_r_ARBURST);
    store_U0->m_axi_to_r_ARLOCK(store_U0_m_axi_to_r_ARLOCK);
    store_U0->m_axi_to_r_ARCACHE(store_U0_m_axi_to_r_ARCACHE);
    store_U0->m_axi_to_r_ARPROT(store_U0_m_axi_to_r_ARPROT);
    store_U0->m_axi_to_r_ARQOS(store_U0_m_axi_to_r_ARQOS);
    store_U0->m_axi_to_r_ARREGION(store_U0_m_axi_to_r_ARREGION);
    store_U0->m_axi_to_r_ARUSER(store_U0_m_axi_to_r_ARUSER);
    store_U0->m_axi_to_r_RVALID(ap_var_for_const1);
    store_U0->m_axi_to_r_RREADY(store_U0_m_axi_to_r_RREADY);
    store_U0->m_axi_to_r_RDATA(ap_var_for_const2);
    store_U0->m_axi_to_r_RLAST(ap_var_for_const1);
    store_U0->m_axi_to_r_RID(ap_var_for_const3);
    store_U0->m_axi_to_r_RUSER(ap_var_for_const3);
    store_U0->m_axi_to_r_RRESP(ap_var_for_const6);
    store_U0->m_axi_to_r_BVALID(gmemo_BVALID);
    store_U0->m_axi_to_r_BREADY(store_U0_m_axi_to_r_BREADY);
    store_U0->m_axi_to_r_BRESP(gmemo_BRESP);
    store_U0->m_axi_to_r_BID(gmemo_BID);
    store_U0->m_axi_to_r_BUSER(gmemo_BUSER);
    store_U0->to_offset_dout(output_ddr0_c_dout);
    store_U0->to_offset_empty_n(output_ddr0_c_empty_n);
    store_U0->to_offset_read(store_U0_to_offset_read);
    store_U0->from_V_dout(data_stage5_V_dout);
    store_U0->from_V_empty_n(data_stage5_V_empty_n);
    store_U0->from_V_read(store_U0_from_V_read);
    store_U0->data_count_dout(data_count_c10_dout);
    store_U0->data_count_empty_n(data_count_c10_empty_n);
    store_U0->data_count_read(store_U0_data_count_read);
    data_stage0_V_U = new fifo_w64_d10_A("data_stage0_V_U");
    data_stage0_V_U->clk(ap_clk);
    data_stage0_V_U->reset(ap_rst_n_inv);
    data_stage0_V_U->if_read_ce(ap_var_for_const0);
    data_stage0_V_U->if_write_ce(ap_var_for_const0);
    data_stage0_V_U->if_din(load5_U0_to_V_din);
    data_stage0_V_U->if_full_n(data_stage0_V_full_n);
    data_stage0_V_U->if_write(load5_U0_to_V_write);
    data_stage0_V_U->if_dout(data_stage0_V_dout);
    data_stage0_V_U->if_empty_n(data_stage0_V_empty_n);
    data_stage0_V_U->if_read(scatter_U0_from_V_read);
    data_count_c_U = new fifo_w32_d1_A("data_count_c_U");
    data_count_c_U->clk(ap_clk);
    data_count_c_U->reset(ap_rst_n_inv);
    data_count_c_U->if_read_ce(ap_var_for_const0);
    data_count_c_U->if_write_ce(ap_var_for_const0);
    data_count_c_U->if_din(load5_U0_data_count_out_din);
    data_count_c_U->if_full_n(data_count_c_full_n);
    data_count_c_U->if_write(load5_U0_data_count_out_write);
    data_count_c_U->if_dout(data_count_c_dout);
    data_count_c_U->if_empty_n(data_count_c_empty_n);
    data_count_c_U->if_read(scatter_U0_data_count_read);
    output_ddr0_c_U = new fifo_w64_d4_A("output_ddr0_c_U");
    output_ddr0_c_U->clk(ap_clk);
    output_ddr0_c_U->reset(ap_rst_n_inv);
    output_ddr0_c_U->if_read_ce(ap_var_for_const0);
    output_ddr0_c_U->if_write_ce(ap_var_for_const0);
    output_ddr0_c_U->if_din(load5_U0_output_ddr0_out_din);
    output_ddr0_c_U->if_full_n(output_ddr0_c_full_n);
    output_ddr0_c_U->if_write(load5_U0_output_ddr0_out_write);
    output_ddr0_c_U->if_dout(output_ddr0_c_dout);
    output_ddr0_c_U->if_empty_n(output_ddr0_c_empty_n);
    output_ddr0_c_U->if_read(store_U0_to_offset_read);
    data_stage1_V_U = new fifo_w64_d1_A("data_stage1_V_U");
    data_stage1_V_U->clk(ap_clk);
    data_stage1_V_U->reset(ap_rst_n_inv);
    data_stage1_V_U->if_read_ce(ap_var_for_const0);
    data_stage1_V_U->if_write_ce(ap_var_for_const0);
    data_stage1_V_U->if_din(scatter_U0_to0_V_din);
    data_stage1_V_U->if_full_n(data_stage1_V_full_n);
    data_stage1_V_U->if_write(scatter_U0_to0_V_write);
    data_stage1_V_U->if_dout(data_stage1_V_dout);
    data_stage1_V_U->if_empty_n(data_stage1_V_empty_n);
    data_stage1_V_U->if_read(compute1_U0_from_V_read);
    data_stage2_V_U = new fifo_w64_d1_A("data_stage2_V_U");
    data_stage2_V_U->clk(ap_clk);
    data_stage2_V_U->reset(ap_rst_n_inv);
    data_stage2_V_U->if_read_ce(ap_var_for_const0);
    data_stage2_V_U->if_write_ce(ap_var_for_const0);
    data_stage2_V_U->if_din(scatter_U0_to1_V_din);
    data_stage2_V_U->if_full_n(data_stage2_V_full_n);
    data_stage2_V_U->if_write(scatter_U0_to1_V_write);
    data_stage2_V_U->if_dout(data_stage2_V_dout);
    data_stage2_V_U->if_empty_n(data_stage2_V_empty_n);
    data_stage2_V_U->if_read(compute2_U0_from_V_read);
    data_count_c7_U = new fifo_w32_d1_A("data_count_c7_U");
    data_count_c7_U->clk(ap_clk);
    data_count_c7_U->reset(ap_rst_n_inv);
    data_count_c7_U->if_read_ce(ap_var_for_const0);
    data_count_c7_U->if_write_ce(ap_var_for_const0);
    data_count_c7_U->if_din(scatter_U0_data_count_out_din);
    data_count_c7_U->if_full_n(data_count_c7_full_n);
    data_count_c7_U->if_write(scatter_U0_data_count_out_write);
    data_count_c7_U->if_dout(data_count_c7_dout);
    data_count_c7_U->if_empty_n(data_count_c7_empty_n);
    data_count_c7_U->if_read(compute1_U0_data_count_read);
    data_count_c8_U = new fifo_w32_d1_A("data_count_c8_U");
    data_count_c8_U->clk(ap_clk);
    data_count_c8_U->reset(ap_rst_n_inv);
    data_count_c8_U->if_read_ce(ap_var_for_const0);
    data_count_c8_U->if_write_ce(ap_var_for_const0);
    data_count_c8_U->if_din(scatter_U0_data_count_out1_din);
    data_count_c8_U->if_full_n(data_count_c8_full_n);
    data_count_c8_U->if_write(scatter_U0_data_count_out1_write);
    data_count_c8_U->if_dout(data_count_c8_dout);
    data_count_c8_U->if_empty_n(data_count_c8_empty_n);
    data_count_c8_U->if_read(compute2_U0_data_count_read);
    data_stage3_V_U = new fifo_w64_d1_A("data_stage3_V_U");
    data_stage3_V_U->clk(ap_clk);
    data_stage3_V_U->reset(ap_rst_n_inv);
    data_stage3_V_U->if_read_ce(ap_var_for_const0);
    data_stage3_V_U->if_write_ce(ap_var_for_const0);
    data_stage3_V_U->if_din(compute1_U0_to_V_din);
    data_stage3_V_U->if_full_n(data_stage3_V_full_n);
    data_stage3_V_U->if_write(compute1_U0_to_V_write);
    data_stage3_V_U->if_dout(data_stage3_V_dout);
    data_stage3_V_U->if_empty_n(data_stage3_V_empty_n);
    data_stage3_V_U->if_read(gather_U0_from0_V_read);
    data_count_c9_U = new fifo_w32_d1_A("data_count_c9_U");
    data_count_c9_U->clk(ap_clk);
    data_count_c9_U->reset(ap_rst_n_inv);
    data_count_c9_U->if_read_ce(ap_var_for_const0);
    data_count_c9_U->if_write_ce(ap_var_for_const0);
    data_count_c9_U->if_din(compute1_U0_data_count_out_din);
    data_count_c9_U->if_full_n(data_count_c9_full_n);
    data_count_c9_U->if_write(compute1_U0_data_count_out_write);
    data_count_c9_U->if_dout(data_count_c9_dout);
    data_count_c9_U->if_empty_n(data_count_c9_empty_n);
    data_count_c9_U->if_read(gather_U0_data_count_read);
    data_stage4_V_U = new fifo_w64_d1_A("data_stage4_V_U");
    data_stage4_V_U->clk(ap_clk);
    data_stage4_V_U->reset(ap_rst_n_inv);
    data_stage4_V_U->if_read_ce(ap_var_for_const0);
    data_stage4_V_U->if_write_ce(ap_var_for_const0);
    data_stage4_V_U->if_din(compute2_U0_to_V_din);
    data_stage4_V_U->if_full_n(data_stage4_V_full_n);
    data_stage4_V_U->if_write(compute2_U0_to_V_write);
    data_stage4_V_U->if_dout(data_stage4_V_dout);
    data_stage4_V_U->if_empty_n(data_stage4_V_empty_n);
    data_stage4_V_U->if_read(gather_U0_from1_V_read);
    data_stage5_V_U = new fifo_w64_d10_A("data_stage5_V_U");
    data_stage5_V_U->clk(ap_clk);
    data_stage5_V_U->reset(ap_rst_n_inv);
    data_stage5_V_U->if_read_ce(ap_var_for_const0);
    data_stage5_V_U->if_write_ce(ap_var_for_const0);
    data_stage5_V_U->if_din(gather_U0_to_V_din);
    data_stage5_V_U->if_full_n(data_stage5_V_full_n);
    data_stage5_V_U->if_write(gather_U0_to_V_write);
    data_stage5_V_U->if_dout(data_stage5_V_dout);
    data_stage5_V_U->if_empty_n(data_stage5_V_empty_n);
    data_stage5_V_U->if_read(store_U0_from_V_read);
    data_count_c10_U = new fifo_w32_d1_A("data_count_c10_U");
    data_count_c10_U->clk(ap_clk);
    data_count_c10_U->reset(ap_rst_n_inv);
    data_count_c10_U->if_read_ce(ap_var_for_const0);
    data_count_c10_U->if_write_ce(ap_var_for_const0);
    data_count_c10_U->if_din(gather_U0_data_count_out_din);
    data_count_c10_U->if_full_n(data_count_c10_full_n);
    data_count_c10_U->if_write(gather_U0_data_count_out_write);
    data_count_c10_U->if_dout(data_count_c10_dout);
    data_count_c10_U->if_empty_n(data_count_c10_empty_n);
    data_count_c10_U->if_read(store_U0_data_count_read);
    start_for_scatter_U0_U = new start_for_scatter_U0("start_for_scatter_U0_U");
    start_for_scatter_U0_U->clk(ap_clk);
    start_for_scatter_U0_U->reset(ap_rst_n_inv);
    start_for_scatter_U0_U->if_read_ce(ap_var_for_const0);
    start_for_scatter_U0_U->if_write_ce(ap_var_for_const0);
    start_for_scatter_U0_U->if_din(start_for_scatter_U0_din);
    start_for_scatter_U0_U->if_full_n(start_for_scatter_U0_full_n);
    start_for_scatter_U0_U->if_write(load5_U0_start_write);
    start_for_scatter_U0_U->if_dout(start_for_scatter_U0_dout);
    start_for_scatter_U0_U->if_empty_n(start_for_scatter_U0_empty_n);
    start_for_scatter_U0_U->if_read(scatter_U0_ap_ready);
    start_for_store_U0_U = new start_for_store_U0("start_for_store_U0_U");
    start_for_store_U0_U->clk(ap_clk);
    start_for_store_U0_U->reset(ap_rst_n_inv);
    start_for_store_U0_U->if_read_ce(ap_var_for_const0);
    start_for_store_U0_U->if_write_ce(ap_var_for_const0);
    start_for_store_U0_U->if_din(start_for_store_U0_din);
    start_for_store_U0_U->if_full_n(start_for_store_U0_full_n);
    start_for_store_U0_U->if_write(load5_U0_start_write);
    start_for_store_U0_U->if_dout(start_for_store_U0_dout);
    start_for_store_U0_U->if_empty_n(start_for_store_U0_empty_n);
    start_for_store_U0_U->if_read(store_U0_ap_ready);
    start_for_compute1_U0_U = new start_for_compute1_U0("start_for_compute1_U0_U");
    start_for_compute1_U0_U->clk(ap_clk);
    start_for_compute1_U0_U->reset(ap_rst_n_inv);
    start_for_compute1_U0_U->if_read_ce(ap_var_for_const0);
    start_for_compute1_U0_U->if_write_ce(ap_var_for_const0);
    start_for_compute1_U0_U->if_din(start_for_compute1_U0_din);
    start_for_compute1_U0_U->if_full_n(start_for_compute1_U0_full_n);
    start_for_compute1_U0_U->if_write(scatter_U0_start_write);
    start_for_compute1_U0_U->if_dout(start_for_compute1_U0_dout);
    start_for_compute1_U0_U->if_empty_n(start_for_compute1_U0_empty_n);
    start_for_compute1_U0_U->if_read(compute1_U0_ap_ready);
    start_for_compute2_U0_U = new start_for_compute2_U0("start_for_compute2_U0_U");
    start_for_compute2_U0_U->clk(ap_clk);
    start_for_compute2_U0_U->reset(ap_rst_n_inv);
    start_for_compute2_U0_U->if_read_ce(ap_var_for_const0);
    start_for_compute2_U0_U->if_write_ce(ap_var_for_const0);
    start_for_compute2_U0_U->if_din(start_for_compute2_U0_din);
    start_for_compute2_U0_U->if_full_n(start_for_compute2_U0_full_n);
    start_for_compute2_U0_U->if_write(scatter_U0_start_write);
    start_for_compute2_U0_U->if_dout(start_for_compute2_U0_dout);
    start_for_compute2_U0_U->if_empty_n(start_for_compute2_U0_empty_n);
    start_for_compute2_U0_U->if_read(compute2_U0_ap_ready);
    start_for_gather_U0_U = new start_for_gather_U0("start_for_gather_U0_U");
    start_for_gather_U0_U->clk(ap_clk);
    start_for_gather_U0_U->reset(ap_rst_n_inv);
    start_for_gather_U0_U->if_read_ce(ap_var_for_const0);
    start_for_gather_U0_U->if_write_ce(ap_var_for_const0);
    start_for_gather_U0_U->if_din(start_for_gather_U0_din);
    start_for_gather_U0_U->if_full_n(start_for_gather_U0_full_n);
    start_for_gather_U0_U->if_write(compute1_U0_start_write);
    start_for_gather_U0_U->if_dout(start_for_gather_U0_dout);
    start_for_gather_U0_U->if_empty_n(start_for_gather_U0_empty_n);
    start_for_gather_U0_U->if_read(gather_U0_ap_ready);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( store_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( load5_U0_ap_idle );
    sensitive << ( scatter_U0_ap_idle );
    sensitive << ( compute1_U0_ap_idle );
    sensitive << ( compute2_U0_ap_idle );
    sensitive << ( gather_U0_ap_idle );
    sensitive << ( store_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( load5_U0_ap_ready );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( store_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( load5_U0_ap_ready );

    SC_METHOD(thread_compute1_U0_ap_continue);

    SC_METHOD(thread_compute1_U0_ap_start);
    sensitive << ( start_for_compute1_U0_empty_n );

    SC_METHOD(thread_compute1_U0_start_full_n);
    sensitive << ( start_for_gather_U0_full_n );

    SC_METHOD(thread_compute2_U0_ap_continue);

    SC_METHOD(thread_compute2_U0_ap_start);
    sensitive << ( start_for_compute2_U0_empty_n );

    SC_METHOD(thread_compute2_U0_start_full_n);

    SC_METHOD(thread_compute2_U0_start_write);

    SC_METHOD(thread_gather_U0_ap_continue);

    SC_METHOD(thread_gather_U0_ap_start);
    sensitive << ( start_for_gather_U0_empty_n );

    SC_METHOD(thread_gather_U0_start_full_n);

    SC_METHOD(thread_gather_U0_start_write);

    SC_METHOD(thread_load5_U0_ap_continue);

    SC_METHOD(thread_load5_U0_ap_start);
    sensitive << ( ap_start );

    SC_METHOD(thread_load5_U0_start_full_n);
    sensitive << ( start_for_scatter_U0_full_n );
    sensitive << ( start_for_store_U0_full_n );

    SC_METHOD(thread_scatter_U0_ap_continue);

    SC_METHOD(thread_scatter_U0_ap_start);
    sensitive << ( start_for_scatter_U0_empty_n );

    SC_METHOD(thread_scatter_U0_start_full_n);
    sensitive << ( start_for_compute1_U0_full_n );
    sensitive << ( start_for_compute2_U0_full_n );

    SC_METHOD(thread_start_for_compute1_U0_din);

    SC_METHOD(thread_start_for_compute2_U0_din);

    SC_METHOD(thread_start_for_gather_U0_din);

    SC_METHOD(thread_start_for_scatter_U0_din);

    SC_METHOD(thread_start_for_store_U0_din);

    SC_METHOD(thread_store_U0_ap_continue);

    SC_METHOD(thread_store_U0_ap_start);
    sensitive << ( start_for_store_U0_empty_n );

    SC_METHOD(thread_store_U0_start_full_n);

    SC_METHOD(thread_store_U0_start_write);

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const8);

    ap_rst_n_inv = SC_LOGIC_1;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dataflow_stalls_kernel_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, s_axi_control_AWVALID, "(port)s_axi_control_AWVALID");
    sc_trace(mVcdFile, s_axi_control_AWREADY, "(port)s_axi_control_AWREADY");
    sc_trace(mVcdFile, s_axi_control_AWADDR, "(port)s_axi_control_AWADDR");
    sc_trace(mVcdFile, s_axi_control_WVALID, "(port)s_axi_control_WVALID");
    sc_trace(mVcdFile, s_axi_control_WREADY, "(port)s_axi_control_WREADY");
    sc_trace(mVcdFile, s_axi_control_WDATA, "(port)s_axi_control_WDATA");
    sc_trace(mVcdFile, s_axi_control_WSTRB, "(port)s_axi_control_WSTRB");
    sc_trace(mVcdFile, s_axi_control_ARVALID, "(port)s_axi_control_ARVALID");
    sc_trace(mVcdFile, s_axi_control_ARREADY, "(port)s_axi_control_ARREADY");
    sc_trace(mVcdFile, s_axi_control_ARADDR, "(port)s_axi_control_ARADDR");
    sc_trace(mVcdFile, s_axi_control_RVALID, "(port)s_axi_control_RVALID");
    sc_trace(mVcdFile, s_axi_control_RREADY, "(port)s_axi_control_RREADY");
    sc_trace(mVcdFile, s_axi_control_RDATA, "(port)s_axi_control_RDATA");
    sc_trace(mVcdFile, s_axi_control_RRESP, "(port)s_axi_control_RRESP");
    sc_trace(mVcdFile, s_axi_control_BVALID, "(port)s_axi_control_BVALID");
    sc_trace(mVcdFile, s_axi_control_BREADY, "(port)s_axi_control_BREADY");
    sc_trace(mVcdFile, s_axi_control_BRESP, "(port)s_axi_control_BRESP");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, m_axi_gmemo_AWVALID, "(port)m_axi_gmemo_AWVALID");
    sc_trace(mVcdFile, m_axi_gmemo_AWREADY, "(port)m_axi_gmemo_AWREADY");
    sc_trace(mVcdFile, m_axi_gmemo_AWADDR, "(port)m_axi_gmemo_AWADDR");
    sc_trace(mVcdFile, m_axi_gmemo_AWID, "(port)m_axi_gmemo_AWID");
    sc_trace(mVcdFile, m_axi_gmemo_AWLEN, "(port)m_axi_gmemo_AWLEN");
    sc_trace(mVcdFile, m_axi_gmemo_AWSIZE, "(port)m_axi_gmemo_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmemo_AWBURST, "(port)m_axi_gmemo_AWBURST");
    sc_trace(mVcdFile, m_axi_gmemo_AWLOCK, "(port)m_axi_gmemo_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmemo_AWCACHE, "(port)m_axi_gmemo_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmemo_AWPROT, "(port)m_axi_gmemo_AWPROT");
    sc_trace(mVcdFile, m_axi_gmemo_AWQOS, "(port)m_axi_gmemo_AWQOS");
    sc_trace(mVcdFile, m_axi_gmemo_AWREGION, "(port)m_axi_gmemo_AWREGION");
    sc_trace(mVcdFile, m_axi_gmemo_AWUSER, "(port)m_axi_gmemo_AWUSER");
    sc_trace(mVcdFile, m_axi_gmemo_WVALID, "(port)m_axi_gmemo_WVALID");
    sc_trace(mVcdFile, m_axi_gmemo_WREADY, "(port)m_axi_gmemo_WREADY");
    sc_trace(mVcdFile, m_axi_gmemo_WDATA, "(port)m_axi_gmemo_WDATA");
    sc_trace(mVcdFile, m_axi_gmemo_WSTRB, "(port)m_axi_gmemo_WSTRB");
    sc_trace(mVcdFile, m_axi_gmemo_WLAST, "(port)m_axi_gmemo_WLAST");
    sc_trace(mVcdFile, m_axi_gmemo_WID, "(port)m_axi_gmemo_WID");
    sc_trace(mVcdFile, m_axi_gmemo_WUSER, "(port)m_axi_gmemo_WUSER");
    sc_trace(mVcdFile, m_axi_gmemo_ARVALID, "(port)m_axi_gmemo_ARVALID");
    sc_trace(mVcdFile, m_axi_gmemo_ARREADY, "(port)m_axi_gmemo_ARREADY");
    sc_trace(mVcdFile, m_axi_gmemo_ARADDR, "(port)m_axi_gmemo_ARADDR");
    sc_trace(mVcdFile, m_axi_gmemo_ARID, "(port)m_axi_gmemo_ARID");
    sc_trace(mVcdFile, m_axi_gmemo_ARLEN, "(port)m_axi_gmemo_ARLEN");
    sc_trace(mVcdFile, m_axi_gmemo_ARSIZE, "(port)m_axi_gmemo_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmemo_ARBURST, "(port)m_axi_gmemo_ARBURST");
    sc_trace(mVcdFile, m_axi_gmemo_ARLOCK, "(port)m_axi_gmemo_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmemo_ARCACHE, "(port)m_axi_gmemo_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmemo_ARPROT, "(port)m_axi_gmemo_ARPROT");
    sc_trace(mVcdFile, m_axi_gmemo_ARQOS, "(port)m_axi_gmemo_ARQOS");
    sc_trace(mVcdFile, m_axi_gmemo_ARREGION, "(port)m_axi_gmemo_ARREGION");
    sc_trace(mVcdFile, m_axi_gmemo_ARUSER, "(port)m_axi_gmemo_ARUSER");
    sc_trace(mVcdFile, m_axi_gmemo_RVALID, "(port)m_axi_gmemo_RVALID");
    sc_trace(mVcdFile, m_axi_gmemo_RREADY, "(port)m_axi_gmemo_RREADY");
    sc_trace(mVcdFile, m_axi_gmemo_RDATA, "(port)m_axi_gmemo_RDATA");
    sc_trace(mVcdFile, m_axi_gmemo_RLAST, "(port)m_axi_gmemo_RLAST");
    sc_trace(mVcdFile, m_axi_gmemo_RID, "(port)m_axi_gmemo_RID");
    sc_trace(mVcdFile, m_axi_gmemo_RUSER, "(port)m_axi_gmemo_RUSER");
    sc_trace(mVcdFile, m_axi_gmemo_RRESP, "(port)m_axi_gmemo_RRESP");
    sc_trace(mVcdFile, m_axi_gmemo_BVALID, "(port)m_axi_gmemo_BVALID");
    sc_trace(mVcdFile, m_axi_gmemo_BREADY, "(port)m_axi_gmemo_BREADY");
    sc_trace(mVcdFile, m_axi_gmemo_BRESP, "(port)m_axi_gmemo_BRESP");
    sc_trace(mVcdFile, m_axi_gmemo_BID, "(port)m_axi_gmemo_BID");
    sc_trace(mVcdFile, m_axi_gmemo_BUSER, "(port)m_axi_gmemo_BUSER");
    sc_trace(mVcdFile, m_axi_gmemi_AWVALID, "(port)m_axi_gmemi_AWVALID");
    sc_trace(mVcdFile, m_axi_gmemi_AWREADY, "(port)m_axi_gmemi_AWREADY");
    sc_trace(mVcdFile, m_axi_gmemi_AWADDR, "(port)m_axi_gmemi_AWADDR");
    sc_trace(mVcdFile, m_axi_gmemi_AWID, "(port)m_axi_gmemi_AWID");
    sc_trace(mVcdFile, m_axi_gmemi_AWLEN, "(port)m_axi_gmemi_AWLEN");
    sc_trace(mVcdFile, m_axi_gmemi_AWSIZE, "(port)m_axi_gmemi_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmemi_AWBURST, "(port)m_axi_gmemi_AWBURST");
    sc_trace(mVcdFile, m_axi_gmemi_AWLOCK, "(port)m_axi_gmemi_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmemi_AWCACHE, "(port)m_axi_gmemi_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmemi_AWPROT, "(port)m_axi_gmemi_AWPROT");
    sc_trace(mVcdFile, m_axi_gmemi_AWQOS, "(port)m_axi_gmemi_AWQOS");
    sc_trace(mVcdFile, m_axi_gmemi_AWREGION, "(port)m_axi_gmemi_AWREGION");
    sc_trace(mVcdFile, m_axi_gmemi_AWUSER, "(port)m_axi_gmemi_AWUSER");
    sc_trace(mVcdFile, m_axi_gmemi_WVALID, "(port)m_axi_gmemi_WVALID");
    sc_trace(mVcdFile, m_axi_gmemi_WREADY, "(port)m_axi_gmemi_WREADY");
    sc_trace(mVcdFile, m_axi_gmemi_WDATA, "(port)m_axi_gmemi_WDATA");
    sc_trace(mVcdFile, m_axi_gmemi_WSTRB, "(port)m_axi_gmemi_WSTRB");
    sc_trace(mVcdFile, m_axi_gmemi_WLAST, "(port)m_axi_gmemi_WLAST");
    sc_trace(mVcdFile, m_axi_gmemi_WID, "(port)m_axi_gmemi_WID");
    sc_trace(mVcdFile, m_axi_gmemi_WUSER, "(port)m_axi_gmemi_WUSER");
    sc_trace(mVcdFile, m_axi_gmemi_ARVALID, "(port)m_axi_gmemi_ARVALID");
    sc_trace(mVcdFile, m_axi_gmemi_ARREADY, "(port)m_axi_gmemi_ARREADY");
    sc_trace(mVcdFile, m_axi_gmemi_ARADDR, "(port)m_axi_gmemi_ARADDR");
    sc_trace(mVcdFile, m_axi_gmemi_ARID, "(port)m_axi_gmemi_ARID");
    sc_trace(mVcdFile, m_axi_gmemi_ARLEN, "(port)m_axi_gmemi_ARLEN");
    sc_trace(mVcdFile, m_axi_gmemi_ARSIZE, "(port)m_axi_gmemi_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmemi_ARBURST, "(port)m_axi_gmemi_ARBURST");
    sc_trace(mVcdFile, m_axi_gmemi_ARLOCK, "(port)m_axi_gmemi_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmemi_ARCACHE, "(port)m_axi_gmemi_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmemi_ARPROT, "(port)m_axi_gmemi_ARPROT");
    sc_trace(mVcdFile, m_axi_gmemi_ARQOS, "(port)m_axi_gmemi_ARQOS");
    sc_trace(mVcdFile, m_axi_gmemi_ARREGION, "(port)m_axi_gmemi_ARREGION");
    sc_trace(mVcdFile, m_axi_gmemi_ARUSER, "(port)m_axi_gmemi_ARUSER");
    sc_trace(mVcdFile, m_axi_gmemi_RVALID, "(port)m_axi_gmemi_RVALID");
    sc_trace(mVcdFile, m_axi_gmemi_RREADY, "(port)m_axi_gmemi_RREADY");
    sc_trace(mVcdFile, m_axi_gmemi_RDATA, "(port)m_axi_gmemi_RDATA");
    sc_trace(mVcdFile, m_axi_gmemi_RLAST, "(port)m_axi_gmemi_RLAST");
    sc_trace(mVcdFile, m_axi_gmemi_RID, "(port)m_axi_gmemi_RID");
    sc_trace(mVcdFile, m_axi_gmemi_RUSER, "(port)m_axi_gmemi_RUSER");
    sc_trace(mVcdFile, m_axi_gmemi_RRESP, "(port)m_axi_gmemi_RRESP");
    sc_trace(mVcdFile, m_axi_gmemi_BVALID, "(port)m_axi_gmemi_BVALID");
    sc_trace(mVcdFile, m_axi_gmemi_BREADY, "(port)m_axi_gmemi_BREADY");
    sc_trace(mVcdFile, m_axi_gmemi_BRESP, "(port)m_axi_gmemi_BRESP");
    sc_trace(mVcdFile, m_axi_gmemi_BID, "(port)m_axi_gmemi_BID");
    sc_trace(mVcdFile, m_axi_gmemi_BUSER, "(port)m_axi_gmemi_BUSER");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, output_ddr0, "output_ddr0");
    sc_trace(mVcdFile, input_ddr0, "input_ddr0");
    sc_trace(mVcdFile, data_count, "data_count");
    sc_trace(mVcdFile, gmemo_AWREADY, "gmemo_AWREADY");
    sc_trace(mVcdFile, gmemo_WREADY, "gmemo_WREADY");
    sc_trace(mVcdFile, gmemo_ARREADY, "gmemo_ARREADY");
    sc_trace(mVcdFile, gmemo_RVALID, "gmemo_RVALID");
    sc_trace(mVcdFile, gmemo_RDATA, "gmemo_RDATA");
    sc_trace(mVcdFile, gmemo_RLAST, "gmemo_RLAST");
    sc_trace(mVcdFile, gmemo_RID, "gmemo_RID");
    sc_trace(mVcdFile, gmemo_RUSER, "gmemo_RUSER");
    sc_trace(mVcdFile, gmemo_RRESP, "gmemo_RRESP");
    sc_trace(mVcdFile, gmemo_BVALID, "gmemo_BVALID");
    sc_trace(mVcdFile, gmemo_BRESP, "gmemo_BRESP");
    sc_trace(mVcdFile, gmemo_BID, "gmemo_BID");
    sc_trace(mVcdFile, gmemo_BUSER, "gmemo_BUSER");
    sc_trace(mVcdFile, gmemi_AWREADY, "gmemi_AWREADY");
    sc_trace(mVcdFile, gmemi_WREADY, "gmemi_WREADY");
    sc_trace(mVcdFile, gmemi_ARREADY, "gmemi_ARREADY");
    sc_trace(mVcdFile, gmemi_RVALID, "gmemi_RVALID");
    sc_trace(mVcdFile, gmemi_RDATA, "gmemi_RDATA");
    sc_trace(mVcdFile, gmemi_RLAST, "gmemi_RLAST");
    sc_trace(mVcdFile, gmemi_RID, "gmemi_RID");
    sc_trace(mVcdFile, gmemi_RUSER, "gmemi_RUSER");
    sc_trace(mVcdFile, gmemi_RRESP, "gmemi_RRESP");
    sc_trace(mVcdFile, gmemi_BVALID, "gmemi_BVALID");
    sc_trace(mVcdFile, gmemi_BRESP, "gmemi_BRESP");
    sc_trace(mVcdFile, gmemi_BID, "gmemi_BID");
    sc_trace(mVcdFile, gmemi_BUSER, "gmemi_BUSER");
    sc_trace(mVcdFile, load5_U0_ap_start, "load5_U0_ap_start");
    sc_trace(mVcdFile, load5_U0_start_full_n, "load5_U0_start_full_n");
    sc_trace(mVcdFile, load5_U0_ap_ready, "load5_U0_ap_ready");
    sc_trace(mVcdFile, load5_U0_ap_done, "load5_U0_ap_done");
    sc_trace(mVcdFile, load5_U0_ap_continue, "load5_U0_ap_continue");
    sc_trace(mVcdFile, load5_U0_ap_idle, "load5_U0_ap_idle");
    sc_trace(mVcdFile, load5_U0_start_out, "load5_U0_start_out");
    sc_trace(mVcdFile, load5_U0_start_write, "load5_U0_start_write");
    sc_trace(mVcdFile, load5_U0_to_V_din, "load5_U0_to_V_din");
    sc_trace(mVcdFile, load5_U0_to_V_write, "load5_U0_to_V_write");
    sc_trace(mVcdFile, load5_U0_m_axi_from_AWVALID, "load5_U0_m_axi_from_AWVALID");
    sc_trace(mVcdFile, load5_U0_m_axi_from_AWADDR, "load5_U0_m_axi_from_AWADDR");
    sc_trace(mVcdFile, load5_U0_m_axi_from_AWID, "load5_U0_m_axi_from_AWID");
    sc_trace(mVcdFile, load5_U0_m_axi_from_AWLEN, "load5_U0_m_axi_from_AWLEN");
    sc_trace(mVcdFile, load5_U0_m_axi_from_AWSIZE, "load5_U0_m_axi_from_AWSIZE");
    sc_trace(mVcdFile, load5_U0_m_axi_from_AWBURST, "load5_U0_m_axi_from_AWBURST");
    sc_trace(mVcdFile, load5_U0_m_axi_from_AWLOCK, "load5_U0_m_axi_from_AWLOCK");
    sc_trace(mVcdFile, load5_U0_m_axi_from_AWCACHE, "load5_U0_m_axi_from_AWCACHE");
    sc_trace(mVcdFile, load5_U0_m_axi_from_AWPROT, "load5_U0_m_axi_from_AWPROT");
    sc_trace(mVcdFile, load5_U0_m_axi_from_AWQOS, "load5_U0_m_axi_from_AWQOS");
    sc_trace(mVcdFile, load5_U0_m_axi_from_AWREGION, "load5_U0_m_axi_from_AWREGION");
    sc_trace(mVcdFile, load5_U0_m_axi_from_AWUSER, "load5_U0_m_axi_from_AWUSER");
    sc_trace(mVcdFile, load5_U0_m_axi_from_WVALID, "load5_U0_m_axi_from_WVALID");
    sc_trace(mVcdFile, load5_U0_m_axi_from_WDATA, "load5_U0_m_axi_from_WDATA");
    sc_trace(mVcdFile, load5_U0_m_axi_from_WSTRB, "load5_U0_m_axi_from_WSTRB");
    sc_trace(mVcdFile, load5_U0_m_axi_from_WLAST, "load5_U0_m_axi_from_WLAST");
    sc_trace(mVcdFile, load5_U0_m_axi_from_WID, "load5_U0_m_axi_from_WID");
    sc_trace(mVcdFile, load5_U0_m_axi_from_WUSER, "load5_U0_m_axi_from_WUSER");
    sc_trace(mVcdFile, load5_U0_m_axi_from_ARVALID, "load5_U0_m_axi_from_ARVALID");
    sc_trace(mVcdFile, load5_U0_m_axi_from_ARADDR, "load5_U0_m_axi_from_ARADDR");
    sc_trace(mVcdFile, load5_U0_m_axi_from_ARID, "load5_U0_m_axi_from_ARID");
    sc_trace(mVcdFile, load5_U0_m_axi_from_ARLEN, "load5_U0_m_axi_from_ARLEN");
    sc_trace(mVcdFile, load5_U0_m_axi_from_ARSIZE, "load5_U0_m_axi_from_ARSIZE");
    sc_trace(mVcdFile, load5_U0_m_axi_from_ARBURST, "load5_U0_m_axi_from_ARBURST");
    sc_trace(mVcdFile, load5_U0_m_axi_from_ARLOCK, "load5_U0_m_axi_from_ARLOCK");
    sc_trace(mVcdFile, load5_U0_m_axi_from_ARCACHE, "load5_U0_m_axi_from_ARCACHE");
    sc_trace(mVcdFile, load5_U0_m_axi_from_ARPROT, "load5_U0_m_axi_from_ARPROT");
    sc_trace(mVcdFile, load5_U0_m_axi_from_ARQOS, "load5_U0_m_axi_from_ARQOS");
    sc_trace(mVcdFile, load5_U0_m_axi_from_ARREGION, "load5_U0_m_axi_from_ARREGION");
    sc_trace(mVcdFile, load5_U0_m_axi_from_ARUSER, "load5_U0_m_axi_from_ARUSER");
    sc_trace(mVcdFile, load5_U0_m_axi_from_RREADY, "load5_U0_m_axi_from_RREADY");
    sc_trace(mVcdFile, load5_U0_m_axi_from_BREADY, "load5_U0_m_axi_from_BREADY");
    sc_trace(mVcdFile, load5_U0_data_count_out_din, "load5_U0_data_count_out_din");
    sc_trace(mVcdFile, load5_U0_data_count_out_write, "load5_U0_data_count_out_write");
    sc_trace(mVcdFile, load5_U0_output_ddr0_out_din, "load5_U0_output_ddr0_out_din");
    sc_trace(mVcdFile, load5_U0_output_ddr0_out_write, "load5_U0_output_ddr0_out_write");
    sc_trace(mVcdFile, scatter_U0_ap_start, "scatter_U0_ap_start");
    sc_trace(mVcdFile, scatter_U0_start_full_n, "scatter_U0_start_full_n");
    sc_trace(mVcdFile, scatter_U0_ap_ready, "scatter_U0_ap_ready");
    sc_trace(mVcdFile, scatter_U0_ap_done, "scatter_U0_ap_done");
    sc_trace(mVcdFile, scatter_U0_ap_continue, "scatter_U0_ap_continue");
    sc_trace(mVcdFile, scatter_U0_ap_idle, "scatter_U0_ap_idle");
    sc_trace(mVcdFile, scatter_U0_start_out, "scatter_U0_start_out");
    sc_trace(mVcdFile, scatter_U0_start_write, "scatter_U0_start_write");
    sc_trace(mVcdFile, scatter_U0_to0_V_din, "scatter_U0_to0_V_din");
    sc_trace(mVcdFile, scatter_U0_to0_V_write, "scatter_U0_to0_V_write");
    sc_trace(mVcdFile, scatter_U0_to1_V_din, "scatter_U0_to1_V_din");
    sc_trace(mVcdFile, scatter_U0_to1_V_write, "scatter_U0_to1_V_write");
    sc_trace(mVcdFile, scatter_U0_from_V_read, "scatter_U0_from_V_read");
    sc_trace(mVcdFile, scatter_U0_data_count_read, "scatter_U0_data_count_read");
    sc_trace(mVcdFile, scatter_U0_data_count_out_din, "scatter_U0_data_count_out_din");
    sc_trace(mVcdFile, scatter_U0_data_count_out_write, "scatter_U0_data_count_out_write");
    sc_trace(mVcdFile, scatter_U0_data_count_out1_din, "scatter_U0_data_count_out1_din");
    sc_trace(mVcdFile, scatter_U0_data_count_out1_write, "scatter_U0_data_count_out1_write");
    sc_trace(mVcdFile, compute1_U0_ap_start, "compute1_U0_ap_start");
    sc_trace(mVcdFile, compute1_U0_start_full_n, "compute1_U0_start_full_n");
    sc_trace(mVcdFile, compute1_U0_ap_ready, "compute1_U0_ap_ready");
    sc_trace(mVcdFile, compute1_U0_ap_done, "compute1_U0_ap_done");
    sc_trace(mVcdFile, compute1_U0_ap_continue, "compute1_U0_ap_continue");
    sc_trace(mVcdFile, compute1_U0_ap_idle, "compute1_U0_ap_idle");
    sc_trace(mVcdFile, compute1_U0_start_out, "compute1_U0_start_out");
    sc_trace(mVcdFile, compute1_U0_start_write, "compute1_U0_start_write");
    sc_trace(mVcdFile, compute1_U0_to_V_din, "compute1_U0_to_V_din");
    sc_trace(mVcdFile, compute1_U0_to_V_write, "compute1_U0_to_V_write");
    sc_trace(mVcdFile, compute1_U0_from_V_read, "compute1_U0_from_V_read");
    sc_trace(mVcdFile, compute1_U0_data_count_read, "compute1_U0_data_count_read");
    sc_trace(mVcdFile, compute1_U0_data_count_out_din, "compute1_U0_data_count_out_din");
    sc_trace(mVcdFile, compute1_U0_data_count_out_write, "compute1_U0_data_count_out_write");
    sc_trace(mVcdFile, compute2_U0_ap_start, "compute2_U0_ap_start");
    sc_trace(mVcdFile, compute2_U0_ap_done, "compute2_U0_ap_done");
    sc_trace(mVcdFile, compute2_U0_ap_continue, "compute2_U0_ap_continue");
    sc_trace(mVcdFile, compute2_U0_ap_idle, "compute2_U0_ap_idle");
    sc_trace(mVcdFile, compute2_U0_ap_ready, "compute2_U0_ap_ready");
    sc_trace(mVcdFile, compute2_U0_to_V_din, "compute2_U0_to_V_din");
    sc_trace(mVcdFile, compute2_U0_to_V_write, "compute2_U0_to_V_write");
    sc_trace(mVcdFile, compute2_U0_from_V_read, "compute2_U0_from_V_read");
    sc_trace(mVcdFile, compute2_U0_data_count_read, "compute2_U0_data_count_read");
    sc_trace(mVcdFile, gather_U0_ap_start, "gather_U0_ap_start");
    sc_trace(mVcdFile, gather_U0_ap_done, "gather_U0_ap_done");
    sc_trace(mVcdFile, gather_U0_ap_continue, "gather_U0_ap_continue");
    sc_trace(mVcdFile, gather_U0_ap_idle, "gather_U0_ap_idle");
    sc_trace(mVcdFile, gather_U0_ap_ready, "gather_U0_ap_ready");
    sc_trace(mVcdFile, gather_U0_to_V_din, "gather_U0_to_V_din");
    sc_trace(mVcdFile, gather_U0_to_V_write, "gather_U0_to_V_write");
    sc_trace(mVcdFile, gather_U0_from0_V_read, "gather_U0_from0_V_read");
    sc_trace(mVcdFile, gather_U0_from1_V_read, "gather_U0_from1_V_read");
    sc_trace(mVcdFile, gather_U0_data_count_read, "gather_U0_data_count_read");
    sc_trace(mVcdFile, gather_U0_data_count_out_din, "gather_U0_data_count_out_din");
    sc_trace(mVcdFile, gather_U0_data_count_out_write, "gather_U0_data_count_out_write");
    sc_trace(mVcdFile, store_U0_ap_start, "store_U0_ap_start");
    sc_trace(mVcdFile, store_U0_ap_done, "store_U0_ap_done");
    sc_trace(mVcdFile, store_U0_ap_continue, "store_U0_ap_continue");
    sc_trace(mVcdFile, store_U0_ap_idle, "store_U0_ap_idle");
    sc_trace(mVcdFile, store_U0_ap_ready, "store_U0_ap_ready");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_AWVALID, "store_U0_m_axi_to_r_AWVALID");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_AWADDR, "store_U0_m_axi_to_r_AWADDR");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_AWID, "store_U0_m_axi_to_r_AWID");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_AWLEN, "store_U0_m_axi_to_r_AWLEN");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_AWSIZE, "store_U0_m_axi_to_r_AWSIZE");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_AWBURST, "store_U0_m_axi_to_r_AWBURST");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_AWLOCK, "store_U0_m_axi_to_r_AWLOCK");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_AWCACHE, "store_U0_m_axi_to_r_AWCACHE");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_AWPROT, "store_U0_m_axi_to_r_AWPROT");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_AWQOS, "store_U0_m_axi_to_r_AWQOS");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_AWREGION, "store_U0_m_axi_to_r_AWREGION");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_AWUSER, "store_U0_m_axi_to_r_AWUSER");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_WVALID, "store_U0_m_axi_to_r_WVALID");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_WDATA, "store_U0_m_axi_to_r_WDATA");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_WSTRB, "store_U0_m_axi_to_r_WSTRB");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_WLAST, "store_U0_m_axi_to_r_WLAST");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_WID, "store_U0_m_axi_to_r_WID");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_WUSER, "store_U0_m_axi_to_r_WUSER");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_ARVALID, "store_U0_m_axi_to_r_ARVALID");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_ARADDR, "store_U0_m_axi_to_r_ARADDR");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_ARID, "store_U0_m_axi_to_r_ARID");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_ARLEN, "store_U0_m_axi_to_r_ARLEN");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_ARSIZE, "store_U0_m_axi_to_r_ARSIZE");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_ARBURST, "store_U0_m_axi_to_r_ARBURST");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_ARLOCK, "store_U0_m_axi_to_r_ARLOCK");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_ARCACHE, "store_U0_m_axi_to_r_ARCACHE");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_ARPROT, "store_U0_m_axi_to_r_ARPROT");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_ARQOS, "store_U0_m_axi_to_r_ARQOS");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_ARREGION, "store_U0_m_axi_to_r_ARREGION");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_ARUSER, "store_U0_m_axi_to_r_ARUSER");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_RREADY, "store_U0_m_axi_to_r_RREADY");
    sc_trace(mVcdFile, store_U0_m_axi_to_r_BREADY, "store_U0_m_axi_to_r_BREADY");
    sc_trace(mVcdFile, store_U0_to_offset_read, "store_U0_to_offset_read");
    sc_trace(mVcdFile, store_U0_from_V_read, "store_U0_from_V_read");
    sc_trace(mVcdFile, store_U0_data_count_read, "store_U0_data_count_read");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, data_stage0_V_full_n, "data_stage0_V_full_n");
    sc_trace(mVcdFile, data_stage0_V_dout, "data_stage0_V_dout");
    sc_trace(mVcdFile, data_stage0_V_empty_n, "data_stage0_V_empty_n");
    sc_trace(mVcdFile, data_count_c_full_n, "data_count_c_full_n");
    sc_trace(mVcdFile, data_count_c_dout, "data_count_c_dout");
    sc_trace(mVcdFile, data_count_c_empty_n, "data_count_c_empty_n");
    sc_trace(mVcdFile, output_ddr0_c_full_n, "output_ddr0_c_full_n");
    sc_trace(mVcdFile, output_ddr0_c_dout, "output_ddr0_c_dout");
    sc_trace(mVcdFile, output_ddr0_c_empty_n, "output_ddr0_c_empty_n");
    sc_trace(mVcdFile, data_stage1_V_full_n, "data_stage1_V_full_n");
    sc_trace(mVcdFile, data_stage1_V_dout, "data_stage1_V_dout");
    sc_trace(mVcdFile, data_stage1_V_empty_n, "data_stage1_V_empty_n");
    sc_trace(mVcdFile, data_stage2_V_full_n, "data_stage2_V_full_n");
    sc_trace(mVcdFile, data_stage2_V_dout, "data_stage2_V_dout");
    sc_trace(mVcdFile, data_stage2_V_empty_n, "data_stage2_V_empty_n");
    sc_trace(mVcdFile, data_count_c7_full_n, "data_count_c7_full_n");
    sc_trace(mVcdFile, data_count_c7_dout, "data_count_c7_dout");
    sc_trace(mVcdFile, data_count_c7_empty_n, "data_count_c7_empty_n");
    sc_trace(mVcdFile, data_count_c8_full_n, "data_count_c8_full_n");
    sc_trace(mVcdFile, data_count_c8_dout, "data_count_c8_dout");
    sc_trace(mVcdFile, data_count_c8_empty_n, "data_count_c8_empty_n");
    sc_trace(mVcdFile, data_stage3_V_full_n, "data_stage3_V_full_n");
    sc_trace(mVcdFile, data_stage3_V_dout, "data_stage3_V_dout");
    sc_trace(mVcdFile, data_stage3_V_empty_n, "data_stage3_V_empty_n");
    sc_trace(mVcdFile, data_count_c9_full_n, "data_count_c9_full_n");
    sc_trace(mVcdFile, data_count_c9_dout, "data_count_c9_dout");
    sc_trace(mVcdFile, data_count_c9_empty_n, "data_count_c9_empty_n");
    sc_trace(mVcdFile, data_stage4_V_full_n, "data_stage4_V_full_n");
    sc_trace(mVcdFile, data_stage4_V_dout, "data_stage4_V_dout");
    sc_trace(mVcdFile, data_stage4_V_empty_n, "data_stage4_V_empty_n");
    sc_trace(mVcdFile, data_stage5_V_full_n, "data_stage5_V_full_n");
    sc_trace(mVcdFile, data_stage5_V_dout, "data_stage5_V_dout");
    sc_trace(mVcdFile, data_stage5_V_empty_n, "data_stage5_V_empty_n");
    sc_trace(mVcdFile, data_count_c10_full_n, "data_count_c10_full_n");
    sc_trace(mVcdFile, data_count_c10_dout, "data_count_c10_dout");
    sc_trace(mVcdFile, data_count_c10_empty_n, "data_count_c10_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, start_for_scatter_U0_din, "start_for_scatter_U0_din");
    sc_trace(mVcdFile, start_for_scatter_U0_full_n, "start_for_scatter_U0_full_n");
    sc_trace(mVcdFile, start_for_scatter_U0_dout, "start_for_scatter_U0_dout");
    sc_trace(mVcdFile, start_for_scatter_U0_empty_n, "start_for_scatter_U0_empty_n");
    sc_trace(mVcdFile, start_for_store_U0_din, "start_for_store_U0_din");
    sc_trace(mVcdFile, start_for_store_U0_full_n, "start_for_store_U0_full_n");
    sc_trace(mVcdFile, start_for_store_U0_dout, "start_for_store_U0_dout");
    sc_trace(mVcdFile, start_for_store_U0_empty_n, "start_for_store_U0_empty_n");
    sc_trace(mVcdFile, start_for_compute1_U0_din, "start_for_compute1_U0_din");
    sc_trace(mVcdFile, start_for_compute1_U0_full_n, "start_for_compute1_U0_full_n");
    sc_trace(mVcdFile, start_for_compute1_U0_dout, "start_for_compute1_U0_dout");
    sc_trace(mVcdFile, start_for_compute1_U0_empty_n, "start_for_compute1_U0_empty_n");
    sc_trace(mVcdFile, start_for_compute2_U0_din, "start_for_compute2_U0_din");
    sc_trace(mVcdFile, start_for_compute2_U0_full_n, "start_for_compute2_U0_full_n");
    sc_trace(mVcdFile, start_for_compute2_U0_dout, "start_for_compute2_U0_dout");
    sc_trace(mVcdFile, start_for_compute2_U0_empty_n, "start_for_compute2_U0_empty_n");
    sc_trace(mVcdFile, start_for_gather_U0_din, "start_for_gather_U0_din");
    sc_trace(mVcdFile, start_for_gather_U0_full_n, "start_for_gather_U0_full_n");
    sc_trace(mVcdFile, start_for_gather_U0_dout, "start_for_gather_U0_dout");
    sc_trace(mVcdFile, start_for_gather_U0_empty_n, "start_for_gather_U0_empty_n");
    sc_trace(mVcdFile, compute2_U0_start_full_n, "compute2_U0_start_full_n");
    sc_trace(mVcdFile, compute2_U0_start_write, "compute2_U0_start_write");
    sc_trace(mVcdFile, gather_U0_start_full_n, "gather_U0_start_full_n");
    sc_trace(mVcdFile, gather_U0_start_write, "gather_U0_start_write");
    sc_trace(mVcdFile, store_U0_start_full_n, "store_U0_start_full_n");
    sc_trace(mVcdFile, store_U0_start_write, "store_U0_start_write");
#endif

    }
    mHdltvinHandle.open("dataflow_stalls_kernel.hdltvin.dat");
    mHdltvoutHandle.open("dataflow_stalls_kernel.hdltvout.dat");
}

dataflow_stalls_kernel::~dataflow_stalls_kernel() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete dataflow_stalls_kernel_control_s_axi_U;
    delete dataflow_stalls_kernel_gmemo_m_axi_U;
    delete dataflow_stalls_kernel_gmemi_m_axi_U;
    delete load5_U0;
    delete scatter_U0;
    delete compute1_U0;
    delete compute2_U0;
    delete gather_U0;
    delete store_U0;
    delete data_stage0_V_U;
    delete data_count_c_U;
    delete output_ddr0_c_U;
    delete data_stage1_V_U;
    delete data_stage2_V_U;
    delete data_count_c7_U;
    delete data_count_c8_U;
    delete data_stage3_V_U;
    delete data_count_c9_U;
    delete data_stage4_V_U;
    delete data_stage5_V_U;
    delete data_count_c10_U;
    delete start_for_scatter_U0_U;
    delete start_for_store_U0_U;
    delete start_for_compute1_U0_U;
    delete start_for_compute2_U0_U;
    delete start_for_gather_U0_U;
}

void dataflow_stalls_kernel::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void dataflow_stalls_kernel::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_0;
}

void dataflow_stalls_kernel::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv64_0;
}

void dataflow_stalls_kernel::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv1_0;
}

void dataflow_stalls_kernel::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv32_0;
}

void dataflow_stalls_kernel::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv3_0;
}

void dataflow_stalls_kernel::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv2_0;
}

void dataflow_stalls_kernel::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv4_0;
}

void dataflow_stalls_kernel::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv8_0;
}

void dataflow_stalls_kernel::thread_ap_clk_no_reset_() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void dataflow_stalls_kernel::thread_ap_done() {
    ap_done = store_U0_ap_done.read();
}

void dataflow_stalls_kernel::thread_ap_idle() {
    ap_idle = (load5_U0_ap_idle.read() & scatter_U0_ap_idle.read() & compute1_U0_ap_idle.read() & compute2_U0_ap_idle.read() & gather_U0_ap_idle.read() & store_U0_ap_idle.read());
}

void dataflow_stalls_kernel::thread_ap_ready() {
    ap_ready = load5_U0_ap_ready.read();
}

void dataflow_stalls_kernel::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void dataflow_stalls_kernel::thread_ap_sync_done() {
    ap_sync_done = store_U0_ap_done.read();
}

void dataflow_stalls_kernel::thread_ap_sync_ready() {
    ap_sync_ready = load5_U0_ap_ready.read();
}

void dataflow_stalls_kernel::thread_compute1_U0_ap_continue() {
    compute1_U0_ap_continue = ap_const_logic_1;
}

void dataflow_stalls_kernel::thread_compute1_U0_ap_start() {
    compute1_U0_ap_start = start_for_compute1_U0_empty_n.read();
}

void dataflow_stalls_kernel::thread_compute1_U0_start_full_n() {
    compute1_U0_start_full_n = (ap_const_logic_0 | start_for_gather_U0_full_n.read());
}

void dataflow_stalls_kernel::thread_compute2_U0_ap_continue() {
    compute2_U0_ap_continue = ap_const_logic_1;
}

void dataflow_stalls_kernel::thread_compute2_U0_ap_start() {
    compute2_U0_ap_start = start_for_compute2_U0_empty_n.read();
}

void dataflow_stalls_kernel::thread_compute2_U0_start_full_n() {
    compute2_U0_start_full_n = ap_const_logic_0;
}

void dataflow_stalls_kernel::thread_compute2_U0_start_write() {
    compute2_U0_start_write = ap_const_logic_0;
}

void dataflow_stalls_kernel::thread_gather_U0_ap_continue() {
    gather_U0_ap_continue = ap_const_logic_1;
}

void dataflow_stalls_kernel::thread_gather_U0_ap_start() {
    gather_U0_ap_start = start_for_gather_U0_empty_n.read();
}

void dataflow_stalls_kernel::thread_gather_U0_start_full_n() {
    gather_U0_start_full_n = ap_const_logic_0;
}

void dataflow_stalls_kernel::thread_gather_U0_start_write() {
    gather_U0_start_write = ap_const_logic_0;
}

void dataflow_stalls_kernel::thread_load5_U0_ap_continue() {
    load5_U0_ap_continue = ap_const_logic_1;
}

void dataflow_stalls_kernel::thread_load5_U0_ap_start() {
    load5_U0_ap_start = ap_start.read();
}

void dataflow_stalls_kernel::thread_load5_U0_start_full_n() {
    load5_U0_start_full_n = (ap_const_logic_0 | start_for_scatter_U0_full_n.read() | start_for_store_U0_full_n.read());
}

void dataflow_stalls_kernel::thread_scatter_U0_ap_continue() {
    scatter_U0_ap_continue = ap_const_logic_1;
}

void dataflow_stalls_kernel::thread_scatter_U0_ap_start() {
    scatter_U0_ap_start = start_for_scatter_U0_empty_n.read();
}

void dataflow_stalls_kernel::thread_scatter_U0_start_full_n() {
    scatter_U0_start_full_n = (ap_const_logic_0 | start_for_compute1_U0_full_n.read() | start_for_compute2_U0_full_n.read());
}

void dataflow_stalls_kernel::thread_start_for_compute1_U0_din() {
    start_for_compute1_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void dataflow_stalls_kernel::thread_start_for_compute2_U0_din() {
    start_for_compute2_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void dataflow_stalls_kernel::thread_start_for_gather_U0_din() {
    start_for_gather_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void dataflow_stalls_kernel::thread_start_for_scatter_U0_din() {
    start_for_scatter_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void dataflow_stalls_kernel::thread_start_for_store_U0_din() {
    start_for_store_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void dataflow_stalls_kernel::thread_store_U0_ap_continue() {
    store_U0_ap_continue = ap_const_logic_1;
}

void dataflow_stalls_kernel::thread_store_U0_ap_start() {
    store_U0_ap_start = start_for_store_U0_empty_n.read();
}

void dataflow_stalls_kernel::thread_store_U0_start_full_n() {
    store_U0_start_full_n = ap_const_logic_0;
}

void dataflow_stalls_kernel::thread_store_U0_start_write() {
    store_U0_start_write = ap_const_logic_0;
}

void dataflow_stalls_kernel::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"s_axi_control_AWVALID\" :  \"" << s_axi_control_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_control_AWREADY\" :  \"" << s_axi_control_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWADDR\" :  \"" << s_axi_control_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WVALID\" :  \"" << s_axi_control_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_WREADY\" :  \"" << s_axi_control_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WDATA\" :  \"" << s_axi_control_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WSTRB\" :  \"" << s_axi_control_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARVALID\" :  \"" << s_axi_control_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_ARREADY\" :  \"" << s_axi_control_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARADDR\" :  \"" << s_axi_control_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RVALID\" :  \"" << s_axi_control_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_RREADY\" :  \"" << s_axi_control_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RDATA\" :  \"" << s_axi_control_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RRESP\" :  \"" << s_axi_control_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BVALID\" :  \"" << s_axi_control_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_BREADY\" :  \"" << s_axi_control_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BRESP\" :  \"" << s_axi_control_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_AWVALID\" :  \"" << m_axi_gmemo_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemo_AWREADY\" :  \"" << m_axi_gmemo_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_AWADDR\" :  \"" << m_axi_gmemo_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_AWID\" :  \"" << m_axi_gmemo_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_AWLEN\" :  \"" << m_axi_gmemo_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_AWSIZE\" :  \"" << m_axi_gmemo_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_AWBURST\" :  \"" << m_axi_gmemo_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_AWLOCK\" :  \"" << m_axi_gmemo_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_AWCACHE\" :  \"" << m_axi_gmemo_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_AWPROT\" :  \"" << m_axi_gmemo_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_AWQOS\" :  \"" << m_axi_gmemo_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_AWREGION\" :  \"" << m_axi_gmemo_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_AWUSER\" :  \"" << m_axi_gmemo_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_WVALID\" :  \"" << m_axi_gmemo_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemo_WREADY\" :  \"" << m_axi_gmemo_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_WDATA\" :  \"" << m_axi_gmemo_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_WSTRB\" :  \"" << m_axi_gmemo_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_WLAST\" :  \"" << m_axi_gmemo_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_WID\" :  \"" << m_axi_gmemo_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_WUSER\" :  \"" << m_axi_gmemo_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_ARVALID\" :  \"" << m_axi_gmemo_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemo_ARREADY\" :  \"" << m_axi_gmemo_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_ARADDR\" :  \"" << m_axi_gmemo_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_ARID\" :  \"" << m_axi_gmemo_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_ARLEN\" :  \"" << m_axi_gmemo_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_ARSIZE\" :  \"" << m_axi_gmemo_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_ARBURST\" :  \"" << m_axi_gmemo_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_ARLOCK\" :  \"" << m_axi_gmemo_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_ARCACHE\" :  \"" << m_axi_gmemo_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_ARPROT\" :  \"" << m_axi_gmemo_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_ARQOS\" :  \"" << m_axi_gmemo_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_ARREGION\" :  \"" << m_axi_gmemo_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_ARUSER\" :  \"" << m_axi_gmemo_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemo_RVALID\" :  \"" << m_axi_gmemo_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_RREADY\" :  \"" << m_axi_gmemo_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemo_RDATA\" :  \"" << m_axi_gmemo_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemo_RLAST\" :  \"" << m_axi_gmemo_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemo_RID\" :  \"" << m_axi_gmemo_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemo_RUSER\" :  \"" << m_axi_gmemo_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemo_RRESP\" :  \"" << m_axi_gmemo_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemo_BVALID\" :  \"" << m_axi_gmemo_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemo_BREADY\" :  \"" << m_axi_gmemo_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemo_BRESP\" :  \"" << m_axi_gmemo_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemo_BID\" :  \"" << m_axi_gmemo_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemo_BUSER\" :  \"" << m_axi_gmemo_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_AWVALID\" :  \"" << m_axi_gmemi_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemi_AWREADY\" :  \"" << m_axi_gmemi_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_AWADDR\" :  \"" << m_axi_gmemi_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_AWID\" :  \"" << m_axi_gmemi_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_AWLEN\" :  \"" << m_axi_gmemi_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_AWSIZE\" :  \"" << m_axi_gmemi_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_AWBURST\" :  \"" << m_axi_gmemi_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_AWLOCK\" :  \"" << m_axi_gmemi_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_AWCACHE\" :  \"" << m_axi_gmemi_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_AWPROT\" :  \"" << m_axi_gmemi_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_AWQOS\" :  \"" << m_axi_gmemi_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_AWREGION\" :  \"" << m_axi_gmemi_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_AWUSER\" :  \"" << m_axi_gmemi_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_WVALID\" :  \"" << m_axi_gmemi_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemi_WREADY\" :  \"" << m_axi_gmemi_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_WDATA\" :  \"" << m_axi_gmemi_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_WSTRB\" :  \"" << m_axi_gmemi_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_WLAST\" :  \"" << m_axi_gmemi_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_WID\" :  \"" << m_axi_gmemi_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_WUSER\" :  \"" << m_axi_gmemi_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_ARVALID\" :  \"" << m_axi_gmemi_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemi_ARREADY\" :  \"" << m_axi_gmemi_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_ARADDR\" :  \"" << m_axi_gmemi_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_ARID\" :  \"" << m_axi_gmemi_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_ARLEN\" :  \"" << m_axi_gmemi_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_ARSIZE\" :  \"" << m_axi_gmemi_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_ARBURST\" :  \"" << m_axi_gmemi_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_ARLOCK\" :  \"" << m_axi_gmemi_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_ARCACHE\" :  \"" << m_axi_gmemi_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_ARPROT\" :  \"" << m_axi_gmemi_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_ARQOS\" :  \"" << m_axi_gmemi_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_ARREGION\" :  \"" << m_axi_gmemi_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_ARUSER\" :  \"" << m_axi_gmemi_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemi_RVALID\" :  \"" << m_axi_gmemi_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_RREADY\" :  \"" << m_axi_gmemi_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemi_RDATA\" :  \"" << m_axi_gmemi_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemi_RLAST\" :  \"" << m_axi_gmemi_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemi_RID\" :  \"" << m_axi_gmemi_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemi_RUSER\" :  \"" << m_axi_gmemi_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemi_RRESP\" :  \"" << m_axi_gmemi_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemi_BVALID\" :  \"" << m_axi_gmemi_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmemi_BREADY\" :  \"" << m_axi_gmemi_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemi_BRESP\" :  \"" << m_axi_gmemi_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemi_BID\" :  \"" << m_axi_gmemi_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmemi_BUSER\" :  \"" << m_axi_gmemi_BUSER.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

