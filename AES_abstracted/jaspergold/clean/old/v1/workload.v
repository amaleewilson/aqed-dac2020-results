// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module workload (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_address0,
        data_ce0,
        data_we0,
        data_d0,
        data_q0
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_state8 = 9'd128;
parameter    ap_ST_fsm_state9 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] data_address0;
output   data_ce0;
output   data_we0;
output  [7:0] data_d0;
input  [7:0] data_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] data_address0;
reg data_ce0;
reg data_we0;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [1:0] j_fu_330_p2;
reg   [1:0] j_reg_487;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_1_fu_336_p1;
reg   [0:0] tmp_1_reg_492;
wire   [0:0] exitcond3_fu_324_p2;
wire   [1:0] tmp_4_fu_340_p2;
reg   [1:0] tmp_4_reg_496;
wire   [1:0] k_2_fu_352_p2;
reg   [1:0] k_2_reg_504;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond5_fu_346_p2;
wire   [0:0] tmp_7_fu_368_p1;
reg   [0:0] tmp_7_reg_514;
wire   [7:0] buf_1_1_7_fu_372_p3;
wire    ap_CS_fsm_state5;
wire   [7:0] buf_1_1_8_fu_379_p3;
wire   [7:0] buf_1_1_4_fu_386_p3;
wire   [7:0] buf_1_1_6_fu_393_p3;
reg   [7:0] buf_0_0_3_reg_542;
wire    ap_CS_fsm_state7;
wire    grp_aes_tiling_fu_304_ap_idle;
wire    grp_aes_tiling_fu_304_ap_ready;
wire    grp_aes_tiling_fu_304_ap_done;
wire    grp_aes_tiling_fu_314_ap_idle;
wire    grp_aes_tiling_fu_314_ap_ready;
wire    grp_aes_tiling_fu_314_ap_done;
reg    ap_block_state7_on_subcall_done;
reg   [7:0] buf_0_1_3_reg_548;
reg   [7:0] buf_1_0_3_reg_554;
reg   [7:0] buf_1_1_3_reg_560;
wire   [1:0] j_2_fu_422_p2;
reg   [1:0] j_2_reg_569;
wire    ap_CS_fsm_state8;
wire   [0:0] tmp_5_fu_428_p1;
reg   [0:0] tmp_5_reg_574;
wire   [0:0] exitcond6_fu_416_p2;
wire   [1:0] tmp_6_fu_432_p2;
reg   [1:0] tmp_6_reg_579;
wire   [1:0] k_3_fu_444_p2;
wire    ap_CS_fsm_state9;
wire    grp_aes_tiling_fu_304_ap_start;
wire   [7:0] grp_aes_tiling_fu_304_ap_return_0;
wire   [7:0] grp_aes_tiling_fu_304_ap_return_1;
wire    grp_aes_tiling_fu_314_ap_start;
wire   [7:0] grp_aes_tiling_fu_314_ap_return_0;
wire   [7:0] grp_aes_tiling_fu_314_ap_return_1;
reg   [7:0] buf_1_1_reg_59;
reg   [7:0] buf_1_0_reg_71;
reg   [7:0] buf_0_1_reg_83;
reg   [7:0] buf_0_0_reg_95;
wire   [0:0] ap_phi_mux_i_2_phi_fu_112_p4;
reg   [0:0] i_2_reg_107;
reg   [7:0] buf_1_1_1_reg_120;
wire    ap_CS_fsm_state2;
reg   [7:0] buf_1_0_1_reg_131;
reg   [7:0] buf_0_1_1_reg_142;
reg   [7:0] buf_0_0_1_reg_153;
reg   [1:0] j_1_reg_164;
reg   [7:0] buf_1_1_2_reg_175;
wire    ap_CS_fsm_state6;
reg   [7:0] buf_1_0_2_reg_187;
reg   [7:0] buf_0_1_2_reg_199;
reg   [7:0] buf_0_0_2_reg_211;
reg   [1:0] k_reg_223;
reg   [7:0] buf_1_1_2_be_reg_234;
reg   [7:0] buf_1_0_2_be_reg_246;
reg   [7:0] buf_0_1_2_be_reg_258;
reg   [7:0] buf_0_0_2_be_reg_270;
reg   [1:0] j_3_reg_282;
wire   [0:0] exitcond_fu_438_p2;
reg   [1:0] k_1_reg_293;
reg    grp_aes_tiling_fu_304_ap_start_reg;
reg    grp_aes_tiling_fu_314_ap_start_reg;
wire   [63:0] sum_cast_fu_363_p1;
wire   [63:0] sum2_cast_fu_479_p1;
wire   [1:0] tmp_fu_358_p2;
wire   [0:0] tmp_9_fu_450_p1;
wire   [7:0] buf_1_load_phi_fu_454_p3;
wire   [7:0] buf_0_load_phi_fu_460_p3;
wire   [1:0] tmp7_fu_474_p2;
reg   [8:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 grp_aes_tiling_fu_304_ap_start_reg = 1'b0;
#0 grp_aes_tiling_fu_314_ap_start_reg = 1'b0;
end

aes_tiling grp_aes_tiling_fu_304(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes_tiling_fu_304_ap_start),
    .ap_done(grp_aes_tiling_fu_304_ap_done),
    .ap_idle(grp_aes_tiling_fu_304_ap_idle),
    .ap_ready(grp_aes_tiling_fu_304_ap_ready),
    .p_read(buf_0_0_1_reg_153),
    .p_read1(buf_0_1_1_reg_142),
    .ap_return_0(grp_aes_tiling_fu_304_ap_return_0),
    .ap_return_1(grp_aes_tiling_fu_304_ap_return_1)
);

aes_tiling grp_aes_tiling_fu_314(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes_tiling_fu_314_ap_start),
    .ap_done(grp_aes_tiling_fu_314_ap_done),
    .ap_idle(grp_aes_tiling_fu_314_ap_idle),
    .ap_ready(grp_aes_tiling_fu_314_ap_ready),
    .p_read(buf_1_0_1_reg_131),
    .p_read1(buf_1_1_1_reg_120),
    .ap_return_0(grp_aes_tiling_fu_314_ap_return_0),
    .ap_return_1(grp_aes_tiling_fu_314_ap_return_1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_aes_tiling_fu_304_ap_start_reg <= 1'b0;
    end else begin
        if (((exitcond3_fu_324_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_aes_tiling_fu_304_ap_start_reg <= 1'b1;
        end else if ((grp_aes_tiling_fu_304_ap_ready == 1'b1)) begin
            grp_aes_tiling_fu_304_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_aes_tiling_fu_314_ap_start_reg <= 1'b0;
    end else begin
        if (((exitcond3_fu_324_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_aes_tiling_fu_314_ap_start_reg <= 1'b1;
        end else if ((grp_aes_tiling_fu_314_ap_ready == 1'b1)) begin
            grp_aes_tiling_fu_314_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_346_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        buf_0_0_1_reg_153 <= buf_0_0_2_reg_211;
    end else if (((ap_phi_mux_i_2_phi_fu_112_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        buf_0_0_1_reg_153 <= buf_0_0_reg_95;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((tmp_1_reg_492 == 1'd0)) begin
            buf_0_0_2_be_reg_270 <= buf_1_1_8_fu_379_p3;
        end else if ((tmp_1_reg_492 == 1'd1)) begin
            buf_0_0_2_be_reg_270 <= buf_0_0_2_reg_211;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        buf_0_0_2_reg_211 <= buf_0_0_2_be_reg_270;
    end else if (((exitcond3_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        buf_0_0_2_reg_211 <= buf_0_0_1_reg_153;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_346_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        buf_0_1_1_reg_142 <= buf_0_1_2_reg_199;
    end else if (((ap_phi_mux_i_2_phi_fu_112_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        buf_0_1_1_reg_142 <= buf_0_1_reg_83;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((tmp_1_reg_492 == 1'd0)) begin
            buf_0_1_2_be_reg_258 <= buf_1_1_7_fu_372_p3;
        end else if ((tmp_1_reg_492 == 1'd1)) begin
            buf_0_1_2_be_reg_258 <= buf_0_1_2_reg_199;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        buf_0_1_2_reg_199 <= buf_0_1_2_be_reg_258;
    end else if (((exitcond3_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        buf_0_1_2_reg_199 <= buf_0_1_1_reg_142;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_346_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        buf_1_0_1_reg_131 <= buf_1_0_2_reg_187;
    end else if (((ap_phi_mux_i_2_phi_fu_112_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        buf_1_0_1_reg_131 <= buf_1_0_reg_71;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((tmp_1_reg_492 == 1'd0)) begin
            buf_1_0_2_be_reg_246 <= buf_1_0_2_reg_187;
        end else if ((tmp_1_reg_492 == 1'd1)) begin
            buf_1_0_2_be_reg_246 <= buf_1_1_6_fu_393_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        buf_1_0_2_reg_187 <= buf_1_0_2_be_reg_246;
    end else if (((exitcond3_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        buf_1_0_2_reg_187 <= buf_1_0_1_reg_131;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_346_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        buf_1_1_1_reg_120 <= buf_1_1_2_reg_175;
    end else if (((ap_phi_mux_i_2_phi_fu_112_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        buf_1_1_1_reg_120 <= buf_1_1_reg_59;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((tmp_1_reg_492 == 1'd0)) begin
            buf_1_1_2_be_reg_234 <= buf_1_1_2_reg_175;
        end else if ((tmp_1_reg_492 == 1'd1)) begin
            buf_1_1_2_be_reg_234 <= buf_1_1_4_fu_386_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        buf_1_1_2_reg_175 <= buf_1_1_2_be_reg_234;
    end else if (((exitcond3_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        buf_1_1_2_reg_175 <= buf_1_1_1_reg_120;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_416_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_2_reg_107 <= 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_2_reg_107 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_346_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        j_1_reg_164 <= j_reg_487;
    end else if (((ap_phi_mux_i_2_phi_fu_112_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_1_reg_164 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_on_subcall_done))) begin
        j_3_reg_282 <= 2'd0;
    end else if (((exitcond_fu_438_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        j_3_reg_282 <= j_2_reg_569;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_438_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        k_1_reg_293 <= k_3_fu_444_p2;
    end else if (((exitcond6_fu_416_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        k_1_reg_293 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        k_reg_223 <= k_2_reg_504;
    end else if (((exitcond3_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        k_reg_223 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_on_subcall_done))) begin
        buf_0_0_3_reg_542 <= grp_aes_tiling_fu_304_ap_return_0;
        buf_0_1_3_reg_548 <= grp_aes_tiling_fu_304_ap_return_1;
        buf_1_0_3_reg_554 <= grp_aes_tiling_fu_314_ap_return_0;
        buf_1_1_3_reg_560 <= grp_aes_tiling_fu_314_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_416_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        buf_0_0_reg_95 <= buf_0_0_3_reg_542;
        buf_0_1_reg_83 <= buf_0_1_3_reg_548;
        buf_1_0_reg_71 <= buf_1_0_3_reg_554;
        buf_1_1_reg_59 <= buf_1_1_3_reg_560;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        j_2_reg_569 <= j_2_fu_422_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_487 <= j_fu_330_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        k_2_reg_504 <= k_2_fu_352_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_1_reg_492 <= tmp_1_fu_336_p1;
        tmp_4_reg_496[1] <= tmp_4_fu_340_p2[1];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_416_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        tmp_5_reg_574 <= tmp_5_fu_428_p1;
        tmp_6_reg_579[1] <= tmp_6_fu_432_p2[1];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_346_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_7_reg_514 <= tmp_7_fu_368_p1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((ap_phi_mux_i_2_phi_fu_112_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_i_2_phi_fu_112_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        data_address0 = sum2_cast_fu_479_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        data_address0 = sum_cast_fu_363_p1;
    end else begin
        data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9))) begin
        data_ce0 = 1'b1;
    end else begin
        data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_438_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        data_we0 = 1'b1;
    end else begin
        data_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((ap_phi_mux_i_2_phi_fu_112_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond3_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond5_fu_346_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((exitcond6_fu_416_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((exitcond_fu_438_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state7_on_subcall_done = ((grp_aes_tiling_fu_314_ap_done == 1'b0) | (grp_aes_tiling_fu_304_ap_done == 1'b0));
end

assign ap_phi_mux_i_2_phi_fu_112_p4 = i_2_reg_107;

assign buf_0_load_phi_fu_460_p3 = ((tmp_9_fu_450_p1[0:0] === 1'b1) ? buf_0_1_3_reg_548 : buf_0_0_3_reg_542);

assign buf_1_1_4_fu_386_p3 = ((tmp_7_reg_514[0:0] === 1'b1) ? data_q0 : buf_1_1_2_reg_175);

assign buf_1_1_6_fu_393_p3 = ((tmp_7_reg_514[0:0] === 1'b1) ? buf_1_0_2_reg_187 : data_q0);

assign buf_1_1_7_fu_372_p3 = ((tmp_7_reg_514[0:0] === 1'b1) ? data_q0 : buf_0_1_2_reg_199);

assign buf_1_1_8_fu_379_p3 = ((tmp_7_reg_514[0:0] === 1'b1) ? buf_0_0_2_reg_211 : data_q0);

assign buf_1_load_phi_fu_454_p3 = ((tmp_9_fu_450_p1[0:0] === 1'b1) ? buf_1_1_3_reg_560 : buf_1_0_3_reg_554);

assign data_d0 = ((tmp_5_reg_574[0:0] === 1'b1) ? buf_1_load_phi_fu_454_p3 : buf_0_load_phi_fu_460_p3);

assign exitcond3_fu_324_p2 = ((j_1_reg_164 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond5_fu_346_p2 = ((k_reg_223 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond6_fu_416_p2 = ((j_3_reg_282 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond_fu_438_p2 = ((k_1_reg_293 == 2'd2) ? 1'b1 : 1'b0);

assign grp_aes_tiling_fu_304_ap_start = grp_aes_tiling_fu_304_ap_start_reg;

assign grp_aes_tiling_fu_314_ap_start = grp_aes_tiling_fu_314_ap_start_reg;

assign j_2_fu_422_p2 = (j_3_reg_282 + 2'd1);

assign j_fu_330_p2 = (j_1_reg_164 + 2'd1);

assign k_2_fu_352_p2 = (k_reg_223 + 2'd1);

assign k_3_fu_444_p2 = (k_1_reg_293 + 2'd1);

assign sum2_cast_fu_479_p1 = tmp7_fu_474_p2;

assign sum_cast_fu_363_p1 = tmp_fu_358_p2;

assign tmp7_fu_474_p2 = (k_1_reg_293 + tmp_6_reg_579);

assign tmp_1_fu_336_p1 = j_1_reg_164[0:0];

assign tmp_4_fu_340_p2 = j_1_reg_164 << 2'd1;

assign tmp_5_fu_428_p1 = j_3_reg_282[0:0];

assign tmp_6_fu_432_p2 = j_3_reg_282 << 2'd1;

assign tmp_7_fu_368_p1 = k_reg_223[0:0];

assign tmp_9_fu_450_p1 = k_1_reg_293[0:0];

assign tmp_fu_358_p2 = (k_reg_223 + tmp_4_reg_496);

always @ (posedge ap_clk) begin
    tmp_4_reg_496[0] <= 1'b0;
    tmp_6_reg_579[0] <= 1'b0;
end

endmodule //workload
