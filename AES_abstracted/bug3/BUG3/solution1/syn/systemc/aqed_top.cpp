// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "aqed_top.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic aqed_top::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic aqed_top::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> aqed_top::ap_ST_fsm_state1 = "1";
const sc_lv<7> aqed_top::ap_ST_fsm_state2 = "10";
const sc_lv<7> aqed_top::ap_ST_fsm_state3 = "100";
const sc_lv<7> aqed_top::ap_ST_fsm_state4 = "1000";
const sc_lv<7> aqed_top::ap_ST_fsm_state5 = "10000";
const sc_lv<7> aqed_top::ap_ST_fsm_state6 = "100000";
const sc_lv<7> aqed_top::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> aqed_top::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<2> aqed_top::ap_const_lv2_0 = "00";
const sc_lv<32> aqed_top::ap_const_lv32_5 = "101";
const sc_lv<32> aqed_top::ap_const_lv32_2 = "10";
const sc_lv<32> aqed_top::ap_const_lv32_3 = "11";
const sc_lv<32> aqed_top::ap_const_lv32_1 = "1";
const sc_lv<32> aqed_top::ap_const_lv32_4 = "100";
const sc_lv<32> aqed_top::ap_const_lv32_6 = "110";
const sc_lv<2> aqed_top::ap_const_lv2_1 = "1";
const bool aqed_top::ap_const_boolean_1 = true;

aqed_top::aqed_top(sc_module_name name) : sc_module(name), mVcdFile(0) {
    bmc_in_U = new aqed_top_bmc_in("bmc_in_U");
    bmc_in_U->clk(ap_clk);
    bmc_in_U->reset(ap_rst);
    bmc_in_U->address0(bmc_in_address0);
    bmc_in_U->ce0(bmc_in_ce0);
    bmc_in_U->we0(bmc_in_we0);
    bmc_in_U->d0(grp_workload_fu_119_data_d0);
    bmc_in_U->q0(bmc_in_q0);
    bmc_in_U->address1(bmc_in_address1);
    bmc_in_U->ce1(bmc_in_ce1);
    bmc_in_U->q1(bmc_in_q1);
    grp_workload_fu_119 = new workload("grp_workload_fu_119");
    grp_workload_fu_119->ap_clk(ap_clk);
    grp_workload_fu_119->ap_rst(ap_rst);
    grp_workload_fu_119->ap_start(grp_workload_fu_119_ap_start);
    grp_workload_fu_119->ap_done(grp_workload_fu_119_ap_done);
    grp_workload_fu_119->ap_idle(grp_workload_fu_119_ap_idle);
    grp_workload_fu_119->ap_ready(grp_workload_fu_119_ap_ready);
    grp_workload_fu_119->data_address0(grp_workload_fu_119_data_address0);
    grp_workload_fu_119->data_ce0(grp_workload_fu_119_data_ce0);
    grp_workload_fu_119->data_we0(grp_workload_fu_119_data_we0);
    grp_workload_fu_119->data_d0(grp_workload_fu_119_data_d0);
    grp_workload_fu_119->data_q0(bmc_in_q0);
    grp_workload_fu_119->data_offset(ret_V_reg_284);
    grp_aqed_in_fu_130 = new aqed_in("grp_aqed_in_fu_130");
    grp_aqed_in_fu_130->ap_clk(ap_clk);
    grp_aqed_in_fu_130->ap_rst(ap_rst);
    grp_aqed_in_fu_130->ap_start(grp_aqed_in_fu_130_ap_start);
    grp_aqed_in_fu_130->ap_done(grp_aqed_in_fu_130_ap_done);
    grp_aqed_in_fu_130->ap_idle(grp_aqed_in_fu_130_ap_idle);
    grp_aqed_in_fu_130->ap_ready(grp_aqed_in_fu_130_ap_ready);
    grp_aqed_in_fu_130->bmc_in_address0(grp_aqed_in_fu_130_bmc_in_address0);
    grp_aqed_in_fu_130->bmc_in_ce0(grp_aqed_in_fu_130_bmc_in_ce0);
    grp_aqed_in_fu_130->bmc_in_q0(bmc_in_q0);
    grp_aqed_in_fu_130->bmc_in_address1(grp_aqed_in_fu_130_bmc_in_address1);
    grp_aqed_in_fu_130->bmc_in_ce1(grp_aqed_in_fu_130_bmc_in_ce1);
    grp_aqed_in_fu_130->bmc_in_q1(bmc_in_q1);
    grp_aqed_in_fu_130->bmc_in_offset(ret_V_reg_284);
    grp_aqed_in_fu_130->orig_V(orig_V);
    grp_aqed_in_fu_130->dup_V(dup_V);
    grp_aqed_in_fu_130->orig_idx(orig_idx);
    grp_aqed_in_fu_130->dup_idx(dup_idx);
    grp_aqed_in_fu_130->state_orig_issued_V_i(state_orig_issued_V);
    grp_aqed_in_fu_130->state_orig_issued_V_o(grp_aqed_in_fu_130_state_orig_issued_V_o);
    grp_aqed_in_fu_130->state_orig_issued_V_o_ap_vld(grp_aqed_in_fu_130_state_orig_issued_V_o_ap_vld);
    grp_aqed_in_fu_130->state_dup_issued_V_i(state_dup_issued_V);
    grp_aqed_in_fu_130->state_dup_issued_V_o(grp_aqed_in_fu_130_state_dup_issued_V_o);
    grp_aqed_in_fu_130->state_dup_issued_V_o_ap_vld(grp_aqed_in_fu_130_state_dup_issued_V_o_ap_vld);
    grp_aqed_in_fu_130->state_orig_in_V(grp_aqed_in_fu_130_state_orig_in_V);
    grp_aqed_in_fu_130->state_orig_in_V_ap_vld(grp_aqed_in_fu_130_state_orig_in_V_ap_vld);
    grp_aqed_in_fu_130->state_orig_idx_V(grp_aqed_in_fu_130_state_orig_idx_V);
    grp_aqed_in_fu_130->state_orig_idx_V_ap_vld(grp_aqed_in_fu_130_state_orig_idx_V_ap_vld);
    grp_aqed_in_fu_130->state_dup_in_V(grp_aqed_in_fu_130_state_dup_in_V);
    grp_aqed_in_fu_130->state_dup_in_V_ap_vld(grp_aqed_in_fu_130_state_dup_in_V_ap_vld);
    grp_aqed_in_fu_130->state_dup_idx_V(grp_aqed_in_fu_130_state_dup_idx_V);
    grp_aqed_in_fu_130->state_dup_idx_V_ap_vld(grp_aqed_in_fu_130_state_dup_idx_V_ap_vld);
    grp_aqed_in_fu_130->state_dup_val_V_0(grp_aqed_in_fu_130_state_dup_val_V_0);
    grp_aqed_in_fu_130->state_dup_val_V_0_ap_vld(grp_aqed_in_fu_130_state_dup_val_V_0_ap_vld);
    grp_aqed_in_fu_130->state_dup_val_V_1(grp_aqed_in_fu_130_state_dup_val_V_1);
    grp_aqed_in_fu_130->state_dup_val_V_1_ap_vld(grp_aqed_in_fu_130_state_dup_val_V_1_ap_vld);
    grp_aqed_out_fu_169 = new aqed_out("grp_aqed_out_fu_169");
    grp_aqed_out_fu_169->ap_clk(ap_clk);
    grp_aqed_out_fu_169->ap_rst(ap_rst);
    grp_aqed_out_fu_169->ap_start(grp_aqed_out_fu_169_ap_start);
    grp_aqed_out_fu_169->ap_done(grp_aqed_out_fu_169_ap_done);
    grp_aqed_out_fu_169->ap_idle(grp_aqed_out_fu_169_ap_idle);
    grp_aqed_out_fu_169->ap_ready(grp_aqed_out_fu_169_ap_ready);
    grp_aqed_out_fu_169->acc_out_offset(ret_V_reg_284);
    grp_aqed_out_fu_169->state_orig_issued_V(state_orig_issued_V);
    grp_aqed_out_fu_169->state_orig_in_V(state_orig_in_V);
    grp_aqed_out_fu_169->state_orig_done_V(grp_aqed_out_fu_169_state_orig_done_V);
    grp_aqed_out_fu_169->state_orig_done_V_ap_vld(grp_aqed_out_fu_169_state_orig_done_V_ap_vld);
    grp_aqed_out_fu_169->state_orig_idx_V(state_orig_idx_V);
    grp_aqed_out_fu_169->bmc_in_address0(grp_aqed_out_fu_169_bmc_in_address0);
    grp_aqed_out_fu_169->bmc_in_ce0(grp_aqed_out_fu_169_bmc_in_ce0);
    grp_aqed_out_fu_169->bmc_in_q0(bmc_in_q0);
    grp_aqed_out_fu_169->bmc_in_address1(grp_aqed_out_fu_169_bmc_in_address1);
    grp_aqed_out_fu_169->bmc_in_ce1(grp_aqed_out_fu_169_bmc_in_ce1);
    grp_aqed_out_fu_169->bmc_in_q1(bmc_in_q1);
    grp_aqed_out_fu_169->state_dup_in_V(state_dup_in_V);
    grp_aqed_out_fu_169->state_dup_issued_V(state_dup_issued_V);
    grp_aqed_out_fu_169->state_dup_idx_V(state_dup_idx_V);
    grp_aqed_out_fu_169->ap_return_0(grp_aqed_out_fu_169_ap_return_0);
    grp_aqed_out_fu_169->ap_return_1(grp_aqed_out_fu_169_ap_return_1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_agg_result);
    sensitive << ( state_orig_issued_V );
    sensitive << ( state_dup_val_V_0 );
    sensitive << ( state_dup_val_V_1 );
    sensitive << ( state_orig_done_V );
    sensitive << ( o2_qed_done_V_reg_291 );
    sensitive << ( o2_qed_check_V_reg_296 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_bmc_in_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_workload_fu_119_data_address0 );
    sensitive << ( grp_aqed_in_fu_130_bmc_in_address0 );
    sensitive << ( grp_aqed_out_fu_169_bmc_in_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_bmc_in_address1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_aqed_in_fu_130_bmc_in_address1 );
    sensitive << ( grp_aqed_out_fu_169_bmc_in_address1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_bmc_in_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_workload_fu_119_data_ce0 );
    sensitive << ( grp_aqed_in_fu_130_bmc_in_ce0 );
    sensitive << ( grp_aqed_out_fu_169_bmc_in_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_bmc_in_ce1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_aqed_in_fu_130_bmc_in_ce1 );
    sensitive << ( grp_aqed_out_fu_169_bmc_in_ce1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_bmc_in_we0);
    sensitive << ( grp_workload_fu_119_data_we0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_aqed_in_fu_130_ap_start);
    sensitive << ( grp_aqed_in_fu_130_ap_start_reg );

    SC_METHOD(thread_grp_aqed_out_fu_169_ap_start);
    sensitive << ( grp_aqed_out_fu_169_ap_start_reg );

    SC_METHOD(thread_grp_workload_fu_119_ap_start);
    sensitive << ( grp_workload_fu_119_ap_start_reg );

    SC_METHOD(thread_ret_V_fu_204_p3);
    sensitive << ( idx_ct_V );

    SC_METHOD(thread_tmp_s_fu_213_p2);
    sensitive << ( idx_ct_V );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_aqed_out_fu_169_ap_done );
    sensitive << ( grp_workload_fu_119_ap_done );
    sensitive << ( grp_aqed_in_fu_130_ap_done );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0000001";
    idx_ct_V = "00";
    state_orig_issued_V = "0";
    state_dup_issued_V = "0";
    state_orig_in_V = "1111111111111111";
    state_orig_idx_V = "00";
    state_dup_in_V = "1111111111111111";
    state_dup_idx_V = "00";
    state_dup_val_V_0 = "00000000";
    state_dup_val_V_1 = "00000000";
    state_orig_done_V = "0";
    grp_workload_fu_119_ap_start_reg = SC_LOGIC_0;
    grp_aqed_in_fu_130_ap_start_reg = SC_LOGIC_0;
    grp_aqed_out_fu_169_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "aqed_top_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, agg_result, "(port)agg_result");
    sc_trace(mVcdFile, orig_V, "(port)orig_V");
    sc_trace(mVcdFile, dup_V, "(port)dup_V");
    sc_trace(mVcdFile, orig_idx, "(port)orig_idx");
    sc_trace(mVcdFile, dup_idx, "(port)dup_idx");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, idx_ct_V, "idx_ct_V");
    sc_trace(mVcdFile, state_orig_issued_V, "state_orig_issued_V");
    sc_trace(mVcdFile, state_dup_issued_V, "state_dup_issued_V");
    sc_trace(mVcdFile, state_orig_in_V, "state_orig_in_V");
    sc_trace(mVcdFile, state_orig_idx_V, "state_orig_idx_V");
    sc_trace(mVcdFile, state_dup_in_V, "state_dup_in_V");
    sc_trace(mVcdFile, state_dup_idx_V, "state_dup_idx_V");
    sc_trace(mVcdFile, state_dup_val_V_0, "state_dup_val_V_0");
    sc_trace(mVcdFile, state_dup_val_V_1, "state_dup_val_V_1");
    sc_trace(mVcdFile, bmc_in_address0, "bmc_in_address0");
    sc_trace(mVcdFile, bmc_in_ce0, "bmc_in_ce0");
    sc_trace(mVcdFile, bmc_in_we0, "bmc_in_we0");
    sc_trace(mVcdFile, bmc_in_q0, "bmc_in_q0");
    sc_trace(mVcdFile, bmc_in_address1, "bmc_in_address1");
    sc_trace(mVcdFile, bmc_in_ce1, "bmc_in_ce1");
    sc_trace(mVcdFile, bmc_in_q1, "bmc_in_q1");
    sc_trace(mVcdFile, state_orig_done_V, "state_orig_done_V");
    sc_trace(mVcdFile, ret_V_fu_204_p3, "ret_V_fu_204_p3");
    sc_trace(mVcdFile, ret_V_reg_284, "ret_V_reg_284");
    sc_trace(mVcdFile, o2_qed_done_V_reg_291, "o2_qed_done_V_reg_291");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_aqed_out_fu_169_ap_ready, "grp_aqed_out_fu_169_ap_ready");
    sc_trace(mVcdFile, grp_aqed_out_fu_169_ap_done, "grp_aqed_out_fu_169_ap_done");
    sc_trace(mVcdFile, o2_qed_check_V_reg_296, "o2_qed_check_V_reg_296");
    sc_trace(mVcdFile, grp_workload_fu_119_ap_start, "grp_workload_fu_119_ap_start");
    sc_trace(mVcdFile, grp_workload_fu_119_ap_done, "grp_workload_fu_119_ap_done");
    sc_trace(mVcdFile, grp_workload_fu_119_ap_idle, "grp_workload_fu_119_ap_idle");
    sc_trace(mVcdFile, grp_workload_fu_119_ap_ready, "grp_workload_fu_119_ap_ready");
    sc_trace(mVcdFile, grp_workload_fu_119_data_address0, "grp_workload_fu_119_data_address0");
    sc_trace(mVcdFile, grp_workload_fu_119_data_ce0, "grp_workload_fu_119_data_ce0");
    sc_trace(mVcdFile, grp_workload_fu_119_data_we0, "grp_workload_fu_119_data_we0");
    sc_trace(mVcdFile, grp_workload_fu_119_data_d0, "grp_workload_fu_119_data_d0");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_ap_start, "grp_aqed_in_fu_130_ap_start");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_ap_done, "grp_aqed_in_fu_130_ap_done");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_ap_idle, "grp_aqed_in_fu_130_ap_idle");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_ap_ready, "grp_aqed_in_fu_130_ap_ready");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_bmc_in_address0, "grp_aqed_in_fu_130_bmc_in_address0");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_bmc_in_ce0, "grp_aqed_in_fu_130_bmc_in_ce0");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_bmc_in_address1, "grp_aqed_in_fu_130_bmc_in_address1");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_bmc_in_ce1, "grp_aqed_in_fu_130_bmc_in_ce1");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_state_orig_issued_V_o, "grp_aqed_in_fu_130_state_orig_issued_V_o");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_state_orig_issued_V_o_ap_vld, "grp_aqed_in_fu_130_state_orig_issued_V_o_ap_vld");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_state_dup_issued_V_o, "grp_aqed_in_fu_130_state_dup_issued_V_o");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_state_dup_issued_V_o_ap_vld, "grp_aqed_in_fu_130_state_dup_issued_V_o_ap_vld");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_state_orig_in_V, "grp_aqed_in_fu_130_state_orig_in_V");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_state_orig_in_V_ap_vld, "grp_aqed_in_fu_130_state_orig_in_V_ap_vld");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_state_orig_idx_V, "grp_aqed_in_fu_130_state_orig_idx_V");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_state_orig_idx_V_ap_vld, "grp_aqed_in_fu_130_state_orig_idx_V_ap_vld");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_state_dup_in_V, "grp_aqed_in_fu_130_state_dup_in_V");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_state_dup_in_V_ap_vld, "grp_aqed_in_fu_130_state_dup_in_V_ap_vld");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_state_dup_idx_V, "grp_aqed_in_fu_130_state_dup_idx_V");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_state_dup_idx_V_ap_vld, "grp_aqed_in_fu_130_state_dup_idx_V_ap_vld");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_state_dup_val_V_0, "grp_aqed_in_fu_130_state_dup_val_V_0");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_state_dup_val_V_0_ap_vld, "grp_aqed_in_fu_130_state_dup_val_V_0_ap_vld");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_state_dup_val_V_1, "grp_aqed_in_fu_130_state_dup_val_V_1");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_state_dup_val_V_1_ap_vld, "grp_aqed_in_fu_130_state_dup_val_V_1_ap_vld");
    sc_trace(mVcdFile, grp_aqed_out_fu_169_ap_start, "grp_aqed_out_fu_169_ap_start");
    sc_trace(mVcdFile, grp_aqed_out_fu_169_ap_idle, "grp_aqed_out_fu_169_ap_idle");
    sc_trace(mVcdFile, grp_aqed_out_fu_169_state_orig_done_V, "grp_aqed_out_fu_169_state_orig_done_V");
    sc_trace(mVcdFile, grp_aqed_out_fu_169_state_orig_done_V_ap_vld, "grp_aqed_out_fu_169_state_orig_done_V_ap_vld");
    sc_trace(mVcdFile, grp_aqed_out_fu_169_bmc_in_address0, "grp_aqed_out_fu_169_bmc_in_address0");
    sc_trace(mVcdFile, grp_aqed_out_fu_169_bmc_in_ce0, "grp_aqed_out_fu_169_bmc_in_ce0");
    sc_trace(mVcdFile, grp_aqed_out_fu_169_bmc_in_address1, "grp_aqed_out_fu_169_bmc_in_address1");
    sc_trace(mVcdFile, grp_aqed_out_fu_169_bmc_in_ce1, "grp_aqed_out_fu_169_bmc_in_ce1");
    sc_trace(mVcdFile, grp_aqed_out_fu_169_ap_return_0, "grp_aqed_out_fu_169_ap_return_0");
    sc_trace(mVcdFile, grp_aqed_out_fu_169_ap_return_1, "grp_aqed_out_fu_169_ap_return_1");
    sc_trace(mVcdFile, grp_workload_fu_119_ap_start_reg, "grp_workload_fu_119_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_aqed_in_fu_130_ap_start_reg, "grp_aqed_in_fu_130_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_aqed_out_fu_169_ap_start_reg, "grp_aqed_out_fu_169_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_s_fu_213_p2, "tmp_s_fu_213_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("aqed_top.hdltvin.dat");
    mHdltvoutHandle.open("aqed_top.hdltvout.dat");
}

aqed_top::~aqed_top() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete bmc_in_U;
    delete grp_workload_fu_119;
    delete grp_aqed_in_fu_130;
    delete grp_aqed_out_fu_169;
}

void aqed_top::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_aqed_in_fu_130_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_aqed_in_fu_130_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_aqed_in_fu_130_ap_ready.read())) {
            grp_aqed_in_fu_130_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_aqed_out_fu_169_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            grp_aqed_out_fu_169_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_aqed_out_fu_169_ap_ready.read())) {
            grp_aqed_out_fu_169_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_workload_fu_119_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            grp_workload_fu_119_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_workload_fu_119_ap_ready.read())) {
            grp_workload_fu_119_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        idx_ct_V = tmp_s_fu_213_p2.read();
        ret_V_reg_284 = ret_V_fu_204_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(grp_aqed_out_fu_169_ap_done.read(), ap_const_logic_1))) {
        o2_qed_check_V_reg_296 = grp_aqed_out_fu_169_ap_return_1.read();
        o2_qed_done_V_reg_291 = grp_aqed_out_fu_169_ap_return_0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, grp_aqed_in_fu_130_state_dup_idx_V_ap_vld.read()))) {
        state_dup_idx_V = grp_aqed_in_fu_130_state_dup_idx_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, grp_aqed_in_fu_130_state_dup_in_V_ap_vld.read()))) {
        state_dup_in_V = grp_aqed_in_fu_130_state_dup_in_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, grp_aqed_in_fu_130_state_dup_issued_V_o_ap_vld.read()))) {
        state_dup_issued_V = grp_aqed_in_fu_130_state_dup_issued_V_o.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, grp_aqed_in_fu_130_state_dup_val_V_0_ap_vld.read()))) {
        state_dup_val_V_0 = grp_aqed_in_fu_130_state_dup_val_V_0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, grp_aqed_in_fu_130_state_dup_val_V_1_ap_vld.read()))) {
        state_dup_val_V_1 = grp_aqed_in_fu_130_state_dup_val_V_1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_logic_1, grp_aqed_out_fu_169_state_orig_done_V_ap_vld.read()))) {
        state_orig_done_V = grp_aqed_out_fu_169_state_orig_done_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, grp_aqed_in_fu_130_state_orig_idx_V_ap_vld.read()))) {
        state_orig_idx_V = grp_aqed_in_fu_130_state_orig_idx_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, grp_aqed_in_fu_130_state_orig_in_V_ap_vld.read()))) {
        state_orig_in_V = grp_aqed_in_fu_130_state_orig_in_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, grp_aqed_in_fu_130_state_orig_issued_V_o_ap_vld.read()))) {
        state_orig_issued_V = grp_aqed_in_fu_130_state_orig_issued_V_o.read();
    }
}

void aqed_top::thread_agg_result() {
    agg_result = esl_concat<19,1>(esl_concat<18,1>(esl_concat<17,1>(esl_concat<16,1>(esl_concat<8,8>(state_dup_val_V_1.read(), state_dup_val_V_0.read()), state_orig_done_V.read()), state_orig_issued_V.read()), o2_qed_check_V_reg_296.read()), o2_qed_done_V_reg_291.read());
}

void aqed_top::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void aqed_top::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void aqed_top::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void aqed_top::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void aqed_top::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void aqed_top::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void aqed_top::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void aqed_top::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void aqed_top::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void aqed_top::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void aqed_top::thread_bmc_in_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        bmc_in_address0 = grp_aqed_out_fu_169_bmc_in_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        bmc_in_address0 = grp_aqed_in_fu_130_bmc_in_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        bmc_in_address0 = grp_workload_fu_119_data_address0.read();
    } else {
        bmc_in_address0 = "XXXX";
    }
}

void aqed_top::thread_bmc_in_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        bmc_in_address1 = grp_aqed_out_fu_169_bmc_in_address1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        bmc_in_address1 = grp_aqed_in_fu_130_bmc_in_address1.read();
    } else {
        bmc_in_address1 = "XXXX";
    }
}

void aqed_top::thread_bmc_in_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        bmc_in_ce0 = grp_aqed_out_fu_169_bmc_in_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        bmc_in_ce0 = grp_aqed_in_fu_130_bmc_in_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        bmc_in_ce0 = grp_workload_fu_119_data_ce0.read();
    } else {
        bmc_in_ce0 = ap_const_logic_0;
    }
}

void aqed_top::thread_bmc_in_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        bmc_in_ce1 = grp_aqed_out_fu_169_bmc_in_ce1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        bmc_in_ce1 = grp_aqed_in_fu_130_bmc_in_ce1.read();
    } else {
        bmc_in_ce1 = ap_const_logic_0;
    }
}

void aqed_top::thread_bmc_in_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        bmc_in_we0 = grp_workload_fu_119_data_we0.read();
    } else {
        bmc_in_we0 = ap_const_logic_0;
    }
}

void aqed_top::thread_grp_aqed_in_fu_130_ap_start() {
    grp_aqed_in_fu_130_ap_start = grp_aqed_in_fu_130_ap_start_reg.read();
}

void aqed_top::thread_grp_aqed_out_fu_169_ap_start() {
    grp_aqed_out_fu_169_ap_start = grp_aqed_out_fu_169_ap_start_reg.read();
}

void aqed_top::thread_grp_workload_fu_119_ap_start() {
    grp_workload_fu_119_ap_start = grp_workload_fu_119_ap_start_reg.read();
}

void aqed_top::thread_ret_V_fu_204_p3() {
    ret_V_fu_204_p3 = esl_concat<2,2>(idx_ct_V.read(), ap_const_lv2_0);
}

void aqed_top::thread_tmp_s_fu_213_p2() {
    tmp_s_fu_213_p2 = (!idx_ct_V.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(idx_ct_V.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void aqed_top::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_aqed_in_fu_130_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_workload_fu_119_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(grp_aqed_out_fu_169_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

void aqed_top::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result\" :  \"" << agg_result.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"orig_V\" :  \"" << orig_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"dup_V\" :  \"" << dup_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"orig_idx\" :  \"" << orig_idx.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"dup_idx\" :  \"" << dup_idx.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

