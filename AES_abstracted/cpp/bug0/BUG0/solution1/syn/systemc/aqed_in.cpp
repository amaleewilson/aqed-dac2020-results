// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "aqed_in.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic aqed_in::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic aqed_in::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<18> aqed_in::ap_ST_fsm_state1 = "1";
const sc_lv<18> aqed_in::ap_ST_fsm_state2 = "10";
const sc_lv<18> aqed_in::ap_ST_fsm_state3 = "100";
const sc_lv<18> aqed_in::ap_ST_fsm_state4 = "1000";
const sc_lv<18> aqed_in::ap_ST_fsm_state5 = "10000";
const sc_lv<18> aqed_in::ap_ST_fsm_state6 = "100000";
const sc_lv<18> aqed_in::ap_ST_fsm_state7 = "1000000";
const sc_lv<18> aqed_in::ap_ST_fsm_state8 = "10000000";
const sc_lv<18> aqed_in::ap_ST_fsm_state9 = "100000000";
const sc_lv<18> aqed_in::ap_ST_fsm_state10 = "1000000000";
const sc_lv<18> aqed_in::ap_ST_fsm_state11 = "10000000000";
const sc_lv<18> aqed_in::ap_ST_fsm_state12 = "100000000000";
const sc_lv<18> aqed_in::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<18> aqed_in::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<18> aqed_in::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<18> aqed_in::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<18> aqed_in::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<18> aqed_in::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<32> aqed_in::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> aqed_in::ap_const_lv32_1 = "1";
const sc_lv<32> aqed_in::ap_const_lv32_2 = "10";
const sc_lv<1> aqed_in::ap_const_lv1_1 = "1";
const sc_lv<32> aqed_in::ap_const_lv32_11 = "10001";
const sc_lv<5> aqed_in::ap_const_lv5_1F = "11111";
const sc_lv<1> aqed_in::ap_const_lv1_0 = "0";
const sc_lv<5> aqed_in::ap_const_lv5_0 = "00000";
const sc_lv<5> aqed_in::ap_const_lv5_1 = "1";
const sc_lv<32> aqed_in::ap_const_lv32_3 = "11";
const sc_lv<5> aqed_in::ap_const_lv5_2 = "10";
const sc_lv<5> aqed_in::ap_const_lv5_3 = "11";
const sc_lv<32> aqed_in::ap_const_lv32_4 = "100";
const sc_lv<5> aqed_in::ap_const_lv5_4 = "100";
const sc_lv<5> aqed_in::ap_const_lv5_5 = "101";
const sc_lv<32> aqed_in::ap_const_lv32_5 = "101";
const sc_lv<5> aqed_in::ap_const_lv5_6 = "110";
const sc_lv<5> aqed_in::ap_const_lv5_7 = "111";
const sc_lv<32> aqed_in::ap_const_lv32_6 = "110";
const sc_lv<5> aqed_in::ap_const_lv5_8 = "1000";
const sc_lv<5> aqed_in::ap_const_lv5_9 = "1001";
const sc_lv<32> aqed_in::ap_const_lv32_7 = "111";
const sc_lv<5> aqed_in::ap_const_lv5_A = "1010";
const sc_lv<5> aqed_in::ap_const_lv5_B = "1011";
const sc_lv<32> aqed_in::ap_const_lv32_8 = "1000";
const sc_lv<5> aqed_in::ap_const_lv5_C = "1100";
const sc_lv<5> aqed_in::ap_const_lv5_D = "1101";
const sc_lv<32> aqed_in::ap_const_lv32_9 = "1001";
const sc_lv<5> aqed_in::ap_const_lv5_E = "1110";
const sc_lv<5> aqed_in::ap_const_lv5_F = "1111";
const sc_lv<32> aqed_in::ap_const_lv32_A = "1010";
const sc_lv<5> aqed_in::ap_const_lv5_10 = "10000";
const sc_lv<5> aqed_in::ap_const_lv5_11 = "10001";
const sc_lv<32> aqed_in::ap_const_lv32_B = "1011";
const sc_lv<5> aqed_in::ap_const_lv5_12 = "10010";
const sc_lv<5> aqed_in::ap_const_lv5_13 = "10011";
const sc_lv<32> aqed_in::ap_const_lv32_C = "1100";
const sc_lv<5> aqed_in::ap_const_lv5_14 = "10100";
const sc_lv<5> aqed_in::ap_const_lv5_15 = "10101";
const sc_lv<32> aqed_in::ap_const_lv32_D = "1101";
const sc_lv<5> aqed_in::ap_const_lv5_16 = "10110";
const sc_lv<5> aqed_in::ap_const_lv5_17 = "10111";
const sc_lv<32> aqed_in::ap_const_lv32_E = "1110";
const sc_lv<5> aqed_in::ap_const_lv5_18 = "11000";
const sc_lv<5> aqed_in::ap_const_lv5_19 = "11001";
const sc_lv<32> aqed_in::ap_const_lv32_F = "1111";
const sc_lv<5> aqed_in::ap_const_lv5_1A = "11010";
const sc_lv<5> aqed_in::ap_const_lv5_1B = "11011";
const sc_lv<32> aqed_in::ap_const_lv32_10 = "10000";
const sc_lv<5> aqed_in::ap_const_lv5_1C = "11100";
const sc_lv<5> aqed_in::ap_const_lv5_1D = "11101";
const sc_lv<5> aqed_in::ap_const_lv5_1E = "11110";
const sc_lv<7> aqed_in::ap_const_lv7_0 = "0000000";
const sc_lv<6> aqed_in::ap_const_lv6_1 = "1";
const sc_lv<16> aqed_in::ap_const_lv16_1 = "1";
const bool aqed_in::ap_const_boolean_1 = true;

aqed_in::aqed_in(sc_module_name name) : sc_module(name), mVcdFile(0) {
    state_key_V_U = new aqed_in_state_key_V("state_key_V_U");
    state_key_V_U->clk(ap_clk);
    state_key_V_U->reset(ap_rst);
    state_key_V_U->address0(state_key_V_address0);
    state_key_V_U->ce0(state_key_V_ce0);
    state_key_V_U->we0(state_key_V_we0);
    state_key_V_U->d0(ap_var_for_const0);
    state_key_V_U->q0(state_key_V_q0);
    state_key_V_U->address1(state_key_V_address1);
    state_key_V_U->ce1(state_key_V_ce1);
    state_key_V_U->we1(state_key_V_we1);
    state_key_V_U->d1(ap_var_for_const0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_bmc_in_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( sum_cast_fu_278_p1 );
    sensitive << ( sum4_cast_fu_333_p1 );

    SC_METHOD(thread_bmc_in_address1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( sum2_cast_fu_295_p1 );
    sensitive << ( sum8_cast_fu_349_p1 );

    SC_METHOD(thread_bmc_in_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_bmc_in_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_bmc_in_offset_cast1_fu_268_p1);
    sensitive << ( bmc_in_offset );

    SC_METHOD(thread_brmerge_fu_426_p2);
    sensitive << ( or_cond2_fu_408_p2 );
    sensitive << ( p_082_not_fu_420_p2 );

    SC_METHOD(thread_icmp1_fu_250_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_10_fu_240_p4 );

    SC_METHOD(thread_icmp_fu_310_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_300_p4 );

    SC_METHOD(thread_issue_dup_V_fu_558_p2);
    sensitive << ( sel_tmp9_fu_532_p3 );
    sensitive << ( not_sel_tmp1_fu_552_p2 );

    SC_METHOD(thread_issue_orig_V_fu_369_p2);
    sensitive << ( or_cond_fu_354_p2 );
    sensitive << ( tmp_s_fu_363_p2 );

    SC_METHOD(thread_not_sel_tmp1_fu_552_p2);
    sensitive << ( sel_tmp5_fu_454_p2 );
    sensitive << ( sel_tmp27_not_fu_546_p2 );

    SC_METHOD(thread_not_sel_tmp_fu_484_p2);
    sensitive << ( sel_tmp2_fu_478_p2 );

    SC_METHOD(thread_or_cond1_fu_375_p2);
    sensitive << ( dup_V );
    sensitive << ( icmp1_reg_647 );

    SC_METHOD(thread_or_cond2_fu_408_p2);
    sensitive << ( tmp_9_fu_397_p2 );
    sensitive << ( tmp_1_fu_402_p2 );

    SC_METHOD(thread_or_cond_fu_354_p2);
    sensitive << ( orig_V );
    sensitive << ( icmp_reg_673 );

    SC_METHOD(thread_or_cond_not_fu_414_p2);
    sensitive << ( or_cond_fu_354_p2 );

    SC_METHOD(thread_p_082_not_fu_420_p2);
    sensitive << ( state_orig_issued_V_i );
    sensitive << ( or_cond_not_fu_414_p2 );

    SC_METHOD(thread_p_sum4_fu_338_p2);
    sensitive << ( tmp_2_fu_320_p3 );

    SC_METHOD(thread_p_sum_fu_283_p2);
    sensitive << ( tmp_7_fu_260_p3 );

    SC_METHOD(thread_sel_tmp10_fu_540_p2);
    sensitive << ( p_082_not_fu_420_p2 );
    sensitive << ( sel_tmp1_fu_448_p2 );

    SC_METHOD(thread_sel_tmp1_fu_448_p2);
    sensitive << ( or_cond1_fu_375_p2 );
    sensitive << ( sel_tmp_fu_442_p2 );

    SC_METHOD(thread_sel_tmp27_not_fu_546_p2);
    sensitive << ( sel_tmp10_fu_540_p2 );

    SC_METHOD(thread_sel_tmp2_fu_478_p2);
    sensitive << ( state_dup_issued_V_i );
    sensitive << ( or_cond1_fu_375_p2 );

    SC_METHOD(thread_sel_tmp3_fu_508_p2);
    sensitive << ( tmp4_fu_502_p2 );
    sensitive << ( tmp2_fu_490_p2 );

    SC_METHOD(thread_sel_tmp4_fu_526_p2);
    sensitive << ( tmp6_fu_520_p2 );
    sensitive << ( tmp5_fu_514_p2 );

    SC_METHOD(thread_sel_tmp5_fu_454_p2);
    sensitive << ( state_orig_issued_V_i );
    sensitive << ( tmp_8_fu_388_p2 );

    SC_METHOD(thread_sel_tmp6_fu_460_p2);
    sensitive << ( brmerge_fu_426_p2 );

    SC_METHOD(thread_sel_tmp7_fu_466_p2);
    sensitive << ( sel_tmp5_fu_454_p2 );
    sensitive << ( sel_tmp6_fu_460_p2 );

    SC_METHOD(thread_sel_tmp8_fu_472_p2);
    sensitive << ( issue_orig_V_fu_369_p2 );
    sensitive << ( sel_tmp7_fu_466_p2 );

    SC_METHOD(thread_sel_tmp9_fu_532_p3);
    sensitive << ( or_cond2_fu_408_p2 );
    sensitive << ( sel_tmp4_fu_526_p2 );
    sensitive << ( sel_tmp3_fu_508_p2 );

    SC_METHOD(thread_sel_tmp_fu_442_p2);
    sensitive << ( state_dup_issued_V_i );

    SC_METHOD(thread_state_dup_idx_V);
    sensitive << ( dup_idx );
    sensitive << ( issue_dup_V_reg_706 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_state_dup_idx_V_ap_vld);
    sensitive << ( issue_dup_V_reg_706 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_state_dup_in_V);
    sensitive << ( issue_dup_V_reg_706 );
    sensitive << ( state_in_count_V_loa_reg_710 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_state_dup_in_V_ap_vld);
    sensitive << ( issue_dup_V_reg_706 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_state_dup_issued_V_o);
    sensitive << ( state_dup_issued_V_i );
    sensitive << ( issue_dup_V_reg_706 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_state_dup_issued_V_o_ap_vld);
    sensitive << ( issue_dup_V_reg_706 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_state_dup_val_V_0);
    sensitive << ( bmc_in_load_reg_678 );
    sensitive << ( issue_dup_V_reg_706 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_state_dup_val_V_0_ap_vld);
    sensitive << ( issue_dup_V_reg_706 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_state_dup_val_V_1);
    sensitive << ( bmc_in_load_4_reg_685 );
    sensitive << ( issue_dup_V_reg_706 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_state_dup_val_V_1_ap_vld);
    sensitive << ( issue_dup_V_reg_706 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_state_key_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_state_key_V_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_state_key_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_state_key_V_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_state_key_V_we0);
    sensitive << ( issue_orig_V_fu_369_p2 );
    sensitive << ( issue_orig_V_reg_702 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_state_key_V_we1);
    sensitive << ( issue_orig_V_fu_369_p2 );
    sensitive << ( issue_orig_V_reg_702 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_state_orig_idx_V);
    sensitive << ( orig_idx );
    sensitive << ( issue_orig_V_fu_369_p2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_state_orig_idx_V_ap_vld);
    sensitive << ( issue_orig_V_fu_369_p2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_state_orig_in_V);
    sensitive << ( state_in_count_V );
    sensitive << ( issue_orig_V_fu_369_p2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_state_orig_in_V_ap_vld);
    sensitive << ( issue_orig_V_fu_369_p2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_state_orig_issued_V_o);
    sensitive << ( state_orig_issued_V_i );
    sensitive << ( issue_orig_V_fu_369_p2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_state_orig_issued_V_o_ap_vld);
    sensitive << ( issue_orig_V_fu_369_p2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_sum2_cast_fu_295_p1);
    sensitive << ( sum2_fu_289_p2 );

    SC_METHOD(thread_sum2_fu_289_p2);
    sensitive << ( bmc_in_offset_cast1_fu_268_p1 );
    sensitive << ( p_sum_fu_283_p2 );

    SC_METHOD(thread_sum4_cast_fu_333_p1);
    sensitive << ( sum4_fu_328_p2 );

    SC_METHOD(thread_sum4_fu_328_p2);
    sensitive << ( bmc_in_offset_cast1_reg_652 );
    sensitive << ( tmp_2_fu_320_p3 );

    SC_METHOD(thread_sum8_cast_fu_349_p1);
    sensitive << ( sum8_fu_344_p2 );

    SC_METHOD(thread_sum8_fu_344_p2);
    sensitive << ( bmc_in_offset_cast1_reg_652 );
    sensitive << ( p_sum4_fu_338_p2 );

    SC_METHOD(thread_sum_cast_fu_278_p1);
    sensitive << ( sum_fu_272_p2 );

    SC_METHOD(thread_sum_fu_272_p2);
    sensitive << ( bmc_in_offset_cast1_fu_268_p1 );
    sensitive << ( tmp_7_fu_260_p3 );

    SC_METHOD(thread_tmp2_fu_490_p2);
    sensitive << ( sel_tmp1_fu_448_p2 );
    sensitive << ( tmp_3_fu_432_p2 );

    SC_METHOD(thread_tmp3_fu_496_p2);
    sensitive << ( tmp_4_fu_437_p2 );
    sensitive << ( not_sel_tmp_fu_484_p2 );

    SC_METHOD(thread_tmp4_fu_502_p2);
    sensitive << ( tmp3_fu_496_p2 );
    sensitive << ( sel_tmp8_fu_472_p2 );

    SC_METHOD(thread_tmp5_fu_514_p2);
    sensitive << ( state_orig_issued_V_i );
    sensitive << ( sel_tmp1_fu_448_p2 );

    SC_METHOD(thread_tmp6_fu_520_p2);
    sensitive << ( tmp_8_fu_388_p2 );
    sensitive << ( brmerge_fu_426_p2 );

    SC_METHOD(thread_tmp_10_fu_240_p4);
    sensitive << ( dup_idx );

    SC_METHOD(thread_tmp_11_fu_256_p1);
    sensitive << ( dup_idx );

    SC_METHOD(thread_tmp_12_fu_316_p1);
    sensitive << ( orig_idx );

    SC_METHOD(thread_tmp_1_fu_402_p2);
    sensitive << ( state_key_V_q0 );

    SC_METHOD(thread_tmp_2_fu_320_p3);
    sensitive << ( tmp_12_fu_316_p1 );

    SC_METHOD(thread_tmp_3_fu_432_p2);
    sensitive << ( bmc_in_q0 );
    sensitive << ( bmc_in_load_reg_678 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp_4_fu_437_p2);
    sensitive << ( bmc_in_q1 );
    sensitive << ( bmc_in_load_4_reg_685 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp_5_fu_631_p2);
    sensitive << ( state_in_count_V_loa_reg_710 );

    SC_METHOD(thread_tmp_7_fu_260_p3);
    sensitive << ( tmp_11_fu_256_p1 );

    SC_METHOD(thread_tmp_8_fu_388_p2);
    sensitive << ( state_orig_val_V_0 );
    sensitive << ( bmc_in_load_reg_678 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp_9_fu_397_p2);
    sensitive << ( state_orig_val_V_1 );
    sensitive << ( bmc_in_load_4_reg_685 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp_fu_300_p4);
    sensitive << ( orig_idx );

    SC_METHOD(thread_tmp_s_fu_363_p2);
    sensitive << ( state_orig_issued_V_i );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( issue_orig_V_fu_369_p2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000001";
    state_orig_val_V_0 = "00000000";
    state_orig_val_V_1 = "00000000";
    state_in_count_V = "0000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "aqed_in_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, bmc_in_address0, "(port)bmc_in_address0");
    sc_trace(mVcdFile, bmc_in_ce0, "(port)bmc_in_ce0");
    sc_trace(mVcdFile, bmc_in_q0, "(port)bmc_in_q0");
    sc_trace(mVcdFile, bmc_in_address1, "(port)bmc_in_address1");
    sc_trace(mVcdFile, bmc_in_ce1, "(port)bmc_in_ce1");
    sc_trace(mVcdFile, bmc_in_q1, "(port)bmc_in_q1");
    sc_trace(mVcdFile, bmc_in_offset, "(port)bmc_in_offset");
    sc_trace(mVcdFile, orig_V, "(port)orig_V");
    sc_trace(mVcdFile, dup_V, "(port)dup_V");
    sc_trace(mVcdFile, orig_idx, "(port)orig_idx");
    sc_trace(mVcdFile, dup_idx, "(port)dup_idx");
    sc_trace(mVcdFile, state_orig_issued_V_i, "(port)state_orig_issued_V_i");
    sc_trace(mVcdFile, state_orig_issued_V_o, "(port)state_orig_issued_V_o");
    sc_trace(mVcdFile, state_orig_issued_V_o_ap_vld, "(port)state_orig_issued_V_o_ap_vld");
    sc_trace(mVcdFile, state_dup_issued_V_i, "(port)state_dup_issued_V_i");
    sc_trace(mVcdFile, state_dup_issued_V_o, "(port)state_dup_issued_V_o");
    sc_trace(mVcdFile, state_dup_issued_V_o_ap_vld, "(port)state_dup_issued_V_o_ap_vld");
    sc_trace(mVcdFile, state_orig_in_V, "(port)state_orig_in_V");
    sc_trace(mVcdFile, state_orig_in_V_ap_vld, "(port)state_orig_in_V_ap_vld");
    sc_trace(mVcdFile, state_orig_idx_V, "(port)state_orig_idx_V");
    sc_trace(mVcdFile, state_orig_idx_V_ap_vld, "(port)state_orig_idx_V_ap_vld");
    sc_trace(mVcdFile, state_dup_in_V, "(port)state_dup_in_V");
    sc_trace(mVcdFile, state_dup_in_V_ap_vld, "(port)state_dup_in_V_ap_vld");
    sc_trace(mVcdFile, state_dup_idx_V, "(port)state_dup_idx_V");
    sc_trace(mVcdFile, state_dup_idx_V_ap_vld, "(port)state_dup_idx_V_ap_vld");
    sc_trace(mVcdFile, state_dup_val_V_0, "(port)state_dup_val_V_0");
    sc_trace(mVcdFile, state_dup_val_V_0_ap_vld, "(port)state_dup_val_V_0_ap_vld");
    sc_trace(mVcdFile, state_dup_val_V_1, "(port)state_dup_val_V_1");
    sc_trace(mVcdFile, state_dup_val_V_1_ap_vld, "(port)state_dup_val_V_1_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, state_orig_val_V_0, "state_orig_val_V_0");
    sc_trace(mVcdFile, state_orig_val_V_1, "state_orig_val_V_1");
    sc_trace(mVcdFile, state_in_count_V, "state_in_count_V");
    sc_trace(mVcdFile, state_key_V_address0, "state_key_V_address0");
    sc_trace(mVcdFile, state_key_V_ce0, "state_key_V_ce0");
    sc_trace(mVcdFile, state_key_V_we0, "state_key_V_we0");
    sc_trace(mVcdFile, state_key_V_q0, "state_key_V_q0");
    sc_trace(mVcdFile, state_key_V_address1, "state_key_V_address1");
    sc_trace(mVcdFile, state_key_V_ce1, "state_key_V_ce1");
    sc_trace(mVcdFile, state_key_V_we1, "state_key_V_we1");
    sc_trace(mVcdFile, icmp1_fu_250_p2, "icmp1_fu_250_p2");
    sc_trace(mVcdFile, icmp1_reg_647, "icmp1_reg_647");
    sc_trace(mVcdFile, bmc_in_offset_cast1_fu_268_p1, "bmc_in_offset_cast1_fu_268_p1");
    sc_trace(mVcdFile, bmc_in_offset_cast1_reg_652, "bmc_in_offset_cast1_reg_652");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_fu_310_p2, "icmp_fu_310_p2");
    sc_trace(mVcdFile, icmp_reg_673, "icmp_reg_673");
    sc_trace(mVcdFile, bmc_in_load_reg_678, "bmc_in_load_reg_678");
    sc_trace(mVcdFile, bmc_in_load_4_reg_685, "bmc_in_load_4_reg_685");
    sc_trace(mVcdFile, issue_orig_V_fu_369_p2, "issue_orig_V_fu_369_p2");
    sc_trace(mVcdFile, issue_orig_V_reg_702, "issue_orig_V_reg_702");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, issue_dup_V_fu_558_p2, "issue_dup_V_fu_558_p2");
    sc_trace(mVcdFile, issue_dup_V_reg_706, "issue_dup_V_reg_706");
    sc_trace(mVcdFile, state_in_count_V_loa_reg_710, "state_in_count_V_loa_reg_710");
    sc_trace(mVcdFile, sum_cast_fu_278_p1, "sum_cast_fu_278_p1");
    sc_trace(mVcdFile, sum2_cast_fu_295_p1, "sum2_cast_fu_295_p1");
    sc_trace(mVcdFile, sum4_cast_fu_333_p1, "sum4_cast_fu_333_p1");
    sc_trace(mVcdFile, sum8_cast_fu_349_p1, "sum8_cast_fu_349_p1");
    sc_trace(mVcdFile, tmp_5_fu_631_p2, "tmp_5_fu_631_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmp_10_fu_240_p4, "tmp_10_fu_240_p4");
    sc_trace(mVcdFile, tmp_11_fu_256_p1, "tmp_11_fu_256_p1");
    sc_trace(mVcdFile, tmp_7_fu_260_p3, "tmp_7_fu_260_p3");
    sc_trace(mVcdFile, sum_fu_272_p2, "sum_fu_272_p2");
    sc_trace(mVcdFile, p_sum_fu_283_p2, "p_sum_fu_283_p2");
    sc_trace(mVcdFile, sum2_fu_289_p2, "sum2_fu_289_p2");
    sc_trace(mVcdFile, tmp_fu_300_p4, "tmp_fu_300_p4");
    sc_trace(mVcdFile, tmp_12_fu_316_p1, "tmp_12_fu_316_p1");
    sc_trace(mVcdFile, tmp_2_fu_320_p3, "tmp_2_fu_320_p3");
    sc_trace(mVcdFile, sum4_fu_328_p2, "sum4_fu_328_p2");
    sc_trace(mVcdFile, p_sum4_fu_338_p2, "p_sum4_fu_338_p2");
    sc_trace(mVcdFile, sum8_fu_344_p2, "sum8_fu_344_p2");
    sc_trace(mVcdFile, or_cond_fu_354_p2, "or_cond_fu_354_p2");
    sc_trace(mVcdFile, tmp_s_fu_363_p2, "tmp_s_fu_363_p2");
    sc_trace(mVcdFile, tmp_9_fu_397_p2, "tmp_9_fu_397_p2");
    sc_trace(mVcdFile, tmp_1_fu_402_p2, "tmp_1_fu_402_p2");
    sc_trace(mVcdFile, or_cond_not_fu_414_p2, "or_cond_not_fu_414_p2");
    sc_trace(mVcdFile, or_cond2_fu_408_p2, "or_cond2_fu_408_p2");
    sc_trace(mVcdFile, p_082_not_fu_420_p2, "p_082_not_fu_420_p2");
    sc_trace(mVcdFile, or_cond1_fu_375_p2, "or_cond1_fu_375_p2");
    sc_trace(mVcdFile, sel_tmp_fu_442_p2, "sel_tmp_fu_442_p2");
    sc_trace(mVcdFile, tmp_8_fu_388_p2, "tmp_8_fu_388_p2");
    sc_trace(mVcdFile, brmerge_fu_426_p2, "brmerge_fu_426_p2");
    sc_trace(mVcdFile, sel_tmp5_fu_454_p2, "sel_tmp5_fu_454_p2");
    sc_trace(mVcdFile, sel_tmp6_fu_460_p2, "sel_tmp6_fu_460_p2");
    sc_trace(mVcdFile, sel_tmp7_fu_466_p2, "sel_tmp7_fu_466_p2");
    sc_trace(mVcdFile, sel_tmp2_fu_478_p2, "sel_tmp2_fu_478_p2");
    sc_trace(mVcdFile, sel_tmp1_fu_448_p2, "sel_tmp1_fu_448_p2");
    sc_trace(mVcdFile, tmp_3_fu_432_p2, "tmp_3_fu_432_p2");
    sc_trace(mVcdFile, tmp_4_fu_437_p2, "tmp_4_fu_437_p2");
    sc_trace(mVcdFile, not_sel_tmp_fu_484_p2, "not_sel_tmp_fu_484_p2");
    sc_trace(mVcdFile, tmp3_fu_496_p2, "tmp3_fu_496_p2");
    sc_trace(mVcdFile, sel_tmp8_fu_472_p2, "sel_tmp8_fu_472_p2");
    sc_trace(mVcdFile, tmp4_fu_502_p2, "tmp4_fu_502_p2");
    sc_trace(mVcdFile, tmp2_fu_490_p2, "tmp2_fu_490_p2");
    sc_trace(mVcdFile, tmp6_fu_520_p2, "tmp6_fu_520_p2");
    sc_trace(mVcdFile, tmp5_fu_514_p2, "tmp5_fu_514_p2");
    sc_trace(mVcdFile, sel_tmp4_fu_526_p2, "sel_tmp4_fu_526_p2");
    sc_trace(mVcdFile, sel_tmp3_fu_508_p2, "sel_tmp3_fu_508_p2");
    sc_trace(mVcdFile, sel_tmp10_fu_540_p2, "sel_tmp10_fu_540_p2");
    sc_trace(mVcdFile, sel_tmp27_not_fu_546_p2, "sel_tmp27_not_fu_546_p2");
    sc_trace(mVcdFile, sel_tmp9_fu_532_p3, "sel_tmp9_fu_532_p3");
    sc_trace(mVcdFile, not_sel_tmp1_fu_552_p2, "not_sel_tmp1_fu_552_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

aqed_in::~aqed_in() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete state_key_V_U;
}

void aqed_in::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv1_0;
}

void aqed_in::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        bmc_in_load_4_reg_685 = bmc_in_q1.read();
        bmc_in_load_reg_678 = bmc_in_q0.read();
        icmp_reg_673 = icmp_fu_310_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bmc_in_offset_cast1_reg_652 = bmc_in_offset_cast1_fu_268_p1.read();
        icmp1_reg_647 = icmp1_fu_250_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        issue_dup_V_reg_706 = issue_dup_V_fu_558_p2.read();
        issue_orig_V_reg_702 = issue_orig_V_fu_369_p2.read();
        state_in_count_V_loa_reg_710 = state_in_count_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        state_in_count_V = tmp_5_fu_631_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(issue_orig_V_fu_369_p2.read(), ap_const_lv1_1))) {
        state_orig_val_V_0 = bmc_in_q0.read();
        state_orig_val_V_1 = bmc_in_q1.read();
    }
}

void aqed_in::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void aqed_in::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void aqed_in::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void aqed_in::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void aqed_in::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void aqed_in::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void aqed_in::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void aqed_in::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void aqed_in::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void aqed_in::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void aqed_in::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void aqed_in::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void aqed_in::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void aqed_in::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void aqed_in::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void aqed_in::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void aqed_in::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void aqed_in::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void aqed_in::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void aqed_in::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void aqed_in::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void aqed_in::thread_bmc_in_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        bmc_in_address0 =  (sc_lv<4>) (sum4_cast_fu_333_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        bmc_in_address0 =  (sc_lv<4>) (sum_cast_fu_278_p1.read());
    } else {
        bmc_in_address0 = "XXXX";
    }
}

void aqed_in::thread_bmc_in_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        bmc_in_address1 =  (sc_lv<4>) (sum8_cast_fu_349_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        bmc_in_address1 =  (sc_lv<4>) (sum2_cast_fu_295_p1.read());
    } else {
        bmc_in_address1 = "XXXX";
    }
}

void aqed_in::thread_bmc_in_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        bmc_in_ce0 = ap_const_logic_1;
    } else {
        bmc_in_ce0 = ap_const_logic_0;
    }
}

void aqed_in::thread_bmc_in_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        bmc_in_ce1 = ap_const_logic_1;
    } else {
        bmc_in_ce1 = ap_const_logic_0;
    }
}

void aqed_in::thread_bmc_in_offset_cast1_fu_268_p1() {
    bmc_in_offset_cast1_fu_268_p1 = esl_zext<6,4>(bmc_in_offset.read());
}

void aqed_in::thread_brmerge_fu_426_p2() {
    brmerge_fu_426_p2 = (or_cond2_fu_408_p2.read() | p_082_not_fu_420_p2.read());
}

void aqed_in::thread_icmp1_fu_250_p2() {
    icmp1_fu_250_p2 = (!tmp_10_fu_240_p4.read().is_01() || !ap_const_lv7_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_10_fu_240_p4.read() == ap_const_lv7_0);
}

void aqed_in::thread_icmp_fu_310_p2() {
    icmp_fu_310_p2 = (!tmp_fu_300_p4.read().is_01() || !ap_const_lv7_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_300_p4.read() == ap_const_lv7_0);
}

void aqed_in::thread_issue_dup_V_fu_558_p2() {
    issue_dup_V_fu_558_p2 = (sel_tmp9_fu_532_p3.read() & not_sel_tmp1_fu_552_p2.read());
}

void aqed_in::thread_issue_orig_V_fu_369_p2() {
    issue_orig_V_fu_369_p2 = (or_cond_fu_354_p2.read() & tmp_s_fu_363_p2.read());
}

void aqed_in::thread_not_sel_tmp1_fu_552_p2() {
    not_sel_tmp1_fu_552_p2 = (sel_tmp5_fu_454_p2.read() | sel_tmp27_not_fu_546_p2.read());
}

void aqed_in::thread_not_sel_tmp_fu_484_p2() {
    not_sel_tmp_fu_484_p2 = (sel_tmp2_fu_478_p2.read() ^ ap_const_lv1_1);
}

void aqed_in::thread_or_cond1_fu_375_p2() {
    or_cond1_fu_375_p2 = (icmp1_reg_647.read() & dup_V.read());
}

void aqed_in::thread_or_cond2_fu_408_p2() {
    or_cond2_fu_408_p2 = (tmp_9_fu_397_p2.read() & tmp_1_fu_402_p2.read());
}

void aqed_in::thread_or_cond_fu_354_p2() {
    or_cond_fu_354_p2 = (icmp_reg_673.read() & orig_V.read());
}

void aqed_in::thread_or_cond_not_fu_414_p2() {
    or_cond_not_fu_414_p2 = (or_cond_fu_354_p2.read() ^ ap_const_lv1_1);
}

void aqed_in::thread_p_082_not_fu_420_p2() {
    p_082_not_fu_420_p2 = (state_orig_issued_V_i.read() | or_cond_not_fu_414_p2.read());
}

void aqed_in::thread_p_sum4_fu_338_p2() {
    p_sum4_fu_338_p2 = (tmp_2_fu_320_p3.read() | ap_const_lv6_1);
}

void aqed_in::thread_p_sum_fu_283_p2() {
    p_sum_fu_283_p2 = (tmp_7_fu_260_p3.read() | ap_const_lv6_1);
}

void aqed_in::thread_sel_tmp10_fu_540_p2() {
    sel_tmp10_fu_540_p2 = (sel_tmp1_fu_448_p2.read() & p_082_not_fu_420_p2.read());
}

void aqed_in::thread_sel_tmp1_fu_448_p2() {
    sel_tmp1_fu_448_p2 = (or_cond1_fu_375_p2.read() & sel_tmp_fu_442_p2.read());
}

void aqed_in::thread_sel_tmp27_not_fu_546_p2() {
    sel_tmp27_not_fu_546_p2 = (sel_tmp10_fu_540_p2.read() ^ ap_const_lv1_1);
}

void aqed_in::thread_sel_tmp2_fu_478_p2() {
    sel_tmp2_fu_478_p2 = (state_dup_issued_V_i.read() & or_cond1_fu_375_p2.read());
}

void aqed_in::thread_sel_tmp3_fu_508_p2() {
    sel_tmp3_fu_508_p2 = (tmp4_fu_502_p2.read() & tmp2_fu_490_p2.read());
}

void aqed_in::thread_sel_tmp4_fu_526_p2() {
    sel_tmp4_fu_526_p2 = (tmp6_fu_520_p2.read() & tmp5_fu_514_p2.read());
}

void aqed_in::thread_sel_tmp5_fu_454_p2() {
    sel_tmp5_fu_454_p2 = (state_orig_issued_V_i.read() & tmp_8_fu_388_p2.read());
}

void aqed_in::thread_sel_tmp6_fu_460_p2() {
    sel_tmp6_fu_460_p2 = (brmerge_fu_426_p2.read() ^ ap_const_lv1_1);
}

void aqed_in::thread_sel_tmp7_fu_466_p2() {
    sel_tmp7_fu_466_p2 = (sel_tmp5_fu_454_p2.read() & sel_tmp6_fu_460_p2.read());
}

void aqed_in::thread_sel_tmp8_fu_472_p2() {
    sel_tmp8_fu_472_p2 = (issue_orig_V_fu_369_p2.read() | sel_tmp7_fu_466_p2.read());
}

void aqed_in::thread_sel_tmp9_fu_532_p3() {
    sel_tmp9_fu_532_p3 = (!sel_tmp4_fu_526_p2.read()[0].is_01())? sc_lv<1>(): ((sel_tmp4_fu_526_p2.read()[0].to_bool())? or_cond2_fu_408_p2.read(): sel_tmp3_fu_508_p2.read());
}

void aqed_in::thread_sel_tmp_fu_442_p2() {
    sel_tmp_fu_442_p2 = (state_dup_issued_V_i.read() ^ ap_const_lv1_1);
}

void aqed_in::thread_state_dup_idx_V() {
    state_dup_idx_V = dup_idx.read().range(2-1, 0);
}

void aqed_in::thread_state_dup_idx_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
         esl_seteq<1,1,1>(issue_dup_V_reg_706.read(), ap_const_lv1_1))) {
        state_dup_idx_V_ap_vld = ap_const_logic_1;
    } else {
        state_dup_idx_V_ap_vld = ap_const_logic_0;
    }
}

void aqed_in::thread_state_dup_in_V() {
    state_dup_in_V = state_in_count_V_loa_reg_710.read();
}

void aqed_in::thread_state_dup_in_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
         esl_seteq<1,1,1>(issue_dup_V_reg_706.read(), ap_const_lv1_1))) {
        state_dup_in_V_ap_vld = ap_const_logic_1;
    } else {
        state_dup_in_V_ap_vld = ap_const_logic_0;
    }
}

void aqed_in::thread_state_dup_issued_V_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
         esl_seteq<1,1,1>(issue_dup_V_reg_706.read(), ap_const_lv1_1))) {
        state_dup_issued_V_o = ap_const_lv1_1;
    } else {
        state_dup_issued_V_o = state_dup_issued_V_i.read();
    }
}

void aqed_in::thread_state_dup_issued_V_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
         esl_seteq<1,1,1>(issue_dup_V_reg_706.read(), ap_const_lv1_1))) {
        state_dup_issued_V_o_ap_vld = ap_const_logic_1;
    } else {
        state_dup_issued_V_o_ap_vld = ap_const_logic_0;
    }
}

void aqed_in::thread_state_dup_val_V_0() {
    state_dup_val_V_0 = bmc_in_load_reg_678.read();
}

void aqed_in::thread_state_dup_val_V_0_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
         esl_seteq<1,1,1>(issue_dup_V_reg_706.read(), ap_const_lv1_1))) {
        state_dup_val_V_0_ap_vld = ap_const_logic_1;
    } else {
        state_dup_val_V_0_ap_vld = ap_const_logic_0;
    }
}

void aqed_in::thread_state_dup_val_V_1() {
    state_dup_val_V_1 = bmc_in_load_4_reg_685.read();
}

void aqed_in::thread_state_dup_val_V_1_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
         esl_seteq<1,1,1>(issue_dup_V_reg_706.read(), ap_const_lv1_1))) {
        state_dup_val_V_1_ap_vld = ap_const_logic_1;
    } else {
        state_dup_val_V_1_ap_vld = ap_const_logic_0;
    }
}

void aqed_in::thread_state_key_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        state_key_V_address0 = ap_const_lv5_1D;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        state_key_V_address0 = ap_const_lv5_1B;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        state_key_V_address0 = ap_const_lv5_19;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        state_key_V_address0 = ap_const_lv5_17;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        state_key_V_address0 = ap_const_lv5_15;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        state_key_V_address0 = ap_const_lv5_13;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        state_key_V_address0 = ap_const_lv5_11;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        state_key_V_address0 = ap_const_lv5_F;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        state_key_V_address0 = ap_const_lv5_D;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        state_key_V_address0 = ap_const_lv5_B;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        state_key_V_address0 = ap_const_lv5_9;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        state_key_V_address0 = ap_const_lv5_7;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        state_key_V_address0 = ap_const_lv5_5;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        state_key_V_address0 = ap_const_lv5_3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        state_key_V_address0 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        state_key_V_address0 = ap_const_lv5_1F;
    } else {
        state_key_V_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void aqed_in::thread_state_key_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        state_key_V_address1 = ap_const_lv5_1E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        state_key_V_address1 = ap_const_lv5_1C;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        state_key_V_address1 = ap_const_lv5_1A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        state_key_V_address1 = ap_const_lv5_18;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        state_key_V_address1 = ap_const_lv5_16;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        state_key_V_address1 = ap_const_lv5_14;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        state_key_V_address1 = ap_const_lv5_12;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        state_key_V_address1 = ap_const_lv5_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        state_key_V_address1 = ap_const_lv5_E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        state_key_V_address1 = ap_const_lv5_C;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        state_key_V_address1 = ap_const_lv5_A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        state_key_V_address1 = ap_const_lv5_8;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        state_key_V_address1 = ap_const_lv5_6;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        state_key_V_address1 = ap_const_lv5_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        state_key_V_address1 = ap_const_lv5_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        state_key_V_address1 = ap_const_lv5_1;
    } else {
        state_key_V_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void aqed_in::thread_state_key_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        state_key_V_ce0 = ap_const_logic_1;
    } else {
        state_key_V_ce0 = ap_const_logic_0;
    }
}

void aqed_in::thread_state_key_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        state_key_V_ce1 = ap_const_logic_1;
    } else {
        state_key_V_ce1 = ap_const_logic_0;
    }
}

void aqed_in::thread_state_key_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(issue_orig_V_fu_369_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(issue_orig_V_reg_702.read(), ap_const_lv1_1)))) {
        state_key_V_we0 = ap_const_logic_1;
    } else {
        state_key_V_we0 = ap_const_logic_0;
    }
}

void aqed_in::thread_state_key_V_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(issue_orig_V_fu_369_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(issue_orig_V_reg_702.read(), ap_const_lv1_1)))) {
        state_key_V_we1 = ap_const_logic_1;
    } else {
        state_key_V_we1 = ap_const_logic_0;
    }
}

void aqed_in::thread_state_orig_idx_V() {
    state_orig_idx_V = orig_idx.read().range(2-1, 0);
}

void aqed_in::thread_state_orig_idx_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(issue_orig_V_fu_369_p2.read(), ap_const_lv1_1))) {
        state_orig_idx_V_ap_vld = ap_const_logic_1;
    } else {
        state_orig_idx_V_ap_vld = ap_const_logic_0;
    }
}

void aqed_in::thread_state_orig_in_V() {
    state_orig_in_V = state_in_count_V.read();
}

void aqed_in::thread_state_orig_in_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(issue_orig_V_fu_369_p2.read(), ap_const_lv1_1))) {
        state_orig_in_V_ap_vld = ap_const_logic_1;
    } else {
        state_orig_in_V_ap_vld = ap_const_logic_0;
    }
}

void aqed_in::thread_state_orig_issued_V_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(issue_orig_V_fu_369_p2.read(), ap_const_lv1_1))) {
        state_orig_issued_V_o = ap_const_lv1_1;
    } else {
        state_orig_issued_V_o = state_orig_issued_V_i.read();
    }
}

void aqed_in::thread_state_orig_issued_V_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(issue_orig_V_fu_369_p2.read(), ap_const_lv1_1))) {
        state_orig_issued_V_o_ap_vld = ap_const_logic_1;
    } else {
        state_orig_issued_V_o_ap_vld = ap_const_logic_0;
    }
}

void aqed_in::thread_sum2_cast_fu_295_p1() {
    sum2_cast_fu_295_p1 = esl_zext<64,6>(sum2_fu_289_p2.read());
}

void aqed_in::thread_sum2_fu_289_p2() {
    sum2_fu_289_p2 = (!bmc_in_offset_cast1_fu_268_p1.read().is_01() || !p_sum_fu_283_p2.read().is_01())? sc_lv<6>(): (sc_biguint<6>(bmc_in_offset_cast1_fu_268_p1.read()) + sc_biguint<6>(p_sum_fu_283_p2.read()));
}

void aqed_in::thread_sum4_cast_fu_333_p1() {
    sum4_cast_fu_333_p1 = esl_zext<64,6>(sum4_fu_328_p2.read());
}

void aqed_in::thread_sum4_fu_328_p2() {
    sum4_fu_328_p2 = (!bmc_in_offset_cast1_reg_652.read().is_01() || !tmp_2_fu_320_p3.read().is_01())? sc_lv<6>(): (sc_biguint<6>(bmc_in_offset_cast1_reg_652.read()) + sc_biguint<6>(tmp_2_fu_320_p3.read()));
}

void aqed_in::thread_sum8_cast_fu_349_p1() {
    sum8_cast_fu_349_p1 = esl_zext<64,6>(sum8_fu_344_p2.read());
}

void aqed_in::thread_sum8_fu_344_p2() {
    sum8_fu_344_p2 = (!bmc_in_offset_cast1_reg_652.read().is_01() || !p_sum4_fu_338_p2.read().is_01())? sc_lv<6>(): (sc_biguint<6>(bmc_in_offset_cast1_reg_652.read()) + sc_biguint<6>(p_sum4_fu_338_p2.read()));
}

void aqed_in::thread_sum_cast_fu_278_p1() {
    sum_cast_fu_278_p1 = esl_zext<64,6>(sum_fu_272_p2.read());
}

void aqed_in::thread_sum_fu_272_p2() {
    sum_fu_272_p2 = (!bmc_in_offset_cast1_fu_268_p1.read().is_01() || !tmp_7_fu_260_p3.read().is_01())? sc_lv<6>(): (sc_biguint<6>(bmc_in_offset_cast1_fu_268_p1.read()) + sc_biguint<6>(tmp_7_fu_260_p3.read()));
}

void aqed_in::thread_tmp2_fu_490_p2() {
    tmp2_fu_490_p2 = (sel_tmp1_fu_448_p2.read() & tmp_3_fu_432_p2.read());
}

void aqed_in::thread_tmp3_fu_496_p2() {
    tmp3_fu_496_p2 = (tmp_4_fu_437_p2.read() & not_sel_tmp_fu_484_p2.read());
}

void aqed_in::thread_tmp4_fu_502_p2() {
    tmp4_fu_502_p2 = (tmp3_fu_496_p2.read() & sel_tmp8_fu_472_p2.read());
}

void aqed_in::thread_tmp5_fu_514_p2() {
    tmp5_fu_514_p2 = (state_orig_issued_V_i.read() & sel_tmp1_fu_448_p2.read());
}

void aqed_in::thread_tmp6_fu_520_p2() {
    tmp6_fu_520_p2 = (tmp_8_fu_388_p2.read() & brmerge_fu_426_p2.read());
}

void aqed_in::thread_tmp_10_fu_240_p4() {
    tmp_10_fu_240_p4 = dup_idx.read().range(7, 1);
}

void aqed_in::thread_tmp_11_fu_256_p1() {
    tmp_11_fu_256_p1 = dup_idx.read().range(5-1, 0);
}

void aqed_in::thread_tmp_12_fu_316_p1() {
    tmp_12_fu_316_p1 = orig_idx.read().range(5-1, 0);
}

void aqed_in::thread_tmp_1_fu_402_p2() {
    tmp_1_fu_402_p2 = (state_key_V_q0.read() ^ ap_const_lv1_1);
}

void aqed_in::thread_tmp_2_fu_320_p3() {
    tmp_2_fu_320_p3 = esl_concat<5,1>(tmp_12_fu_316_p1.read(), ap_const_lv1_0);
}

void aqed_in::thread_tmp_3_fu_432_p2() {
    tmp_3_fu_432_p2 = (!bmc_in_q0.read().is_01() || !bmc_in_load_reg_678.read().is_01())? sc_lv<1>(): sc_lv<1>(bmc_in_q0.read() == bmc_in_load_reg_678.read());
}

void aqed_in::thread_tmp_4_fu_437_p2() {
    tmp_4_fu_437_p2 = (!bmc_in_q1.read().is_01() || !bmc_in_load_4_reg_685.read().is_01())? sc_lv<1>(): sc_lv<1>(bmc_in_q1.read() == bmc_in_load_4_reg_685.read());
}

void aqed_in::thread_tmp_5_fu_631_p2() {
    tmp_5_fu_631_p2 = (!state_in_count_V_loa_reg_710.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(state_in_count_V_loa_reg_710.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void aqed_in::thread_tmp_7_fu_260_p3() {
    tmp_7_fu_260_p3 = esl_concat<5,1>(tmp_11_fu_256_p1.read(), ap_const_lv1_0);
}

void aqed_in::thread_tmp_8_fu_388_p2() {
    tmp_8_fu_388_p2 = (!bmc_in_load_reg_678.read().is_01() || !state_orig_val_V_0.read().is_01())? sc_lv<1>(): sc_lv<1>(bmc_in_load_reg_678.read() == state_orig_val_V_0.read());
}

void aqed_in::thread_tmp_9_fu_397_p2() {
    tmp_9_fu_397_p2 = (!bmc_in_load_4_reg_685.read().is_01() || !state_orig_val_V_1.read().is_01())? sc_lv<1>(): sc_lv<1>(bmc_in_load_4_reg_685.read() == state_orig_val_V_1.read());
}

void aqed_in::thread_tmp_fu_300_p4() {
    tmp_fu_300_p4 = orig_idx.read().range(7, 1);
}

void aqed_in::thread_tmp_s_fu_363_p2() {
    tmp_s_fu_363_p2 = (state_orig_issued_V_i.read() ^ ap_const_lv1_1);
}

void aqed_in::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(issue_orig_V_fu_369_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<18>) ("XXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

