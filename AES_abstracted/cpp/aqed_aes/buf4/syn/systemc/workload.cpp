// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "workload.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic workload::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic workload::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> workload::ap_ST_fsm_state1 = "1";
const sc_lv<11> workload::ap_ST_fsm_state2 = "10";
const sc_lv<11> workload::ap_ST_fsm_state3 = "100";
const sc_lv<11> workload::ap_ST_fsm_state4 = "1000";
const sc_lv<11> workload::ap_ST_fsm_state5 = "10000";
const sc_lv<11> workload::ap_ST_fsm_state6 = "100000";
const sc_lv<11> workload::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> workload::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> workload::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> workload::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> workload::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> workload::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> workload::ap_const_lv32_1 = "1";
const sc_lv<32> workload::ap_const_lv32_4 = "100";
const sc_lv<1> workload::ap_const_lv1_0 = "0";
const sc_lv<32> workload::ap_const_lv32_5 = "101";
const sc_lv<32> workload::ap_const_lv32_6 = "110";
const sc_lv<1> workload::ap_const_lv1_1 = "1";
const sc_lv<32> workload::ap_const_lv32_8 = "1000";
const bool workload::ap_const_boolean_0 = false;
const sc_lv<32> workload::ap_const_lv32_9 = "1001";
const sc_lv<32> workload::ap_const_lv32_A = "1010";
const sc_lv<6> workload::ap_const_lv6_0 = "000000";
const sc_lv<32> workload::ap_const_lv32_2 = "10";
const sc_lv<32> workload::ap_const_lv32_3 = "11";
const sc_lv<2> workload::ap_const_lv2_0 = "00";
const sc_lv<32> workload::ap_const_lv32_7 = "111";
const sc_lv<6> workload::ap_const_lv6_20 = "100000";
const sc_lv<6> workload::ap_const_lv6_1 = "1";
const sc_lv<2> workload::ap_const_lv2_2 = "10";
const sc_lv<2> workload::ap_const_lv2_1 = "1";
const bool workload::ap_const_boolean_1 = true;

workload::workload(sc_module_name name) : sc_module(name), mVcdFile(0) {
    local_key_0_U = new workload_local_keeOg("local_key_0_U");
    local_key_0_U->clk(ap_clk);
    local_key_0_U->reset(ap_rst);
    local_key_0_U->address0(grp_aes256_encrypt_ecb_fu_339_k_address0);
    local_key_0_U->ce0(grp_aes256_encrypt_ecb_fu_339_k_ce0);
    local_key_0_U->q0(local_key_0_q0);
    local_key_1_U = new workload_local_keeOg("local_key_1_U");
    local_key_1_U->clk(ap_clk);
    local_key_1_U->reset(ap_rst);
    local_key_1_U->address0(grp_aes256_encrypt_ecb_fu_351_k_address0);
    local_key_1_U->ce0(grp_aes256_encrypt_ecb_fu_351_k_ce0);
    local_key_1_U->q0(local_key_1_q0);
    grp_aes256_encrypt_ecb_fu_339 = new aes256_encrypt_ecb("grp_aes256_encrypt_ecb_fu_339");
    grp_aes256_encrypt_ecb_fu_339->ap_clk(ap_clk);
    grp_aes256_encrypt_ecb_fu_339->ap_rst(ap_rst);
    grp_aes256_encrypt_ecb_fu_339->ap_start(grp_aes256_encrypt_ecb_fu_339_ap_start);
    grp_aes256_encrypt_ecb_fu_339->ap_done(grp_aes256_encrypt_ecb_fu_339_ap_done);
    grp_aes256_encrypt_ecb_fu_339->ap_idle(grp_aes256_encrypt_ecb_fu_339_ap_idle);
    grp_aes256_encrypt_ecb_fu_339->ap_ready(grp_aes256_encrypt_ecb_fu_339_ap_ready);
    grp_aes256_encrypt_ecb_fu_339->k_address0(grp_aes256_encrypt_ecb_fu_339_k_address0);
    grp_aes256_encrypt_ecb_fu_339->k_ce0(grp_aes256_encrypt_ecb_fu_339_k_ce0);
    grp_aes256_encrypt_ecb_fu_339->k_q0(local_key_0_q0);
    grp_aes256_encrypt_ecb_fu_339->p_read(buf_0_0_1_reg_188);
    grp_aes256_encrypt_ecb_fu_339->p_read1(buf_0_1_1_reg_177);
    grp_aes256_encrypt_ecb_fu_339->ap_return_0(grp_aes256_encrypt_ecb_fu_339_ap_return_0);
    grp_aes256_encrypt_ecb_fu_339->ap_return_1(grp_aes256_encrypt_ecb_fu_339_ap_return_1);
    grp_aes256_encrypt_ecb_fu_351 = new aes256_encrypt_ecb("grp_aes256_encrypt_ecb_fu_351");
    grp_aes256_encrypt_ecb_fu_351->ap_clk(ap_clk);
    grp_aes256_encrypt_ecb_fu_351->ap_rst(ap_rst);
    grp_aes256_encrypt_ecb_fu_351->ap_start(grp_aes256_encrypt_ecb_fu_351_ap_start);
    grp_aes256_encrypt_ecb_fu_351->ap_done(grp_aes256_encrypt_ecb_fu_351_ap_done);
    grp_aes256_encrypt_ecb_fu_351->ap_idle(grp_aes256_encrypt_ecb_fu_351_ap_idle);
    grp_aes256_encrypt_ecb_fu_351->ap_ready(grp_aes256_encrypt_ecb_fu_351_ap_ready);
    grp_aes256_encrypt_ecb_fu_351->k_address0(grp_aes256_encrypt_ecb_fu_351_k_address0);
    grp_aes256_encrypt_ecb_fu_351->k_ce0(grp_aes256_encrypt_ecb_fu_351_k_ce0);
    grp_aes256_encrypt_ecb_fu_351->k_q0(local_key_1_q0);
    grp_aes256_encrypt_ecb_fu_351->p_read(buf_1_0_1_reg_166);
    grp_aes256_encrypt_ecb_fu_351->p_read1(buf_1_1_1_reg_155);
    grp_aes256_encrypt_ecb_fu_351->ap_return_0(grp_aes256_encrypt_ecb_fu_351_ap_return_0);
    grp_aes256_encrypt_ecb_fu_351->ap_return_1(grp_aes256_encrypt_ecb_fu_351_ap_return_1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state9_on_subcall_done);
    sensitive << ( grp_aes256_encrypt_ecb_fu_339_ap_done );
    sensitive << ( grp_aes256_encrypt_ecb_fu_351_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_phi_mux_i_2_phi_fu_147_p4 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_i_2_phi_fu_147_p4);
    sensitive << ( i_2_reg_142 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_phi_mux_i_2_phi_fu_147_p4 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buf_0_load_phi_fu_511_p3);
    sensitive << ( buf_0_0_3_reg_601 );
    sensitive << ( buf_0_1_3_reg_607 );
    sensitive << ( tmp_9_fu_501_p1 );

    SC_METHOD(thread_buf_1_1_4_fu_437_p3);
    sensitive << ( data_q0 );
    sensitive << ( tmp_7_reg_573 );
    sensitive << ( buf_1_1_2_reg_210 );

    SC_METHOD(thread_buf_1_1_6_fu_444_p3);
    sensitive << ( data_q0 );
    sensitive << ( tmp_7_reg_573 );
    sensitive << ( buf_1_0_2_reg_222 );

    SC_METHOD(thread_buf_1_1_7_fu_423_p3);
    sensitive << ( data_q0 );
    sensitive << ( tmp_7_reg_573 );
    sensitive << ( buf_0_1_2_reg_234 );

    SC_METHOD(thread_buf_1_1_8_fu_430_p3);
    sensitive << ( data_q0 );
    sensitive << ( tmp_7_reg_573 );
    sensitive << ( buf_0_0_2_reg_246 );

    SC_METHOD(thread_buf_1_load_phi_fu_505_p3);
    sensitive << ( buf_1_0_3_reg_613 );
    sensitive << ( buf_1_1_3_reg_619 );
    sensitive << ( tmp_9_fu_501_p1 );

    SC_METHOD(thread_data_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( sum_cast_fu_414_p1 );
    sensitive << ( sum2_cast_fu_530_p1 );

    SC_METHOD(thread_data_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_data_d0);
    sensitive << ( tmp_5_reg_633 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( buf_1_load_phi_fu_505_p3 );
    sensitive << ( buf_0_load_phi_fu_511_p3 );

    SC_METHOD(thread_data_we0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_489_p2 );

    SC_METHOD(thread_exitcond2_fu_363_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_reg_83 );

    SC_METHOD(thread_exitcond3_fu_375_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j_1_reg_199 );

    SC_METHOD(thread_exitcond5_fu_397_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( k_reg_258 );

    SC_METHOD(thread_exitcond6_fu_467_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( j_3_reg_317 );

    SC_METHOD(thread_exitcond_fu_489_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( k_1_reg_328 );

    SC_METHOD(thread_grp_aes256_encrypt_ecb_fu_339_ap_start);
    sensitive << ( grp_aes256_encrypt_ecb_fu_339_ap_start_reg );

    SC_METHOD(thread_grp_aes256_encrypt_ecb_fu_351_ap_start);
    sensitive << ( grp_aes256_encrypt_ecb_fu_351_ap_start_reg );

    SC_METHOD(thread_j_2_fu_369_p2);
    sensitive << ( j_reg_83 );

    SC_METHOD(thread_j_4_fu_381_p2);
    sensitive << ( j_1_reg_199 );

    SC_METHOD(thread_j_5_fu_473_p2);
    sensitive << ( j_3_reg_317 );

    SC_METHOD(thread_k_2_fu_403_p2);
    sensitive << ( k_reg_258 );

    SC_METHOD(thread_k_3_fu_495_p2);
    sensitive << ( k_1_reg_328 );

    SC_METHOD(thread_sum2_cast_fu_530_p1);
    sensitive << ( tmp8_fu_525_p2 );

    SC_METHOD(thread_sum_cast_fu_414_p1);
    sensitive << ( tmp7_fu_409_p2 );

    SC_METHOD(thread_tmp7_fu_409_p2);
    sensitive << ( tmp_4_reg_555 );
    sensitive << ( k_reg_258 );

    SC_METHOD(thread_tmp8_fu_525_p2);
    sensitive << ( tmp_6_reg_638 );
    sensitive << ( k_1_reg_328 );

    SC_METHOD(thread_tmp_1_fu_387_p1);
    sensitive << ( j_1_reg_199 );

    SC_METHOD(thread_tmp_4_fu_391_p2);
    sensitive << ( j_1_reg_199 );

    SC_METHOD(thread_tmp_5_fu_479_p1);
    sensitive << ( j_3_reg_317 );

    SC_METHOD(thread_tmp_6_fu_483_p2);
    sensitive << ( j_3_reg_317 );

    SC_METHOD(thread_tmp_7_fu_419_p1);
    sensitive << ( k_reg_258 );

    SC_METHOD(thread_tmp_9_fu_501_p1);
    sensitive << ( k_1_reg_328 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond3_fu_375_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond5_fu_397_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_block_state9_on_subcall_done );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond6_fu_467_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond2_fu_363_p2 );
    sensitive << ( ap_phi_mux_i_2_phi_fu_147_p4 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_489_p2 );

    ap_CS_fsm = "00000000001";
    grp_aes256_encrypt_ecb_fu_339_ap_start_reg = SC_LOGIC_0;
    grp_aes256_encrypt_ecb_fu_351_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "workload_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_address0, "(port)data_address0");
    sc_trace(mVcdFile, data_ce0, "(port)data_ce0");
    sc_trace(mVcdFile, data_we0, "(port)data_we0");
    sc_trace(mVcdFile, data_d0, "(port)data_d0");
    sc_trace(mVcdFile, data_q0, "(port)data_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, local_key_0_q0, "local_key_0_q0");
    sc_trace(mVcdFile, local_key_1_q0, "local_key_1_q0");
    sc_trace(mVcdFile, j_2_fu_369_p2, "j_2_fu_369_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, j_4_fu_381_p2, "j_4_fu_381_p2");
    sc_trace(mVcdFile, j_4_reg_546, "j_4_reg_546");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_1_fu_387_p1, "tmp_1_fu_387_p1");
    sc_trace(mVcdFile, tmp_1_reg_551, "tmp_1_reg_551");
    sc_trace(mVcdFile, exitcond3_fu_375_p2, "exitcond3_fu_375_p2");
    sc_trace(mVcdFile, tmp_4_fu_391_p2, "tmp_4_fu_391_p2");
    sc_trace(mVcdFile, tmp_4_reg_555, "tmp_4_reg_555");
    sc_trace(mVcdFile, k_2_fu_403_p2, "k_2_fu_403_p2");
    sc_trace(mVcdFile, k_2_reg_563, "k_2_reg_563");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, exitcond5_fu_397_p2, "exitcond5_fu_397_p2");
    sc_trace(mVcdFile, tmp_7_fu_419_p1, "tmp_7_fu_419_p1");
    sc_trace(mVcdFile, tmp_7_reg_573, "tmp_7_reg_573");
    sc_trace(mVcdFile, buf_1_1_7_fu_423_p3, "buf_1_1_7_fu_423_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, buf_1_1_8_fu_430_p3, "buf_1_1_8_fu_430_p3");
    sc_trace(mVcdFile, buf_1_1_4_fu_437_p3, "buf_1_1_4_fu_437_p3");
    sc_trace(mVcdFile, buf_1_1_6_fu_444_p3, "buf_1_1_6_fu_444_p3");
    sc_trace(mVcdFile, buf_0_0_3_reg_601, "buf_0_0_3_reg_601");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_339_ap_idle, "grp_aes256_encrypt_ecb_fu_339_ap_idle");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_339_ap_ready, "grp_aes256_encrypt_ecb_fu_339_ap_ready");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_339_ap_done, "grp_aes256_encrypt_ecb_fu_339_ap_done");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_351_ap_idle, "grp_aes256_encrypt_ecb_fu_351_ap_idle");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_351_ap_ready, "grp_aes256_encrypt_ecb_fu_351_ap_ready");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_351_ap_done, "grp_aes256_encrypt_ecb_fu_351_ap_done");
    sc_trace(mVcdFile, ap_block_state9_on_subcall_done, "ap_block_state9_on_subcall_done");
    sc_trace(mVcdFile, buf_0_1_3_reg_607, "buf_0_1_3_reg_607");
    sc_trace(mVcdFile, buf_1_0_3_reg_613, "buf_1_0_3_reg_613");
    sc_trace(mVcdFile, buf_1_1_3_reg_619, "buf_1_1_3_reg_619");
    sc_trace(mVcdFile, j_5_fu_473_p2, "j_5_fu_473_p2");
    sc_trace(mVcdFile, j_5_reg_628, "j_5_reg_628");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_5_fu_479_p1, "tmp_5_fu_479_p1");
    sc_trace(mVcdFile, tmp_5_reg_633, "tmp_5_reg_633");
    sc_trace(mVcdFile, exitcond6_fu_467_p2, "exitcond6_fu_467_p2");
    sc_trace(mVcdFile, tmp_6_fu_483_p2, "tmp_6_fu_483_p2");
    sc_trace(mVcdFile, tmp_6_reg_638, "tmp_6_reg_638");
    sc_trace(mVcdFile, k_3_fu_495_p2, "k_3_fu_495_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_339_ap_start, "grp_aes256_encrypt_ecb_fu_339_ap_start");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_339_k_address0, "grp_aes256_encrypt_ecb_fu_339_k_address0");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_339_k_ce0, "grp_aes256_encrypt_ecb_fu_339_k_ce0");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_339_ap_return_0, "grp_aes256_encrypt_ecb_fu_339_ap_return_0");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_339_ap_return_1, "grp_aes256_encrypt_ecb_fu_339_ap_return_1");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_351_ap_start, "grp_aes256_encrypt_ecb_fu_351_ap_start");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_351_k_address0, "grp_aes256_encrypt_ecb_fu_351_k_address0");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_351_k_ce0, "grp_aes256_encrypt_ecb_fu_351_k_ce0");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_351_ap_return_0, "grp_aes256_encrypt_ecb_fu_351_ap_return_0");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_351_ap_return_1, "grp_aes256_encrypt_ecb_fu_351_ap_return_1");
    sc_trace(mVcdFile, j_reg_83, "j_reg_83");
    sc_trace(mVcdFile, exitcond2_fu_363_p2, "exitcond2_fu_363_p2");
    sc_trace(mVcdFile, buf_1_1_reg_94, "buf_1_1_reg_94");
    sc_trace(mVcdFile, buf_1_0_reg_106, "buf_1_0_reg_106");
    sc_trace(mVcdFile, buf_0_1_reg_118, "buf_0_1_reg_118");
    sc_trace(mVcdFile, buf_0_0_reg_130, "buf_0_0_reg_130");
    sc_trace(mVcdFile, ap_phi_mux_i_2_phi_fu_147_p4, "ap_phi_mux_i_2_phi_fu_147_p4");
    sc_trace(mVcdFile, i_2_reg_142, "i_2_reg_142");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, buf_1_1_1_reg_155, "buf_1_1_1_reg_155");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, buf_1_0_1_reg_166, "buf_1_0_1_reg_166");
    sc_trace(mVcdFile, buf_0_1_1_reg_177, "buf_0_1_1_reg_177");
    sc_trace(mVcdFile, buf_0_0_1_reg_188, "buf_0_0_1_reg_188");
    sc_trace(mVcdFile, j_1_reg_199, "j_1_reg_199");
    sc_trace(mVcdFile, buf_1_1_2_reg_210, "buf_1_1_2_reg_210");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, buf_1_0_2_reg_222, "buf_1_0_2_reg_222");
    sc_trace(mVcdFile, buf_0_1_2_reg_234, "buf_0_1_2_reg_234");
    sc_trace(mVcdFile, buf_0_0_2_reg_246, "buf_0_0_2_reg_246");
    sc_trace(mVcdFile, k_reg_258, "k_reg_258");
    sc_trace(mVcdFile, buf_1_1_2_be_reg_269, "buf_1_1_2_be_reg_269");
    sc_trace(mVcdFile, buf_1_0_2_be_reg_281, "buf_1_0_2_be_reg_281");
    sc_trace(mVcdFile, buf_0_1_2_be_reg_293, "buf_0_1_2_be_reg_293");
    sc_trace(mVcdFile, buf_0_0_2_be_reg_305, "buf_0_0_2_be_reg_305");
    sc_trace(mVcdFile, j_3_reg_317, "j_3_reg_317");
    sc_trace(mVcdFile, exitcond_fu_489_p2, "exitcond_fu_489_p2");
    sc_trace(mVcdFile, k_1_reg_328, "k_1_reg_328");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_339_ap_start_reg, "grp_aes256_encrypt_ecb_fu_339_ap_start_reg");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_351_ap_start_reg, "grp_aes256_encrypt_ecb_fu_351_ap_start_reg");
    sc_trace(mVcdFile, sum_cast_fu_414_p1, "sum_cast_fu_414_p1");
    sc_trace(mVcdFile, sum2_cast_fu_530_p1, "sum2_cast_fu_530_p1");
    sc_trace(mVcdFile, tmp7_fu_409_p2, "tmp7_fu_409_p2");
    sc_trace(mVcdFile, tmp_9_fu_501_p1, "tmp_9_fu_501_p1");
    sc_trace(mVcdFile, buf_1_load_phi_fu_505_p3, "buf_1_load_phi_fu_505_p3");
    sc_trace(mVcdFile, buf_0_load_phi_fu_511_p3, "buf_0_load_phi_fu_511_p3");
    sc_trace(mVcdFile, tmp8_fu_525_p2, "tmp8_fu_525_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

workload::~workload() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete local_key_0_U;
    delete local_key_1_U;
    delete grp_aes256_encrypt_ecb_fu_339;
    delete grp_aes256_encrypt_ecb_fu_351;
}

void workload::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(exitcond5_fu_397_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        buf_0_0_1_reg_188 = buf_0_0_2_reg_246.read();
    } else if ((esl_seteq<1,1,1>(ap_phi_mux_i_2_phi_fu_147_p4.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        buf_0_0_1_reg_188 = buf_0_0_reg_130.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        if (esl_seteq<1,1,1>(tmp_1_reg_551.read(), ap_const_lv1_0)) {
            buf_0_0_2_be_reg_305 = buf_1_1_8_fu_430_p3.read();
        } else if (esl_seteq<1,1,1>(tmp_1_reg_551.read(), ap_const_lv1_1)) {
            buf_0_0_2_be_reg_305 = buf_0_0_2_reg_246.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        buf_0_0_2_reg_246 = buf_0_0_2_be_reg_305.read();
    } else if ((esl_seteq<1,1,1>(exitcond3_fu_375_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        buf_0_0_2_reg_246 = buf_0_0_1_reg_188.read();
    }
    if ((esl_seteq<1,1,1>(exitcond5_fu_397_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        buf_0_1_1_reg_177 = buf_0_1_2_reg_234.read();
    } else if ((esl_seteq<1,1,1>(ap_phi_mux_i_2_phi_fu_147_p4.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        buf_0_1_1_reg_177 = buf_0_1_reg_118.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        if (esl_seteq<1,1,1>(tmp_1_reg_551.read(), ap_const_lv1_0)) {
            buf_0_1_2_be_reg_293 = buf_1_1_7_fu_423_p3.read();
        } else if (esl_seteq<1,1,1>(tmp_1_reg_551.read(), ap_const_lv1_1)) {
            buf_0_1_2_be_reg_293 = buf_0_1_2_reg_234.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        buf_0_1_2_reg_234 = buf_0_1_2_be_reg_293.read();
    } else if ((esl_seteq<1,1,1>(exitcond3_fu_375_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        buf_0_1_2_reg_234 = buf_0_1_1_reg_177.read();
    }
    if ((esl_seteq<1,1,1>(exitcond5_fu_397_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        buf_1_0_1_reg_166 = buf_1_0_2_reg_222.read();
    } else if ((esl_seteq<1,1,1>(ap_phi_mux_i_2_phi_fu_147_p4.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        buf_1_0_1_reg_166 = buf_1_0_reg_106.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        if (esl_seteq<1,1,1>(tmp_1_reg_551.read(), ap_const_lv1_0)) {
            buf_1_0_2_be_reg_281 = buf_1_0_2_reg_222.read();
        } else if (esl_seteq<1,1,1>(tmp_1_reg_551.read(), ap_const_lv1_1)) {
            buf_1_0_2_be_reg_281 = buf_1_1_6_fu_444_p3.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        buf_1_0_2_reg_222 = buf_1_0_2_be_reg_281.read();
    } else if ((esl_seteq<1,1,1>(exitcond3_fu_375_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        buf_1_0_2_reg_222 = buf_1_0_1_reg_166.read();
    }
    if ((esl_seteq<1,1,1>(exitcond5_fu_397_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        buf_1_1_1_reg_155 = buf_1_1_2_reg_210.read();
    } else if ((esl_seteq<1,1,1>(ap_phi_mux_i_2_phi_fu_147_p4.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        buf_1_1_1_reg_155 = buf_1_1_reg_94.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        if (esl_seteq<1,1,1>(tmp_1_reg_551.read(), ap_const_lv1_0)) {
            buf_1_1_2_be_reg_269 = buf_1_1_2_reg_210.read();
        } else if (esl_seteq<1,1,1>(tmp_1_reg_551.read(), ap_const_lv1_1)) {
            buf_1_1_2_be_reg_269 = buf_1_1_4_fu_437_p3.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        buf_1_1_2_reg_210 = buf_1_1_2_be_reg_269.read();
    } else if ((esl_seteq<1,1,1>(exitcond3_fu_375_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        buf_1_1_2_reg_210 = buf_1_1_1_reg_155.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_aes256_encrypt_ecb_fu_339_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(exitcond3_fu_375_p2.read(), ap_const_lv1_1) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
            grp_aes256_encrypt_ecb_fu_339_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_aes256_encrypt_ecb_fu_339_ap_ready.read())) {
            grp_aes256_encrypt_ecb_fu_339_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_aes256_encrypt_ecb_fu_351_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(exitcond3_fu_375_p2.read(), ap_const_lv1_1) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
            grp_aes256_encrypt_ecb_fu_351_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_aes256_encrypt_ecb_fu_351_ap_ready.read())) {
            grp_aes256_encrypt_ecb_fu_351_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_2_reg_142 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(exitcond6_fu_467_p2.read(), ap_const_lv1_1))) {
        i_2_reg_142 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(exitcond5_fu_397_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        j_1_reg_199 = j_4_reg_546.read();
    } else if ((esl_seteq<1,1,1>(ap_phi_mux_i_2_phi_fu_147_p4.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        j_1_reg_199 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state9_on_subcall_done.read()))) {
        j_3_reg_317 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_489_p2.read(), ap_const_lv1_1))) {
        j_3_reg_317 = j_5_reg_628.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_reg_83 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(exitcond2_fu_363_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        j_reg_83 = j_2_fu_369_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_489_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        k_1_reg_328 = k_3_fu_495_p2.read();
    } else if ((esl_seteq<1,1,1>(exitcond6_fu_467_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        k_1_reg_328 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        k_reg_258 = k_2_reg_563.read();
    } else if ((esl_seteq<1,1,1>(exitcond3_fu_375_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        k_reg_258 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state9_on_subcall_done.read()))) {
        buf_0_0_3_reg_601 = grp_aes256_encrypt_ecb_fu_339_ap_return_0.read();
        buf_0_1_3_reg_607 = grp_aes256_encrypt_ecb_fu_339_ap_return_1.read();
        buf_1_0_3_reg_613 = grp_aes256_encrypt_ecb_fu_351_ap_return_0.read();
        buf_1_1_3_reg_619 = grp_aes256_encrypt_ecb_fu_351_ap_return_1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(exitcond6_fu_467_p2.read(), ap_const_lv1_1))) {
        buf_0_0_reg_130 = buf_0_0_3_reg_601.read();
        buf_0_1_reg_118 = buf_0_1_3_reg_607.read();
        buf_1_0_reg_106 = buf_1_0_3_reg_613.read();
        buf_1_1_reg_94 = buf_1_1_3_reg_619.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_4_reg_546 = j_4_fu_381_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        j_5_reg_628 = j_5_fu_473_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        k_2_reg_563 = k_2_fu_403_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_fu_375_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        tmp_1_reg_551 = tmp_1_fu_387_p1.read();
        tmp_4_reg_555 = tmp_4_fu_391_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond6_fu_467_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        tmp_5_reg_633 = tmp_5_fu_479_p1.read();
        tmp_6_reg_638 = tmp_6_fu_483_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond5_fu_397_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        tmp_7_reg_573 = tmp_7_fu_419_p1.read();
    }
}

void workload::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void workload::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void workload::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void workload::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void workload::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void workload::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void workload::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void workload::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void workload::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void workload::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void workload::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void workload::thread_ap_block_state9_on_subcall_done() {
    ap_block_state9_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_aes256_encrypt_ecb_fu_339_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_aes256_encrypt_ecb_fu_351_ap_done.read()));
}

void workload::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_phi_mux_i_2_phi_fu_147_p4.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void workload::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void workload::thread_ap_phi_mux_i_2_phi_fu_147_p4() {
    ap_phi_mux_i_2_phi_fu_147_p4 = i_2_reg_142.read();
}

void workload::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_phi_mux_i_2_phi_fu_147_p4.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void workload::thread_buf_0_load_phi_fu_511_p3() {
    buf_0_load_phi_fu_511_p3 = (!tmp_9_fu_501_p1.read()[0].is_01())? sc_lv<8>(): ((tmp_9_fu_501_p1.read()[0].to_bool())? buf_0_1_3_reg_607.read(): buf_0_0_3_reg_601.read());
}

void workload::thread_buf_1_1_4_fu_437_p3() {
    buf_1_1_4_fu_437_p3 = (!tmp_7_reg_573.read()[0].is_01())? sc_lv<8>(): ((tmp_7_reg_573.read()[0].to_bool())? data_q0.read(): buf_1_1_2_reg_210.read());
}

void workload::thread_buf_1_1_6_fu_444_p3() {
    buf_1_1_6_fu_444_p3 = (!tmp_7_reg_573.read()[0].is_01())? sc_lv<8>(): ((tmp_7_reg_573.read()[0].to_bool())? buf_1_0_2_reg_222.read(): data_q0.read());
}

void workload::thread_buf_1_1_7_fu_423_p3() {
    buf_1_1_7_fu_423_p3 = (!tmp_7_reg_573.read()[0].is_01())? sc_lv<8>(): ((tmp_7_reg_573.read()[0].to_bool())? data_q0.read(): buf_0_1_2_reg_234.read());
}

void workload::thread_buf_1_1_8_fu_430_p3() {
    buf_1_1_8_fu_430_p3 = (!tmp_7_reg_573.read()[0].is_01())? sc_lv<8>(): ((tmp_7_reg_573.read()[0].to_bool())? buf_0_0_2_reg_246.read(): data_q0.read());
}

void workload::thread_buf_1_load_phi_fu_505_p3() {
    buf_1_load_phi_fu_505_p3 = (!tmp_9_fu_501_p1.read()[0].is_01())? sc_lv<8>(): ((tmp_9_fu_501_p1.read()[0].to_bool())? buf_1_1_3_reg_619.read(): buf_1_0_3_reg_613.read());
}

void workload::thread_data_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_address0 =  (sc_lv<4>) (sum2_cast_fu_530_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_address0 =  (sc_lv<4>) (sum_cast_fu_414_p1.read());
    } else {
        data_address0 = "XXXX";
    }
}

void workload::thread_data_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        data_ce0 = ap_const_logic_1;
    } else {
        data_ce0 = ap_const_logic_0;
    }
}

void workload::thread_data_d0() {
    data_d0 = (!tmp_5_reg_633.read()[0].is_01())? sc_lv<8>(): ((tmp_5_reg_633.read()[0].to_bool())? buf_1_load_phi_fu_505_p3.read(): buf_0_load_phi_fu_511_p3.read());
}

void workload::thread_data_we0() {
    if ((esl_seteq<1,1,1>(exitcond_fu_489_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        data_we0 = ap_const_logic_1;
    } else {
        data_we0 = ap_const_logic_0;
    }
}

void workload::thread_exitcond2_fu_363_p2() {
    exitcond2_fu_363_p2 = (!j_reg_83.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_83.read() == ap_const_lv6_20);
}

void workload::thread_exitcond3_fu_375_p2() {
    exitcond3_fu_375_p2 = (!j_1_reg_199.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_199.read() == ap_const_lv2_2);
}

void workload::thread_exitcond5_fu_397_p2() {
    exitcond5_fu_397_p2 = (!k_reg_258.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_258.read() == ap_const_lv2_2);
}

void workload::thread_exitcond6_fu_467_p2() {
    exitcond6_fu_467_p2 = (!j_3_reg_317.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(j_3_reg_317.read() == ap_const_lv2_2);
}

void workload::thread_exitcond_fu_489_p2() {
    exitcond_fu_489_p2 = (!k_1_reg_328.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(k_1_reg_328.read() == ap_const_lv2_2);
}

void workload::thread_grp_aes256_encrypt_ecb_fu_339_ap_start() {
    grp_aes256_encrypt_ecb_fu_339_ap_start = grp_aes256_encrypt_ecb_fu_339_ap_start_reg.read();
}

void workload::thread_grp_aes256_encrypt_ecb_fu_351_ap_start() {
    grp_aes256_encrypt_ecb_fu_351_ap_start = grp_aes256_encrypt_ecb_fu_351_ap_start_reg.read();
}

void workload::thread_j_2_fu_369_p2() {
    j_2_fu_369_p2 = (!j_reg_83.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_reg_83.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void workload::thread_j_4_fu_381_p2() {
    j_4_fu_381_p2 = (!j_1_reg_199.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j_1_reg_199.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void workload::thread_j_5_fu_473_p2() {
    j_5_fu_473_p2 = (!j_3_reg_317.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j_3_reg_317.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void workload::thread_k_2_fu_403_p2() {
    k_2_fu_403_p2 = (!k_reg_258.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(k_reg_258.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void workload::thread_k_3_fu_495_p2() {
    k_3_fu_495_p2 = (!k_1_reg_328.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(k_1_reg_328.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void workload::thread_sum2_cast_fu_530_p1() {
    sum2_cast_fu_530_p1 = esl_zext<64,2>(tmp8_fu_525_p2.read());
}

void workload::thread_sum_cast_fu_414_p1() {
    sum_cast_fu_414_p1 = esl_zext<64,2>(tmp7_fu_409_p2.read());
}

void workload::thread_tmp7_fu_409_p2() {
    tmp7_fu_409_p2 = (!k_reg_258.read().is_01() || !tmp_4_reg_555.read().is_01())? sc_lv<2>(): (sc_biguint<2>(k_reg_258.read()) + sc_biguint<2>(tmp_4_reg_555.read()));
}

void workload::thread_tmp8_fu_525_p2() {
    tmp8_fu_525_p2 = (!k_1_reg_328.read().is_01() || !tmp_6_reg_638.read().is_01())? sc_lv<2>(): (sc_biguint<2>(k_1_reg_328.read()) + sc_biguint<2>(tmp_6_reg_638.read()));
}

void workload::thread_tmp_1_fu_387_p1() {
    tmp_1_fu_387_p1 = j_1_reg_199.read().range(1-1, 0);
}

void workload::thread_tmp_4_fu_391_p2() {
    tmp_4_fu_391_p2 = (!ap_const_lv2_1.is_01())? sc_lv<2>(): j_1_reg_199.read() << (unsigned short)ap_const_lv2_1.to_uint();
}

void workload::thread_tmp_5_fu_479_p1() {
    tmp_5_fu_479_p1 = j_3_reg_317.read().range(1-1, 0);
}

void workload::thread_tmp_6_fu_483_p2() {
    tmp_6_fu_483_p2 = (!ap_const_lv2_1.is_01())? sc_lv<2>(): j_3_reg_317.read() << (unsigned short)ap_const_lv2_1.to_uint();
}

void workload::thread_tmp_7_fu_419_p1() {
    tmp_7_fu_419_p1 = k_reg_258.read().range(1-1, 0);
}

void workload::thread_tmp_9_fu_501_p1() {
    tmp_9_fu_501_p1 = k_1_reg_328.read().range(1-1, 0);
}

void workload::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond2_fu_363_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_phi_mux_i_2_phi_fu_147_p4.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(exitcond3_fu_375_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(exitcond5_fu_397_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state9_on_subcall_done.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(exitcond6_fu_467_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(exitcond_fu_489_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

}

