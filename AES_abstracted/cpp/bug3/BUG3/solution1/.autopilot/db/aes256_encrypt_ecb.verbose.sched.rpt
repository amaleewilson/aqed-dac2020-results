

================================================================
== Vivado HLS Report for 'aes256_encrypt_ecb'
================================================================
* Date:           Wed Apr 15 21:17:12 2020

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        BUG3
* Solution:       solution1
* Product family: aartix7
* Target device:  xa7a12tcsg325-1q


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  50.00|     9.254|        6.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   46|   46|   46|   46|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- ecb1    |   32|   32|         2|          1|          1|    32|    yes   |
        |- cpkey   |    2|    2|         2|          1|          1|     2|    yes   |
        |- sub     |    2|    2|         2|          1|          1|     2|    yes   |
        |- addkey  |    2|    2|         2|          1|          1|     2|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2
  * Pipeline-1: initiation interval (II) = 1, depth = 2
  * Pipeline-2: initiation interval (II) = 1, depth = 2
  * Pipeline-3: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 4
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
  Pipeline-1 : II = 1, D = 2, States = { 5 6 }
  Pipeline-2 : II = 1, D = 2, States = { 8 9 }
  Pipeline-3 : II = 1, D = 2, States = { 11 12 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	4  / (tmp)
	3  / (!tmp)
3 --> 
	2  / true
4 --> 
	5  / true
5 --> 
	7  / (tmp_i)
	6  / (!tmp_i)
6 --> 
	5  / true
7 --> 
	8  / true
8 --> 
	10  / (tmp_i2)
	9  / (!tmp_i2)
9 --> 
	8  / true
10 --> 
	11  / true
11 --> 
	13  / (tmp_i8)
	12  / (!tmp_i8)
12 --> 
	11  / true
13 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.66>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%p_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %p_read1)"   --->   Operation 14 'read' 'p_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%p_read_2 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %p_read)"   --->   Operation 15 'read' 'p_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%ctx_body_key = alloca [32 x i1], align 1" [buf4bug3.cpp:202]   --->   Operation 16 'alloca' 'ctx_body_key' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 32> <RAM>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%ctx_body_enckey = alloca [32 x i1], align 1" [buf4bug3.cpp:202]   --->   Operation 17 'alloca' 'ctx_body_enckey' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 32> <RAM>
ST_1 : Operation 18 [1/1] (1.66ns)   --->   "br label %1" [buf4bug3.cpp:208]   --->   Operation 18 'br' <Predicate = true> <Delay = 1.66>

State 2 <SV = 1> <Delay = 2.15>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%i = phi i6 [ 0, %0 ], [ %i_1, %branch0 ]"   --->   Operation 19 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (1.45ns)   --->   "%tmp = icmp eq i6 %i, -32" [buf4bug3.cpp:208]   --->   Operation 20 'icmp' 'tmp' <Predicate = true> <Delay = 1.45> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32)"   --->   Operation 21 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (1.94ns)   --->   "%i_1 = add i6 %i, 1" [buf4bug3.cpp:208]   --->   Operation 22 'add' 'i_1' <Predicate = true> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.58> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "br i1 %tmp, label %.preheader.preheader, label %branch0" [buf4bug3.cpp:208]   --->   Operation 23 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%tmp_s = zext i6 %i to i64" [buf4bug3.cpp:210]   --->   Operation 24 'zext' 'tmp_s' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%k_addr = getelementptr [32 x i1]* %k, i64 0, i64 %tmp_s" [buf4bug3.cpp:210]   --->   Operation 25 'getelementptr' 'k_addr' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 26 [2/2] (2.15ns)   --->   "%k_load = load i1* %k_addr, align 1" [buf4bug3.cpp:210]   --->   Operation 26 'load' 'k_load' <Predicate = (!tmp)> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 32> <RAM>

State 3 <SV = 2> <Delay = 4.30>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([5 x i8]* @p_str7) nounwind" [buf4bug3.cpp:208]   --->   Operation 27 'specloopname' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%tmp_8 = call i32 (...)* @_ssdm_op_SpecRegionBegin([5 x i8]* @p_str7) nounwind" [buf4bug3.cpp:208]   --->   Operation 28 'specregionbegin' 'tmp_8' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [buf4bug3.cpp:209]   --->   Operation 29 'specpipeline' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 30 [1/2] (2.15ns)   --->   "%k_load = load i1* %k_addr, align 1" [buf4bug3.cpp:210]   --->   Operation 30 'load' 'k_load' <Predicate = (!tmp)> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 32> <RAM>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%ctx_body_enckey_addr = getelementptr [32 x i1]* %ctx_body_enckey, i64 0, i64 %tmp_s" [buf4bug3.cpp:210]   --->   Operation 31 'getelementptr' 'ctx_body_enckey_addr' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (2.15ns)   --->   "store i1 %k_load, i1* %ctx_body_enckey_addr, align 1" [buf4bug3.cpp:210]   --->   Operation 32 'store' <Predicate = (!tmp)> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 32> <RAM>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([5 x i8]* @p_str7, i32 %tmp_8) nounwind" [buf4bug3.cpp:211]   --->   Operation 33 'specregionend' 'empty_9' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "br label %1" [buf4bug3.cpp:208]   --->   Operation 34 'br' <Predicate = (!tmp)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 1.66>
ST_4 : Operation 35 [1/1] (1.66ns)   --->   "br label %.preheader" [buf4bug3.cpp:137->buf4bug3.cpp:217]   --->   Operation 35 'br' <Predicate = true> <Delay = 1.66>

State 5 <SV = 3> <Delay = 4.83>
ST_5 : Operation 36 [1/1] (0.00ns)   --->   "%buf = phi i8 [ %buf_1, %branch1.i_ifconv ], [ %p_read_2, %.preheader.preheader ]" [buf4bug3.cpp:139->buf4bug3.cpp:217]   --->   Operation 36 'phi' 'buf' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 37 [1/1] (0.00ns)   --->   "%buf1 = phi i8 [ %buf13_1, %branch1.i_ifconv ], [ %p_read_1, %.preheader.preheader ]" [buf4bug3.cpp:139->buf4bug3.cpp:217]   --->   Operation 37 'phi' 'buf1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 38 [1/1] (0.00ns)   --->   "%i_i = phi i2 [ %i_2, %branch1.i_ifconv ], [ -2, %.preheader.preheader ]"   --->   Operation 38 'phi' 'i_i' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 39 [1/1] (0.93ns)   --->   "%tmp_i = icmp eq i2 %i_i, 0" [buf4bug3.cpp:137->buf4bug3.cpp:217]   --->   Operation 39 'icmp' 'tmp_i' <Predicate = true> <Delay = 0.93> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 40 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 40 'speclooptripcount' 'empty_10' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 41 [1/1] (0.00ns)   --->   "br i1 %tmp_i, label %aes_addRoundKey_cpy.exit.preheader, label %branch1.i_ifconv" [buf4bug3.cpp:137->buf4bug3.cpp:217]   --->   Operation 41 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 42 [1/1] (1.58ns)   --->   "%i_2 = add i2 %i_i, -1" [buf4bug3.cpp:137->buf4bug3.cpp:217]   --->   Operation 42 'add' 'i_2' <Predicate = (!tmp_i)> <Delay = 1.58> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.58> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 43 [1/1] (0.00ns)   --->   "%i_2_cast = sext i2 %i_2 to i8" [buf4bug3.cpp:137->buf4bug3.cpp:217]   --->   Operation 43 'sext' 'i_2_cast' <Predicate = (!tmp_i)> <Delay = 0.00>
ST_5 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_i_11 = zext i8 %i_2_cast to i64" [buf4bug3.cpp:139->buf4bug3.cpp:217]   --->   Operation 44 'zext' 'tmp_i_11' <Predicate = (!tmp_i)> <Delay = 0.00>
ST_5 : Operation 45 [1/1] (0.00ns)   --->   "%ctx_body_enckey_addr_1 = getelementptr [32 x i1]* %ctx_body_enckey, i64 0, i64 %tmp_i_11" [buf4bug3.cpp:139->buf4bug3.cpp:217]   --->   Operation 45 'getelementptr' 'ctx_body_enckey_addr_1' <Predicate = (!tmp_i)> <Delay = 0.00>
ST_5 : Operation 46 [2/2] (2.15ns)   --->   "%ctx_body_enckey_load = load i1* %ctx_body_enckey_addr_1, align 1" [buf4bug3.cpp:139->buf4bug3.cpp:217]   --->   Operation 46 'load' 'ctx_body_enckey_load' <Predicate = (!tmp_i)> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 32> <RAM>
ST_5 : Operation 47 [1/1] (0.93ns)   --->   "%cond = icmp eq i2 %i_i, 1" [buf4bug3.cpp:139->buf4bug3.cpp:217]   --->   Operation 47 'icmp' 'cond' <Predicate = (!tmp_i)> <Delay = 0.93> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_31_i_cast = sext i2 %i_2 to i5" [buf4bug3.cpp:139->buf4bug3.cpp:217]   --->   Operation 48 'sext' 'tmp_31_i_cast' <Predicate = (!tmp_i)> <Delay = 0.00>
ST_5 : Operation 49 [1/1] (1.10ns)   --->   "%tmp_32_i = xor i5 %tmp_31_i_cast, -16" [buf4bug3.cpp:139->buf4bug3.cpp:217]   --->   Operation 49 'xor' 'tmp_32_i' <Predicate = (!tmp_i)> <Delay = 1.10> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.04> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_33_i = zext i5 %tmp_32_i to i64" [buf4bug3.cpp:139->buf4bug3.cpp:217]   --->   Operation 50 'zext' 'tmp_33_i' <Predicate = (!tmp_i)> <Delay = 0.00>
ST_5 : Operation 51 [1/1] (0.00ns)   --->   "%ctx_body_enckey_addr_2 = getelementptr [32 x i1]* %ctx_body_enckey, i64 0, i64 %tmp_33_i" [buf4bug3.cpp:139->buf4bug3.cpp:217]   --->   Operation 51 'getelementptr' 'ctx_body_enckey_addr_2' <Predicate = (!tmp_i)> <Delay = 0.00>
ST_5 : Operation 52 [2/2] (2.15ns)   --->   "%ctx_body_enckey_load_1 = load i1* %ctx_body_enckey_addr_2, align 1" [buf4bug3.cpp:139->buf4bug3.cpp:217]   --->   Operation 52 'load' 'ctx_body_enckey_load_1' <Predicate = (!tmp_i)> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 32> <RAM>

State 6 <SV = 4> <Delay = 4.89>
ST_6 : Operation 53 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str3) nounwind" [buf4bug3.cpp:137->buf4bug3.cpp:217]   --->   Operation 53 'specloopname' <Predicate = (!tmp_i)> <Delay = 0.00>
ST_6 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_6_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([6 x i8]* @p_str3)" [buf4bug3.cpp:137->buf4bug3.cpp:217]   --->   Operation 54 'specregionbegin' 'tmp_6_i' <Predicate = (!tmp_i)> <Delay = 0.00>
ST_6 : Operation 55 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [buf4bug3.cpp:138->buf4bug3.cpp:217]   --->   Operation 55 'specpipeline' <Predicate = (!tmp_i)> <Delay = 0.00>
ST_6 : Operation 56 [1/2] (2.15ns)   --->   "%ctx_body_enckey_load = load i1* %ctx_body_enckey_addr_1, align 1" [buf4bug3.cpp:139->buf4bug3.cpp:217]   --->   Operation 56 'load' 'ctx_body_enckey_load' <Predicate = (!tmp_i)> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 32> <RAM>
ST_6 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node tmp_30_i)   --->   "%extLd = zext i1 %ctx_body_enckey_load to i8" [buf4bug3.cpp:139->buf4bug3.cpp:217]   --->   Operation 57 'zext' 'extLd' <Predicate = (!tmp_i)> <Delay = 0.00>
ST_6 : Operation 58 [1/1] (0.00ns)   --->   "%ctx_body_key_addr = getelementptr [32 x i1]* %ctx_body_key, i64 0, i64 %tmp_i_11" [buf4bug3.cpp:139->buf4bug3.cpp:217]   --->   Operation 58 'getelementptr' 'ctx_body_key_addr' <Predicate = (!tmp_i)> <Delay = 0.00>
ST_6 : Operation 59 [1/1] (2.15ns)   --->   "store i1 %ctx_body_enckey_load, i1* %ctx_body_key_addr, align 1" [buf4bug3.cpp:139->buf4bug3.cpp:217]   --->   Operation 59 'store' <Predicate = (!tmp_i)> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 32> <RAM>
ST_6 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node tmp_30_i)   --->   "%buf_load_i_phi = select i1 %cond, i8 %buf, i8 %buf1" [buf4bug3.cpp:139->buf4bug3.cpp:217]   --->   Operation 60 'select' 'buf_load_i_phi' <Predicate = (!tmp_i)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 61 [1/1] (1.37ns) (out node of the LUT)   --->   "%tmp_30_i = xor i8 %extLd, %buf_load_i_phi" [buf4bug3.cpp:139->buf4bug3.cpp:217]   --->   Operation 61 'xor' 'tmp_30_i' <Predicate = (!tmp_i)> <Delay = 1.37> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.04> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 62 [1/1] (1.37ns)   --->   "%buf_1 = select i1 %cond, i8 %tmp_30_i, i8 %buf" [buf4bug3.cpp:139->buf4bug3.cpp:217]   --->   Operation 62 'select' 'buf_1' <Predicate = (!tmp_i)> <Delay = 1.37> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 63 [1/1] (1.37ns)   --->   "%buf13_1 = select i1 %cond, i8 %buf1, i8 %tmp_30_i" [buf4bug3.cpp:139->buf4bug3.cpp:217]   --->   Operation 63 'select' 'buf13_1' <Predicate = (!tmp_i)> <Delay = 1.37> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 64 [1/2] (2.15ns)   --->   "%ctx_body_enckey_load_1 = load i1* %ctx_body_enckey_addr_2, align 1" [buf4bug3.cpp:139->buf4bug3.cpp:217]   --->   Operation 64 'load' 'ctx_body_enckey_load_1' <Predicate = (!tmp_i)> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 32> <RAM>
ST_6 : Operation 65 [1/1] (0.00ns)   --->   "%ctx_body_key_addr_1 = getelementptr [32 x i1]* %ctx_body_key, i64 0, i64 %tmp_33_i" [buf4bug3.cpp:139->buf4bug3.cpp:217]   --->   Operation 65 'getelementptr' 'ctx_body_key_addr_1' <Predicate = (!tmp_i)> <Delay = 0.00>
ST_6 : Operation 66 [1/1] (2.15ns)   --->   "store i1 %ctx_body_enckey_load_1, i1* %ctx_body_key_addr_1, align 1" [buf4bug3.cpp:139->buf4bug3.cpp:217]   --->   Operation 66 'store' <Predicate = (!tmp_i)> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 32> <RAM>
ST_6 : Operation 67 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecRegionEnd([6 x i8]* @p_str3, i32 %tmp_6_i)" [buf4bug3.cpp:140->buf4bug3.cpp:217]   --->   Operation 67 'specregionend' 'empty_12' <Predicate = (!tmp_i)> <Delay = 0.00>
ST_6 : Operation 68 [1/1] (0.00ns)   --->   "br label %.preheader" [buf4bug3.cpp:140->buf4bug3.cpp:217]   --->   Operation 68 'br' <Predicate = (!tmp_i)> <Delay = 0.00>

State 7 <SV = 4> <Delay = 1.66>
ST_7 : Operation 69 [1/1] (1.66ns)   --->   "br label %aes_addRoundKey_cpy.exit" [buf4bug3.cpp:115->buf4bug3.cpp:226]   --->   Operation 69 'br' <Predicate = true> <Delay = 1.66>

State 8 <SV = 5> <Delay = 5.56>
ST_8 : Operation 70 [1/1] (0.00ns)   --->   "%buf_2 = phi i8 [ %buf_3, %branch1.i6_ifconv ], [ %buf, %aes_addRoundKey_cpy.exit.preheader ]" [buf4bug3.cpp:117->buf4bug3.cpp:226]   --->   Operation 70 'phi' 'buf_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 71 [1/1] (0.00ns)   --->   "%buf13_2 = phi i8 [ %buf13_3, %branch1.i6_ifconv ], [ %buf1, %aes_addRoundKey_cpy.exit.preheader ]" [buf4bug3.cpp:117->buf4bug3.cpp:226]   --->   Operation 71 'phi' 'buf13_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 72 [1/1] (0.00ns)   --->   "%i_i1 = phi i2 [ %i_3, %branch1.i6_ifconv ], [ -2, %aes_addRoundKey_cpy.exit.preheader ]"   --->   Operation 72 'phi' 'i_i1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 73 [1/1] (0.93ns)   --->   "%tmp_i2 = icmp eq i2 %i_i1, 0" [buf4bug3.cpp:115->buf4bug3.cpp:226]   --->   Operation 73 'icmp' 'tmp_i2' <Predicate = true> <Delay = 0.93> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 74 [1/1] (0.00ns)   --->   "%empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 74 'speclooptripcount' 'empty_13' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 75 [1/1] (0.00ns)   --->   "br i1 %tmp_i2, label %aes_subBytes.exit.preheader, label %branch1.i6_ifconv" [buf4bug3.cpp:115->buf4bug3.cpp:226]   --->   Operation 75 'br' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 76 [1/1] (1.58ns)   --->   "%i_3 = add i2 %i_i1, -1" [buf4bug3.cpp:115->buf4bug3.cpp:226]   --->   Operation 76 'add' 'i_3' <Predicate = (!tmp_i2)> <Delay = 1.58> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.58> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 77 [1/1] (0.93ns)   --->   "%cond1 = icmp eq i2 %i_i1, 1" [buf4bug3.cpp:117->buf4bug3.cpp:226]   --->   Operation 77 'icmp' 'cond1' <Predicate = (!tmp_i2)> <Delay = 0.93> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 78 [1/1] (1.37ns)   --->   "%buf_load_i5_phi = select i1 %cond1, i8 %buf_2, i8 %buf13_2" [buf4bug3.cpp:117->buf4bug3.cpp:226]   --->   Operation 78 'select' 'buf_load_i5_phi' <Predicate = (!tmp_i2)> <Delay = 1.37> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_29_i = zext i8 %buf_load_i5_phi to i64" [buf4bug3.cpp:117->buf4bug3.cpp:226]   --->   Operation 79 'zext' 'tmp_29_i' <Predicate = (!tmp_i2)> <Delay = 0.00>
ST_8 : Operation 80 [1/1] (0.00ns)   --->   "%sbox_addr = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %tmp_29_i" [buf4bug3.cpp:117->buf4bug3.cpp:226]   --->   Operation 80 'getelementptr' 'sbox_addr' <Predicate = (!tmp_i2)> <Delay = 0.00>
ST_8 : Operation 81 [2/2] (3.25ns)   --->   "%sbox_load = load i8* %sbox_addr, align 1" [buf4bug3.cpp:117->buf4bug3.cpp:226]   --->   Operation 81 'load' 'sbox_load' <Predicate = (!tmp_i2)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>

State 9 <SV = 6> <Delay = 9.25>
ST_9 : Operation 82 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str) nounwind" [buf4bug3.cpp:115->buf4bug3.cpp:226]   --->   Operation 82 'specloopname' <Predicate = (!tmp_i2)> <Delay = 0.00>
ST_9 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_5_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str) nounwind" [buf4bug3.cpp:115->buf4bug3.cpp:226]   --->   Operation 83 'specregionbegin' 'tmp_5_i' <Predicate = (!tmp_i2)> <Delay = 0.00>
ST_9 : Operation 84 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [buf4bug3.cpp:116->buf4bug3.cpp:226]   --->   Operation 84 'specpipeline' <Predicate = (!tmp_i2)> <Delay = 0.00>
ST_9 : Operation 85 [1/2] (3.25ns)   --->   "%sbox_load = load i8* %sbox_addr, align 1" [buf4bug3.cpp:117->buf4bug3.cpp:226]   --->   Operation 85 'load' 'sbox_load' <Predicate = (!tmp_i2)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_9 : Operation 86 [1/1] (1.37ns)   --->   "%buf_3 = select i1 %cond1, i8 %sbox_load, i8 %buf_2" [buf4bug3.cpp:117->buf4bug3.cpp:226]   --->   Operation 86 'select' 'buf_3' <Predicate = (!tmp_i2)> <Delay = 1.37> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 87 [1/1] (1.37ns)   --->   "%buf13_3 = select i1 %cond1, i8 %buf13_2, i8 %sbox_load" [buf4bug3.cpp:117->buf4bug3.cpp:226]   --->   Operation 87 'select' 'buf13_3' <Predicate = (!tmp_i2)> <Delay = 1.37> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 88 [1/1] (0.00ns)   --->   "%empty_14 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str, i32 %tmp_5_i) nounwind" [buf4bug3.cpp:118->buf4bug3.cpp:226]   --->   Operation 88 'specregionend' 'empty_14' <Predicate = (!tmp_i2)> <Delay = 0.00>
ST_9 : Operation 89 [1/1] (0.00ns)   --->   "br label %aes_addRoundKey_cpy.exit" [buf4bug3.cpp:118->buf4bug3.cpp:226]   --->   Operation 89 'br' <Predicate = (!tmp_i2)> <Delay = 0.00>

State 10 <SV = 6> <Delay = 1.66>
ST_10 : Operation 90 [1/1] (1.66ns)   --->   "br label %aes_subBytes.exit" [buf4bug3.cpp:126->buf4bug3.cpp:229]   --->   Operation 90 'br' <Predicate = true> <Delay = 1.66>

State 11 <SV = 7> <Delay = 3.73>
ST_11 : Operation 91 [1/1] (0.00ns)   --->   "%buf_4 = phi i8 [ %buf_5, %branch1.i14_ifconv ], [ %buf_2, %aes_subBytes.exit.preheader ]" [buf4bug3.cpp:128->buf4bug3.cpp:229]   --->   Operation 91 'phi' 'buf_4' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 92 [1/1] (0.00ns)   --->   "%buf13_4 = phi i8 [ %buf13_5, %branch1.i14_ifconv ], [ %buf13_2, %aes_subBytes.exit.preheader ]" [buf4bug3.cpp:128->buf4bug3.cpp:229]   --->   Operation 92 'phi' 'buf13_4' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 93 [1/1] (0.00ns)   --->   "%i_i7 = phi i2 [ %i_4, %branch1.i14_ifconv ], [ -2, %aes_subBytes.exit.preheader ]"   --->   Operation 93 'phi' 'i_i7' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 94 [1/1] (0.93ns)   --->   "%tmp_i8 = icmp eq i2 %i_i7, 0" [buf4bug3.cpp:126->buf4bug3.cpp:229]   --->   Operation 94 'icmp' 'tmp_i8' <Predicate = true> <Delay = 0.93> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 95 [1/1] (0.00ns)   --->   "%empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 95 'speclooptripcount' 'empty_15' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 96 [1/1] (0.00ns)   --->   "br i1 %tmp_i8, label %aes_addRoundKey.exit, label %branch1.i14_ifconv" [buf4bug3.cpp:126->buf4bug3.cpp:229]   --->   Operation 96 'br' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 97 [1/1] (1.58ns)   --->   "%i_4 = add i2 %i_i7, -1" [buf4bug3.cpp:126->buf4bug3.cpp:229]   --->   Operation 97 'add' 'i_4' <Predicate = (!tmp_i8)> <Delay = 1.58> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.58> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 98 [1/1] (0.00ns)   --->   "%i_4_cast = sext i2 %i_4 to i8" [buf4bug3.cpp:126->buf4bug3.cpp:229]   --->   Operation 98 'sext' 'i_4_cast' <Predicate = (!tmp_i8)> <Delay = 0.00>
ST_11 : Operation 99 [1/1] (0.00ns)   --->   "%tmp_i9 = zext i8 %i_4_cast to i64" [buf4bug3.cpp:128->buf4bug3.cpp:229]   --->   Operation 99 'zext' 'tmp_i9' <Predicate = (!tmp_i8)> <Delay = 0.00>
ST_11 : Operation 100 [1/1] (0.00ns)   --->   "%ctx_body_key_addr_2 = getelementptr [32 x i1]* %ctx_body_key, i64 0, i64 %tmp_i9" [buf4bug3.cpp:128->buf4bug3.cpp:229]   --->   Operation 100 'getelementptr' 'ctx_body_key_addr_2' <Predicate = (!tmp_i8)> <Delay = 0.00>
ST_11 : Operation 101 [2/2] (2.15ns)   --->   "%ctx_body_key_load = load i1* %ctx_body_key_addr_2, align 1" [buf4bug3.cpp:128->buf4bug3.cpp:229]   --->   Operation 101 'load' 'ctx_body_key_load' <Predicate = (!tmp_i8)> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 32> <RAM>
ST_11 : Operation 102 [1/1] (0.93ns)   --->   "%cond3 = icmp eq i2 %i_i7, 1" [buf4bug3.cpp:128->buf4bug3.cpp:229]   --->   Operation 102 'icmp' 'cond3' <Predicate = (!tmp_i8)> <Delay = 0.93> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 8> <Delay = 4.89>
ST_12 : Operation 103 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str2) nounwind" [buf4bug3.cpp:126->buf4bug3.cpp:229]   --->   Operation 103 'specloopname' <Predicate = (!tmp_i8)> <Delay = 0.00>
ST_12 : Operation 104 [1/1] (0.00ns)   --->   "%tmp_7_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([7 x i8]* @p_str2)" [buf4bug3.cpp:126->buf4bug3.cpp:229]   --->   Operation 104 'specregionbegin' 'tmp_7_i' <Predicate = (!tmp_i8)> <Delay = 0.00>
ST_12 : Operation 105 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [buf4bug3.cpp:127->buf4bug3.cpp:229]   --->   Operation 105 'specpipeline' <Predicate = (!tmp_i8)> <Delay = 0.00>
ST_12 : Operation 106 [1/2] (2.15ns)   --->   "%ctx_body_key_load = load i1* %ctx_body_key_addr_2, align 1" [buf4bug3.cpp:128->buf4bug3.cpp:229]   --->   Operation 106 'load' 'ctx_body_key_load' <Predicate = (!tmp_i8)> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 32> <RAM>
ST_12 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node tmp_34_i)   --->   "%extLd1 = zext i1 %ctx_body_key_load to i8" [buf4bug3.cpp:128->buf4bug3.cpp:229]   --->   Operation 107 'zext' 'extLd1' <Predicate = (!tmp_i8)> <Delay = 0.00>
ST_12 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node tmp_34_i)   --->   "%buf_load_i13_phi = select i1 %cond3, i8 %buf_4, i8 %buf13_4" [buf4bug3.cpp:128->buf4bug3.cpp:229]   --->   Operation 108 'select' 'buf_load_i13_phi' <Predicate = (!tmp_i8)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 109 [1/1] (1.37ns) (out node of the LUT)   --->   "%tmp_34_i = xor i8 %extLd1, %buf_load_i13_phi" [buf4bug3.cpp:128->buf4bug3.cpp:229]   --->   Operation 109 'xor' 'tmp_34_i' <Predicate = (!tmp_i8)> <Delay = 1.37> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.04> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 110 [1/1] (1.37ns)   --->   "%buf_5 = select i1 %cond3, i8 %tmp_34_i, i8 %buf_4" [buf4bug3.cpp:128->buf4bug3.cpp:229]   --->   Operation 110 'select' 'buf_5' <Predicate = (!tmp_i8)> <Delay = 1.37> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 111 [1/1] (1.37ns)   --->   "%buf13_5 = select i1 %cond3, i8 %buf13_4, i8 %tmp_34_i" [buf4bug3.cpp:128->buf4bug3.cpp:229]   --->   Operation 111 'select' 'buf13_5' <Predicate = (!tmp_i8)> <Delay = 1.37> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 112 [1/1] (0.00ns)   --->   "%empty_16 = call i32 (...)* @_ssdm_op_SpecRegionEnd([7 x i8]* @p_str2, i32 %tmp_7_i)" [buf4bug3.cpp:129->buf4bug3.cpp:229]   --->   Operation 112 'specregionend' 'empty_16' <Predicate = (!tmp_i8)> <Delay = 0.00>
ST_12 : Operation 113 [1/1] (0.00ns)   --->   "br label %aes_subBytes.exit" [buf4bug3.cpp:129->buf4bug3.cpp:229]   --->   Operation 113 'br' <Predicate = (!tmp_i8)> <Delay = 0.00>

State 13 <SV = 8> <Delay = 0.00>
ST_13 : Operation 114 [1/1] (0.00ns)   --->   "%mrv = insertvalue { i8, i8 } undef, i8 %buf_4, 0" [buf4bug3.cpp:230]   --->   Operation 114 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 115 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue { i8, i8 } %mrv, i8 %buf13_4, 1" [buf4bug3.cpp:230]   --->   Operation 115 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 116 [1/1] (0.00ns)   --->   "ret { i8, i8 } %mrv_1" [buf4bug3.cpp:230]   --->   Operation 116 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 50ns, clock uncertainty: 6.25ns.

 <State 1>: 1.66ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', buf4bug3.cpp:208) [11]  (1.66 ns)

 <State 2>: 2.15ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', buf4bug3.cpp:208) [11]  (0 ns)
	'getelementptr' operation ('k_addr', buf4bug3.cpp:210) [21]  (0 ns)
	'load' operation ('k_load', buf4bug3.cpp:210) on array 'k' [22]  (2.15 ns)

 <State 3>: 4.3ns
The critical path consists of the following:
	'load' operation ('k_load', buf4bug3.cpp:210) on array 'k' [22]  (2.15 ns)
	'store' operation (buf4bug3.cpp:210) of variable 'k_load', buf4bug3.cpp:210 on array 'ctx_body.enckey', buf4bug3.cpp:202 [24]  (2.15 ns)

 <State 4>: 1.66ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('buf', buf4bug3.cpp:139->buf4bug3.cpp:217) with incoming values : ('p_read_2') ('buf_1', buf4bug3.cpp:139->buf4bug3.cpp:217) [30]  (1.66 ns)

 <State 5>: 4.84ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', buf4bug3.cpp:137->buf4bug3.cpp:217) [32]  (0 ns)
	'add' operation ('i', buf4bug3.cpp:137->buf4bug3.cpp:217) [37]  (1.58 ns)
	'xor' operation ('tmp_32_i', buf4bug3.cpp:139->buf4bug3.cpp:217) [54]  (1.1 ns)
	'getelementptr' operation ('ctx_body_enckey_addr_2', buf4bug3.cpp:139->buf4bug3.cpp:217) [56]  (0 ns)
	'load' operation ('ctx_body_enckey_load_1', buf4bug3.cpp:139->buf4bug3.cpp:217) on array 'ctx_body.enckey', buf4bug3.cpp:202 [57]  (2.15 ns)

 <State 6>: 4.89ns
The critical path consists of the following:
	'load' operation ('ctx_body_enckey_load', buf4bug3.cpp:139->buf4bug3.cpp:217) on array 'ctx_body.enckey', buf4bug3.cpp:202 [44]  (2.15 ns)
	'xor' operation ('tmp_30_i', buf4bug3.cpp:139->buf4bug3.cpp:217) [50]  (1.37 ns)
	'select' operation ('buf_1', buf4bug3.cpp:139->buf4bug3.cpp:217) [51]  (1.37 ns)

 <State 7>: 1.66ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('buf_2', buf4bug3.cpp:117->buf4bug3.cpp:226) with incoming values : ('p_read_2') ('buf_1', buf4bug3.cpp:139->buf4bug3.cpp:217) ('buf_3', buf4bug3.cpp:117->buf4bug3.cpp:226) [65]  (1.66 ns)

 <State 8>: 5.56ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', buf4bug3.cpp:115->buf4bug3.cpp:226) [67]  (0 ns)
	'icmp' operation ('cond1', buf4bug3.cpp:117->buf4bug3.cpp:226) [76]  (0.937 ns)
	'select' operation ('buf_load_i5_phi', buf4bug3.cpp:117->buf4bug3.cpp:226) [77]  (1.37 ns)
	'getelementptr' operation ('sbox_addr', buf4bug3.cpp:117->buf4bug3.cpp:226) [79]  (0 ns)
	'load' operation ('sbox_load', buf4bug3.cpp:117->buf4bug3.cpp:226) on array 'sbox' [80]  (3.26 ns)

 <State 9>: 9.25ns
The critical path consists of the following:
	'load' operation ('sbox_load', buf4bug3.cpp:117->buf4bug3.cpp:226) on array 'sbox' [80]  (3.26 ns)
	'select' operation ('buf_3', buf4bug3.cpp:117->buf4bug3.cpp:226) [81]  (1.37 ns)
	'phi' operation ('buf_2', buf4bug3.cpp:117->buf4bug3.cpp:226) with incoming values : ('p_read_2') ('buf_1', buf4bug3.cpp:139->buf4bug3.cpp:217) ('buf_3', buf4bug3.cpp:117->buf4bug3.cpp:226) [65]  (0 ns)
	'select' operation ('buf_load_i5_phi', buf4bug3.cpp:117->buf4bug3.cpp:226) [77]  (1.37 ns)
	'getelementptr' operation ('sbox_addr', buf4bug3.cpp:117->buf4bug3.cpp:226) [79]  (0 ns)
	'load' operation ('sbox_load', buf4bug3.cpp:117->buf4bug3.cpp:226) on array 'sbox' [80]  (3.26 ns)

 <State 10>: 1.66ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('buf_4', buf4bug3.cpp:128->buf4bug3.cpp:229) with incoming values : ('p_read_2') ('buf_1', buf4bug3.cpp:139->buf4bug3.cpp:217) ('buf_3', buf4bug3.cpp:117->buf4bug3.cpp:226) ('buf_5', buf4bug3.cpp:128->buf4bug3.cpp:229) [88]  (1.66 ns)

 <State 11>: 3.74ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', buf4bug3.cpp:126->buf4bug3.cpp:229) [90]  (0 ns)
	'add' operation ('i', buf4bug3.cpp:126->buf4bug3.cpp:229) [95]  (1.58 ns)
	'getelementptr' operation ('ctx_body_key_addr_2', buf4bug3.cpp:128->buf4bug3.cpp:229) [101]  (0 ns)
	'load' operation ('ctx_body_key_load', buf4bug3.cpp:128->buf4bug3.cpp:229) on array 'ctx_body.key', buf4bug3.cpp:202 [102]  (2.15 ns)

 <State 12>: 4.89ns
The critical path consists of the following:
	'load' operation ('ctx_body_key_load', buf4bug3.cpp:128->buf4bug3.cpp:229) on array 'ctx_body.key', buf4bug3.cpp:202 [102]  (2.15 ns)
	'xor' operation ('tmp_34_i', buf4bug3.cpp:128->buf4bug3.cpp:229) [106]  (1.37 ns)
	'select' operation ('buf_5', buf4bug3.cpp:128->buf4bug3.cpp:229) [107]  (1.37 ns)

 <State 13>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
