// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "workload.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic workload::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic workload::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> workload::ap_ST_fsm_state1 = "1";
const sc_lv<11> workload::ap_ST_fsm_state2 = "10";
const sc_lv<11> workload::ap_ST_fsm_state3 = "100";
const sc_lv<11> workload::ap_ST_fsm_state4 = "1000";
const sc_lv<11> workload::ap_ST_fsm_state5 = "10000";
const sc_lv<11> workload::ap_ST_fsm_state6 = "100000";
const sc_lv<11> workload::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> workload::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> workload::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> workload::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> workload::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> workload::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> workload::ap_const_lv32_1 = "1";
const sc_lv<32> workload::ap_const_lv32_2 = "10";
const sc_lv<32> workload::ap_const_lv32_4 = "100";
const sc_lv<1> workload::ap_const_lv1_0 = "0";
const sc_lv<32> workload::ap_const_lv32_5 = "101";
const sc_lv<32> workload::ap_const_lv32_6 = "110";
const sc_lv<1> workload::ap_const_lv1_1 = "1";
const sc_lv<32> workload::ap_const_lv32_8 = "1000";
const bool workload::ap_const_boolean_0 = false;
const sc_lv<32> workload::ap_const_lv32_9 = "1001";
const sc_lv<32> workload::ap_const_lv32_A = "1010";
const sc_lv<6> workload::ap_const_lv6_0 = "000000";
const sc_lv<32> workload::ap_const_lv32_3 = "11";
const sc_lv<2> workload::ap_const_lv2_0 = "00";
const sc_lv<32> workload::ap_const_lv32_7 = "111";
const sc_lv<3> workload::ap_const_lv3_0 = "000";
const sc_lv<6> workload::ap_const_lv6_20 = "100000";
const sc_lv<6> workload::ap_const_lv6_1 = "1";
const sc_lv<2> workload::ap_const_lv2_2 = "10";
const sc_lv<2> workload::ap_const_lv2_1 = "1";
const sc_lv<3> workload::ap_const_lv3_4 = "100";
const sc_lv<3> workload::ap_const_lv3_1 = "1";
const bool workload::ap_const_boolean_1 = true;

workload::workload(sc_module_name name) : sc_module(name), mVcdFile(0) {
    local_key_0_U = new workload_local_key_0("local_key_0_U");
    local_key_0_U->clk(ap_clk);
    local_key_0_U->reset(ap_rst);
    local_key_0_U->address0(grp_aes256_encrypt_ecb_fu_359_k_address0);
    local_key_0_U->ce0(grp_aes256_encrypt_ecb_fu_359_k_ce0);
    local_key_0_U->q0(local_key_0_q0);
    local_key_1_U = new workload_local_key_0("local_key_1_U");
    local_key_1_U->clk(ap_clk);
    local_key_1_U->reset(ap_rst);
    local_key_1_U->address0(grp_aes256_encrypt_ecb_fu_371_k_address0);
    local_key_1_U->ce0(grp_aes256_encrypt_ecb_fu_371_k_ce0);
    local_key_1_U->q0(local_key_1_q0);
    grp_aes256_encrypt_ecb_fu_359 = new aes256_encrypt_ecb("grp_aes256_encrypt_ecb_fu_359");
    grp_aes256_encrypt_ecb_fu_359->ap_clk(ap_clk);
    grp_aes256_encrypt_ecb_fu_359->ap_rst(ap_rst);
    grp_aes256_encrypt_ecb_fu_359->ap_start(grp_aes256_encrypt_ecb_fu_359_ap_start);
    grp_aes256_encrypt_ecb_fu_359->ap_done(grp_aes256_encrypt_ecb_fu_359_ap_done);
    grp_aes256_encrypt_ecb_fu_359->ap_idle(grp_aes256_encrypt_ecb_fu_359_ap_idle);
    grp_aes256_encrypt_ecb_fu_359->ap_ready(grp_aes256_encrypt_ecb_fu_359_ap_ready);
    grp_aes256_encrypt_ecb_fu_359->k_address0(grp_aes256_encrypt_ecb_fu_359_k_address0);
    grp_aes256_encrypt_ecb_fu_359->k_ce0(grp_aes256_encrypt_ecb_fu_359_k_ce0);
    grp_aes256_encrypt_ecb_fu_359->k_q0(local_key_0_q0);
    grp_aes256_encrypt_ecb_fu_359->p_read(buf_0_0_1_reg_208);
    grp_aes256_encrypt_ecb_fu_359->p_read1(buf_0_1_1_reg_197);
    grp_aes256_encrypt_ecb_fu_359->ap_return_0(grp_aes256_encrypt_ecb_fu_359_ap_return_0);
    grp_aes256_encrypt_ecb_fu_359->ap_return_1(grp_aes256_encrypt_ecb_fu_359_ap_return_1);
    grp_aes256_encrypt_ecb_fu_371 = new aes256_encrypt_ecb("grp_aes256_encrypt_ecb_fu_371");
    grp_aes256_encrypt_ecb_fu_371->ap_clk(ap_clk);
    grp_aes256_encrypt_ecb_fu_371->ap_rst(ap_rst);
    grp_aes256_encrypt_ecb_fu_371->ap_start(grp_aes256_encrypt_ecb_fu_371_ap_start);
    grp_aes256_encrypt_ecb_fu_371->ap_done(grp_aes256_encrypt_ecb_fu_371_ap_done);
    grp_aes256_encrypt_ecb_fu_371->ap_idle(grp_aes256_encrypt_ecb_fu_371_ap_idle);
    grp_aes256_encrypt_ecb_fu_371->ap_ready(grp_aes256_encrypt_ecb_fu_371_ap_ready);
    grp_aes256_encrypt_ecb_fu_371->k_address0(grp_aes256_encrypt_ecb_fu_371_k_address0);
    grp_aes256_encrypt_ecb_fu_371->k_ce0(grp_aes256_encrypt_ecb_fu_371_k_ce0);
    grp_aes256_encrypt_ecb_fu_371->k_q0(local_key_1_q0);
    grp_aes256_encrypt_ecb_fu_371->p_read(buf_1_0_1_reg_186);
    grp_aes256_encrypt_ecb_fu_371->p_read1(buf_1_1_1_reg_175);
    grp_aes256_encrypt_ecb_fu_371->ap_return_0(grp_aes256_encrypt_ecb_fu_371_ap_return_0);
    grp_aes256_encrypt_ecb_fu_371->ap_return_1(grp_aes256_encrypt_ecb_fu_371_ap_return_1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state9_on_subcall_done);
    sensitive << ( grp_aes256_encrypt_ecb_fu_359_ap_done );
    sensitive << ( grp_aes256_encrypt_ecb_fu_371_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_phi_mux_i_2_phi_fu_167_p4 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_i_2_phi_fu_167_p4);
    sensitive << ( i_2_reg_162 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_phi_mux_i_2_phi_fu_167_p4 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buf_0_load_phi_fu_547_p3);
    sensitive << ( buf_0_0_3_reg_657 );
    sensitive << ( buf_0_1_3_reg_663 );
    sensitive << ( tmp_8_fu_537_p1 );

    SC_METHOD(thread_buf_1_1_4_fu_471_p3);
    sensitive << ( data_q0 );
    sensitive << ( tmp_7_reg_629 );
    sensitive << ( buf_1_1_2_reg_230 );

    SC_METHOD(thread_buf_1_1_6_fu_478_p3);
    sensitive << ( data_q0 );
    sensitive << ( tmp_7_reg_629 );
    sensitive << ( buf_1_0_2_reg_242 );

    SC_METHOD(thread_buf_1_1_7_fu_457_p3);
    sensitive << ( data_q0 );
    sensitive << ( tmp_7_reg_629 );
    sensitive << ( buf_0_1_2_reg_254 );

    SC_METHOD(thread_buf_1_1_8_fu_464_p3);
    sensitive << ( data_q0 );
    sensitive << ( tmp_7_reg_629 );
    sensitive << ( buf_0_0_2_reg_266 );

    SC_METHOD(thread_buf_1_load_phi_fu_541_p3);
    sensitive << ( buf_1_0_3_reg_669 );
    sensitive << ( buf_1_1_3_reg_675 );
    sensitive << ( tmp_8_fu_537_p1 );

    SC_METHOD(thread_data_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( sum_cast_fu_448_p1 );
    sensitive << ( sum2_cast_fu_575_p1 );

    SC_METHOD(thread_data_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_data_d0);
    sensitive << ( tmp_3_reg_689 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( buf_1_load_phi_fu_541_p3 );
    sensitive << ( buf_0_load_phi_fu_547_p3 );

    SC_METHOD(thread_data_we0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_525_p2 );

    SC_METHOD(thread_exitcond2_fu_383_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_reg_103 );

    SC_METHOD(thread_exitcond3_fu_398_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j_1_reg_219 );

    SC_METHOD(thread_exitcond5_fu_422_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( k_reg_278 );

    SC_METHOD(thread_exitcond6_fu_501_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( j_3_reg_337 );

    SC_METHOD(thread_exitcond_fu_525_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( k_1_reg_348 );

    SC_METHOD(thread_grp_aes256_encrypt_ecb_fu_359_ap_start);
    sensitive << ( grp_aes256_encrypt_ecb_fu_359_ap_start_reg );

    SC_METHOD(thread_grp_aes256_encrypt_ecb_fu_371_ap_start);
    sensitive << ( grp_aes256_encrypt_ecb_fu_371_ap_start_reg );

    SC_METHOD(thread_j_2_fu_389_p2);
    sensitive << ( j_reg_103 );

    SC_METHOD(thread_j_4_fu_404_p2);
    sensitive << ( j_1_reg_219 );

    SC_METHOD(thread_j_5_fu_507_p2);
    sensitive << ( j_3_reg_337 );

    SC_METHOD(thread_k_2_fu_428_p2);
    sensitive << ( k_reg_278 );

    SC_METHOD(thread_k_3_fu_531_p2);
    sensitive << ( k_1_reg_348 );

    SC_METHOD(thread_sum2_cast_fu_575_p1);
    sensitive << ( sum2_fu_570_p2 );

    SC_METHOD(thread_sum2_fu_570_p2);
    sensitive << ( tmp7_cast_reg_593 );
    sensitive << ( tmp10_cast_fu_566_p1 );

    SC_METHOD(thread_sum_cast_fu_448_p1);
    sensitive << ( sum_fu_443_p2 );

    SC_METHOD(thread_sum_fu_443_p2);
    sensitive << ( tmp7_cast_reg_593 );
    sensitive << ( tmp8_cast_fu_439_p1 );

    SC_METHOD(thread_tmp10_cast_fu_566_p1);
    sensitive << ( tmp1_fu_561_p2 );

    SC_METHOD(thread_tmp1_fu_561_p2);
    sensitive << ( tmp_9_reg_694 );
    sensitive << ( k_1_reg_348 );

    SC_METHOD(thread_tmp7_cast_fu_395_p1);
    sensitive << ( data_offset );

    SC_METHOD(thread_tmp8_cast_fu_439_p1);
    sensitive << ( tmp8_fu_434_p2 );

    SC_METHOD(thread_tmp8_fu_434_p2);
    sensitive << ( tmp_2_reg_611 );
    sensitive << ( k_reg_278 );

    SC_METHOD(thread_tmp_1_fu_410_p1);
    sensitive << ( j_1_reg_219 );

    SC_METHOD(thread_tmp_2_fu_414_p3);
    sensitive << ( tmp_1_fu_410_p1 );

    SC_METHOD(thread_tmp_3_fu_513_p1);
    sensitive << ( j_3_reg_337 );

    SC_METHOD(thread_tmp_7_fu_453_p1);
    sensitive << ( k_reg_278 );

    SC_METHOD(thread_tmp_8_fu_537_p1);
    sensitive << ( k_1_reg_348 );

    SC_METHOD(thread_tmp_9_fu_517_p3);
    sensitive << ( tmp_3_fu_513_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond3_fu_398_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond5_fu_422_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_block_state9_on_subcall_done );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond6_fu_501_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond2_fu_383_p2 );
    sensitive << ( ap_phi_mux_i_2_phi_fu_167_p4 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_525_p2 );

    ap_CS_fsm = "00000000001";
    grp_aes256_encrypt_ecb_fu_359_ap_start_reg = SC_LOGIC_0;
    grp_aes256_encrypt_ecb_fu_371_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "workload_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_address0, "(port)data_address0");
    sc_trace(mVcdFile, data_ce0, "(port)data_ce0");
    sc_trace(mVcdFile, data_we0, "(port)data_we0");
    sc_trace(mVcdFile, data_d0, "(port)data_d0");
    sc_trace(mVcdFile, data_q0, "(port)data_q0");
    sc_trace(mVcdFile, data_offset, "(port)data_offset");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, local_key_0_q0, "local_key_0_q0");
    sc_trace(mVcdFile, local_key_1_q0, "local_key_1_q0");
    sc_trace(mVcdFile, j_2_fu_389_p2, "j_2_fu_389_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp7_cast_fu_395_p1, "tmp7_cast_fu_395_p1");
    sc_trace(mVcdFile, tmp7_cast_reg_593, "tmp7_cast_reg_593");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, j_4_fu_404_p2, "j_4_fu_404_p2");
    sc_trace(mVcdFile, j_4_reg_602, "j_4_reg_602");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_1_fu_410_p1, "tmp_1_fu_410_p1");
    sc_trace(mVcdFile, tmp_1_reg_607, "tmp_1_reg_607");
    sc_trace(mVcdFile, exitcond3_fu_398_p2, "exitcond3_fu_398_p2");
    sc_trace(mVcdFile, tmp_2_fu_414_p3, "tmp_2_fu_414_p3");
    sc_trace(mVcdFile, tmp_2_reg_611, "tmp_2_reg_611");
    sc_trace(mVcdFile, k_2_fu_428_p2, "k_2_fu_428_p2");
    sc_trace(mVcdFile, k_2_reg_619, "k_2_reg_619");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, exitcond5_fu_422_p2, "exitcond5_fu_422_p2");
    sc_trace(mVcdFile, tmp_7_fu_453_p1, "tmp_7_fu_453_p1");
    sc_trace(mVcdFile, tmp_7_reg_629, "tmp_7_reg_629");
    sc_trace(mVcdFile, buf_1_1_7_fu_457_p3, "buf_1_1_7_fu_457_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, buf_1_1_8_fu_464_p3, "buf_1_1_8_fu_464_p3");
    sc_trace(mVcdFile, buf_1_1_4_fu_471_p3, "buf_1_1_4_fu_471_p3");
    sc_trace(mVcdFile, buf_1_1_6_fu_478_p3, "buf_1_1_6_fu_478_p3");
    sc_trace(mVcdFile, buf_0_0_3_reg_657, "buf_0_0_3_reg_657");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_359_ap_ready, "grp_aes256_encrypt_ecb_fu_359_ap_ready");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_359_ap_done, "grp_aes256_encrypt_ecb_fu_359_ap_done");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_371_ap_ready, "grp_aes256_encrypt_ecb_fu_371_ap_ready");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_371_ap_done, "grp_aes256_encrypt_ecb_fu_371_ap_done");
    sc_trace(mVcdFile, ap_block_state9_on_subcall_done, "ap_block_state9_on_subcall_done");
    sc_trace(mVcdFile, buf_0_1_3_reg_663, "buf_0_1_3_reg_663");
    sc_trace(mVcdFile, buf_1_0_3_reg_669, "buf_1_0_3_reg_669");
    sc_trace(mVcdFile, buf_1_1_3_reg_675, "buf_1_1_3_reg_675");
    sc_trace(mVcdFile, j_5_fu_507_p2, "j_5_fu_507_p2");
    sc_trace(mVcdFile, j_5_reg_684, "j_5_reg_684");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_3_fu_513_p1, "tmp_3_fu_513_p1");
    sc_trace(mVcdFile, tmp_3_reg_689, "tmp_3_reg_689");
    sc_trace(mVcdFile, exitcond6_fu_501_p2, "exitcond6_fu_501_p2");
    sc_trace(mVcdFile, tmp_9_fu_517_p3, "tmp_9_fu_517_p3");
    sc_trace(mVcdFile, tmp_9_reg_694, "tmp_9_reg_694");
    sc_trace(mVcdFile, k_3_fu_531_p2, "k_3_fu_531_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_359_ap_start, "grp_aes256_encrypt_ecb_fu_359_ap_start");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_359_ap_idle, "grp_aes256_encrypt_ecb_fu_359_ap_idle");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_359_k_address0, "grp_aes256_encrypt_ecb_fu_359_k_address0");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_359_k_ce0, "grp_aes256_encrypt_ecb_fu_359_k_ce0");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_359_ap_return_0, "grp_aes256_encrypt_ecb_fu_359_ap_return_0");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_359_ap_return_1, "grp_aes256_encrypt_ecb_fu_359_ap_return_1");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_371_ap_start, "grp_aes256_encrypt_ecb_fu_371_ap_start");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_371_ap_idle, "grp_aes256_encrypt_ecb_fu_371_ap_idle");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_371_k_address0, "grp_aes256_encrypt_ecb_fu_371_k_address0");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_371_k_ce0, "grp_aes256_encrypt_ecb_fu_371_k_ce0");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_371_ap_return_0, "grp_aes256_encrypt_ecb_fu_371_ap_return_0");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_371_ap_return_1, "grp_aes256_encrypt_ecb_fu_371_ap_return_1");
    sc_trace(mVcdFile, j_reg_103, "j_reg_103");
    sc_trace(mVcdFile, exitcond2_fu_383_p2, "exitcond2_fu_383_p2");
    sc_trace(mVcdFile, buf_1_1_reg_114, "buf_1_1_reg_114");
    sc_trace(mVcdFile, buf_1_0_reg_126, "buf_1_0_reg_126");
    sc_trace(mVcdFile, buf_0_1_reg_138, "buf_0_1_reg_138");
    sc_trace(mVcdFile, buf_0_0_reg_150, "buf_0_0_reg_150");
    sc_trace(mVcdFile, ap_phi_mux_i_2_phi_fu_167_p4, "ap_phi_mux_i_2_phi_fu_167_p4");
    sc_trace(mVcdFile, i_2_reg_162, "i_2_reg_162");
    sc_trace(mVcdFile, buf_1_1_1_reg_175, "buf_1_1_1_reg_175");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, buf_1_0_1_reg_186, "buf_1_0_1_reg_186");
    sc_trace(mVcdFile, buf_0_1_1_reg_197, "buf_0_1_1_reg_197");
    sc_trace(mVcdFile, buf_0_0_1_reg_208, "buf_0_0_1_reg_208");
    sc_trace(mVcdFile, j_1_reg_219, "j_1_reg_219");
    sc_trace(mVcdFile, buf_1_1_2_reg_230, "buf_1_1_2_reg_230");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, buf_1_0_2_reg_242, "buf_1_0_2_reg_242");
    sc_trace(mVcdFile, buf_0_1_2_reg_254, "buf_0_1_2_reg_254");
    sc_trace(mVcdFile, buf_0_0_2_reg_266, "buf_0_0_2_reg_266");
    sc_trace(mVcdFile, k_reg_278, "k_reg_278");
    sc_trace(mVcdFile, buf_1_1_2_be_reg_289, "buf_1_1_2_be_reg_289");
    sc_trace(mVcdFile, buf_1_0_2_be_reg_301, "buf_1_0_2_be_reg_301");
    sc_trace(mVcdFile, buf_0_1_2_be_reg_313, "buf_0_1_2_be_reg_313");
    sc_trace(mVcdFile, buf_0_0_2_be_reg_325, "buf_0_0_2_be_reg_325");
    sc_trace(mVcdFile, j_3_reg_337, "j_3_reg_337");
    sc_trace(mVcdFile, exitcond_fu_525_p2, "exitcond_fu_525_p2");
    sc_trace(mVcdFile, k_1_reg_348, "k_1_reg_348");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_359_ap_start_reg, "grp_aes256_encrypt_ecb_fu_359_ap_start_reg");
    sc_trace(mVcdFile, grp_aes256_encrypt_ecb_fu_371_ap_start_reg, "grp_aes256_encrypt_ecb_fu_371_ap_start_reg");
    sc_trace(mVcdFile, sum_cast_fu_448_p1, "sum_cast_fu_448_p1");
    sc_trace(mVcdFile, sum2_cast_fu_575_p1, "sum2_cast_fu_575_p1");
    sc_trace(mVcdFile, tmp8_fu_434_p2, "tmp8_fu_434_p2");
    sc_trace(mVcdFile, tmp8_cast_fu_439_p1, "tmp8_cast_fu_439_p1");
    sc_trace(mVcdFile, sum_fu_443_p2, "sum_fu_443_p2");
    sc_trace(mVcdFile, tmp_8_fu_537_p1, "tmp_8_fu_537_p1");
    sc_trace(mVcdFile, buf_1_load_phi_fu_541_p3, "buf_1_load_phi_fu_541_p3");
    sc_trace(mVcdFile, buf_0_load_phi_fu_547_p3, "buf_0_load_phi_fu_547_p3");
    sc_trace(mVcdFile, tmp1_fu_561_p2, "tmp1_fu_561_p2");
    sc_trace(mVcdFile, tmp10_cast_fu_566_p1, "tmp10_cast_fu_566_p1");
    sc_trace(mVcdFile, sum2_fu_570_p2, "sum2_fu_570_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

workload::~workload() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete local_key_0_U;
    delete local_key_1_U;
    delete grp_aes256_encrypt_ecb_fu_359;
    delete grp_aes256_encrypt_ecb_fu_371;
}

void workload::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(exitcond5_fu_422_p2.read(), ap_const_lv1_1))) {
        buf_0_0_1_reg_208 = buf_0_0_2_reg_266.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_i_2_phi_fu_167_p4.read()))) {
        buf_0_0_1_reg_208 = buf_0_0_reg_150.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        if (esl_seteq<1,1,1>(tmp_1_reg_607.read(), ap_const_lv1_0)) {
            buf_0_0_2_be_reg_325 = buf_1_1_8_fu_464_p3.read();
        } else if (esl_seteq<1,1,1>(tmp_1_reg_607.read(), ap_const_lv1_1)) {
            buf_0_0_2_be_reg_325 = buf_0_0_2_reg_266.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        buf_0_0_2_reg_266 = buf_0_0_2_be_reg_325.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_398_p2.read(), ap_const_lv1_0))) {
        buf_0_0_2_reg_266 = buf_0_0_1_reg_208.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(exitcond5_fu_422_p2.read(), ap_const_lv1_1))) {
        buf_0_1_1_reg_197 = buf_0_1_2_reg_254.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_i_2_phi_fu_167_p4.read()))) {
        buf_0_1_1_reg_197 = buf_0_1_reg_138.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        if (esl_seteq<1,1,1>(tmp_1_reg_607.read(), ap_const_lv1_0)) {
            buf_0_1_2_be_reg_313 = buf_1_1_7_fu_457_p3.read();
        } else if (esl_seteq<1,1,1>(tmp_1_reg_607.read(), ap_const_lv1_1)) {
            buf_0_1_2_be_reg_313 = buf_0_1_2_reg_254.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        buf_0_1_2_reg_254 = buf_0_1_2_be_reg_313.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_398_p2.read(), ap_const_lv1_0))) {
        buf_0_1_2_reg_254 = buf_0_1_1_reg_197.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(exitcond5_fu_422_p2.read(), ap_const_lv1_1))) {
        buf_1_0_1_reg_186 = buf_1_0_2_reg_242.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_i_2_phi_fu_167_p4.read()))) {
        buf_1_0_1_reg_186 = buf_1_0_reg_126.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        if (esl_seteq<1,1,1>(tmp_1_reg_607.read(), ap_const_lv1_0)) {
            buf_1_0_2_be_reg_301 = buf_1_0_2_reg_242.read();
        } else if (esl_seteq<1,1,1>(tmp_1_reg_607.read(), ap_const_lv1_1)) {
            buf_1_0_2_be_reg_301 = buf_1_1_6_fu_478_p3.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        buf_1_0_2_reg_242 = buf_1_0_2_be_reg_301.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_398_p2.read(), ap_const_lv1_0))) {
        buf_1_0_2_reg_242 = buf_1_0_1_reg_186.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(exitcond5_fu_422_p2.read(), ap_const_lv1_1))) {
        buf_1_1_1_reg_175 = buf_1_1_2_reg_230.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_i_2_phi_fu_167_p4.read()))) {
        buf_1_1_1_reg_175 = buf_1_1_reg_114.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        if (esl_seteq<1,1,1>(tmp_1_reg_607.read(), ap_const_lv1_0)) {
            buf_1_1_2_be_reg_289 = buf_1_1_2_reg_230.read();
        } else if (esl_seteq<1,1,1>(tmp_1_reg_607.read(), ap_const_lv1_1)) {
            buf_1_1_2_be_reg_289 = buf_1_1_4_fu_471_p3.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        buf_1_1_2_reg_230 = buf_1_1_2_be_reg_289.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_398_p2.read(), ap_const_lv1_0))) {
        buf_1_1_2_reg_230 = buf_1_1_1_reg_175.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_aes256_encrypt_ecb_fu_359_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
             esl_seteq<1,1,1>(exitcond3_fu_398_p2.read(), ap_const_lv1_1))) {
            grp_aes256_encrypt_ecb_fu_359_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_aes256_encrypt_ecb_fu_359_ap_ready.read())) {
            grp_aes256_encrypt_ecb_fu_359_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_aes256_encrypt_ecb_fu_371_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
             esl_seteq<1,1,1>(exitcond3_fu_398_p2.read(), ap_const_lv1_1))) {
            grp_aes256_encrypt_ecb_fu_371_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_aes256_encrypt_ecb_fu_371_ap_ready.read())) {
            grp_aes256_encrypt_ecb_fu_371_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_2_reg_162 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_501_p2.read()))) {
        i_2_reg_162 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(exitcond5_fu_422_p2.read(), ap_const_lv1_1))) {
        j_1_reg_219 = j_4_reg_602.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_i_2_phi_fu_167_p4.read()))) {
        j_1_reg_219 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0))) {
        j_3_reg_337 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_525_p2.read()))) {
        j_3_reg_337 = j_5_reg_684.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_reg_103 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_383_p2.read()))) {
        j_reg_103 = j_2_fu_389_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_525_p2.read()))) {
        k_1_reg_348 = k_3_fu_531_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_501_p2.read()))) {
        k_1_reg_348 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        k_reg_278 = k_2_reg_619.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_398_p2.read(), ap_const_lv1_0))) {
        k_reg_278 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0))) {
        buf_0_0_3_reg_657 = grp_aes256_encrypt_ecb_fu_359_ap_return_0.read();
        buf_0_1_3_reg_663 = grp_aes256_encrypt_ecb_fu_359_ap_return_1.read();
        buf_1_0_3_reg_669 = grp_aes256_encrypt_ecb_fu_371_ap_return_0.read();
        buf_1_1_3_reg_675 = grp_aes256_encrypt_ecb_fu_371_ap_return_1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_501_p2.read()))) {
        buf_0_0_reg_150 = buf_0_0_3_reg_657.read();
        buf_0_1_reg_138 = buf_0_1_3_reg_663.read();
        buf_1_0_reg_126 = buf_1_0_3_reg_669.read();
        buf_1_1_reg_114 = buf_1_1_3_reg_675.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_4_reg_602 = j_4_fu_404_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        j_5_reg_684 = j_5_fu_507_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        k_2_reg_619 = k_2_fu_428_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tmp7_cast_reg_593 = tmp7_cast_fu_395_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond3_fu_398_p2.read(), ap_const_lv1_0))) {
        tmp_1_reg_607 = tmp_1_fu_410_p1.read();
        tmp_2_reg_611 = tmp_2_fu_414_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_501_p2.read()))) {
        tmp_3_reg_689 = tmp_3_fu_513_p1.read();
        tmp_9_reg_694 = tmp_9_fu_517_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_422_p2.read()))) {
        tmp_7_reg_629 = tmp_7_fu_453_p1.read();
    }
}

void workload::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void workload::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void workload::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void workload::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void workload::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void workload::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void workload::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void workload::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void workload::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void workload::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void workload::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void workload::thread_ap_block_state9_on_subcall_done() {
    ap_block_state9_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_aes256_encrypt_ecb_fu_359_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_aes256_encrypt_ecb_fu_371_ap_done.read()));
}

void workload::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_i_2_phi_fu_167_p4.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void workload::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void workload::thread_ap_phi_mux_i_2_phi_fu_167_p4() {
    ap_phi_mux_i_2_phi_fu_167_p4 = i_2_reg_162.read();
}

void workload::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_i_2_phi_fu_167_p4.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void workload::thread_buf_0_load_phi_fu_547_p3() {
    buf_0_load_phi_fu_547_p3 = (!tmp_8_fu_537_p1.read()[0].is_01())? sc_lv<8>(): ((tmp_8_fu_537_p1.read()[0].to_bool())? buf_0_1_3_reg_663.read(): buf_0_0_3_reg_657.read());
}

void workload::thread_buf_1_1_4_fu_471_p3() {
    buf_1_1_4_fu_471_p3 = (!tmp_7_reg_629.read()[0].is_01())? sc_lv<8>(): ((tmp_7_reg_629.read()[0].to_bool())? data_q0.read(): buf_1_1_2_reg_230.read());
}

void workload::thread_buf_1_1_6_fu_478_p3() {
    buf_1_1_6_fu_478_p3 = (!tmp_7_reg_629.read()[0].is_01())? sc_lv<8>(): ((tmp_7_reg_629.read()[0].to_bool())? buf_1_0_2_reg_242.read(): data_q0.read());
}

void workload::thread_buf_1_1_7_fu_457_p3() {
    buf_1_1_7_fu_457_p3 = (!tmp_7_reg_629.read()[0].is_01())? sc_lv<8>(): ((tmp_7_reg_629.read()[0].to_bool())? data_q0.read(): buf_0_1_2_reg_254.read());
}

void workload::thread_buf_1_1_8_fu_464_p3() {
    buf_1_1_8_fu_464_p3 = (!tmp_7_reg_629.read()[0].is_01())? sc_lv<8>(): ((tmp_7_reg_629.read()[0].to_bool())? buf_0_0_2_reg_266.read(): data_q0.read());
}

void workload::thread_buf_1_load_phi_fu_541_p3() {
    buf_1_load_phi_fu_541_p3 = (!tmp_8_fu_537_p1.read()[0].is_01())? sc_lv<8>(): ((tmp_8_fu_537_p1.read()[0].to_bool())? buf_1_1_3_reg_675.read(): buf_1_0_3_reg_669.read());
}

void workload::thread_data_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        data_address0 =  (sc_lv<4>) (sum2_cast_fu_575_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_address0 =  (sc_lv<4>) (sum_cast_fu_448_p1.read());
    } else {
        data_address0 = "XXXX";
    }
}

void workload::thread_data_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        data_ce0 = ap_const_logic_1;
    } else {
        data_ce0 = ap_const_logic_0;
    }
}

void workload::thread_data_d0() {
    data_d0 = (!tmp_3_reg_689.read()[0].is_01())? sc_lv<8>(): ((tmp_3_reg_689.read()[0].to_bool())? buf_1_load_phi_fu_541_p3.read(): buf_0_load_phi_fu_547_p3.read());
}

void workload::thread_data_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_525_p2.read()))) {
        data_we0 = ap_const_logic_1;
    } else {
        data_we0 = ap_const_logic_0;
    }
}

void workload::thread_exitcond2_fu_383_p2() {
    exitcond2_fu_383_p2 = (!j_reg_103.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_103.read() == ap_const_lv6_20);
}

void workload::thread_exitcond3_fu_398_p2() {
    exitcond3_fu_398_p2 = (!j_1_reg_219.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_219.read() == ap_const_lv2_2);
}

void workload::thread_exitcond5_fu_422_p2() {
    exitcond5_fu_422_p2 = (!k_reg_278.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_278.read() == ap_const_lv3_4);
}

void workload::thread_exitcond6_fu_501_p2() {
    exitcond6_fu_501_p2 = (!j_3_reg_337.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(j_3_reg_337.read() == ap_const_lv2_2);
}

void workload::thread_exitcond_fu_525_p2() {
    exitcond_fu_525_p2 = (!k_1_reg_348.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(k_1_reg_348.read() == ap_const_lv3_4);
}

void workload::thread_grp_aes256_encrypt_ecb_fu_359_ap_start() {
    grp_aes256_encrypt_ecb_fu_359_ap_start = grp_aes256_encrypt_ecb_fu_359_ap_start_reg.read();
}

void workload::thread_grp_aes256_encrypt_ecb_fu_371_ap_start() {
    grp_aes256_encrypt_ecb_fu_371_ap_start = grp_aes256_encrypt_ecb_fu_371_ap_start_reg.read();
}

void workload::thread_j_2_fu_389_p2() {
    j_2_fu_389_p2 = (!j_reg_103.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_reg_103.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void workload::thread_j_4_fu_404_p2() {
    j_4_fu_404_p2 = (!j_1_reg_219.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j_1_reg_219.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void workload::thread_j_5_fu_507_p2() {
    j_5_fu_507_p2 = (!j_3_reg_337.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j_3_reg_337.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void workload::thread_k_2_fu_428_p2() {
    k_2_fu_428_p2 = (!k_reg_278.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(k_reg_278.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void workload::thread_k_3_fu_531_p2() {
    k_3_fu_531_p2 = (!k_1_reg_348.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(k_1_reg_348.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void workload::thread_sum2_cast_fu_575_p1() {
    sum2_cast_fu_575_p1 = esl_zext<64,5>(sum2_fu_570_p2.read());
}

void workload::thread_sum2_fu_570_p2() {
    sum2_fu_570_p2 = (!tmp10_cast_fu_566_p1.read().is_01() || !tmp7_cast_reg_593.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp10_cast_fu_566_p1.read()) + sc_biguint<5>(tmp7_cast_reg_593.read()));
}

void workload::thread_sum_cast_fu_448_p1() {
    sum_cast_fu_448_p1 = esl_zext<64,5>(sum_fu_443_p2.read());
}

void workload::thread_sum_fu_443_p2() {
    sum_fu_443_p2 = (!tmp8_cast_fu_439_p1.read().is_01() || !tmp7_cast_reg_593.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp8_cast_fu_439_p1.read()) + sc_biguint<5>(tmp7_cast_reg_593.read()));
}

void workload::thread_tmp10_cast_fu_566_p1() {
    tmp10_cast_fu_566_p1 = esl_zext<5,3>(tmp1_fu_561_p2.read());
}

void workload::thread_tmp1_fu_561_p2() {
    tmp1_fu_561_p2 = (!tmp_9_reg_694.read().is_01() || !k_1_reg_348.read().is_01())? sc_lv<3>(): (sc_biguint<3>(tmp_9_reg_694.read()) + sc_biguint<3>(k_1_reg_348.read()));
}

void workload::thread_tmp7_cast_fu_395_p1() {
    tmp7_cast_fu_395_p1 = esl_zext<5,4>(data_offset.read());
}

void workload::thread_tmp8_cast_fu_439_p1() {
    tmp8_cast_fu_439_p1 = esl_zext<5,3>(tmp8_fu_434_p2.read());
}

void workload::thread_tmp8_fu_434_p2() {
    tmp8_fu_434_p2 = (!tmp_2_reg_611.read().is_01() || !k_reg_278.read().is_01())? sc_lv<3>(): (sc_biguint<3>(tmp_2_reg_611.read()) + sc_biguint<3>(k_reg_278.read()));
}

void workload::thread_tmp_1_fu_410_p1() {
    tmp_1_fu_410_p1 = j_1_reg_219.read().range(1-1, 0);
}

void workload::thread_tmp_2_fu_414_p3() {
    tmp_2_fu_414_p3 = esl_concat<1,2>(tmp_1_fu_410_p1.read(), ap_const_lv2_0);
}

void workload::thread_tmp_3_fu_513_p1() {
    tmp_3_fu_513_p1 = j_3_reg_337.read().range(1-1, 0);
}

void workload::thread_tmp_7_fu_453_p1() {
    tmp_7_fu_453_p1 = k_reg_278.read().range(1-1, 0);
}

void workload::thread_tmp_8_fu_537_p1() {
    tmp_8_fu_537_p1 = k_1_reg_348.read().range(1-1, 0);
}

void workload::thread_tmp_9_fu_517_p3() {
    tmp_9_fu_517_p3 = esl_concat<1,2>(tmp_3_fu_513_p1.read(), ap_const_lv2_0);
}

void workload::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_383_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_i_2_phi_fu_167_p4.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond3_fu_398_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(exitcond5_fu_422_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_block_state9_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_501_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_525_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

}

